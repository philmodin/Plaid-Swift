openapi: 3.0.0
servers:
- description: Production
  url: https://production.plaid.com
- description: Development
  url: https://development.plaid.com
- description: Sandbox
  url: https://sandbox.plaid.com
info:
  title: The Plaid API
  version: 2020-09-14_1.485.0
  description: The Plaid REST API. Please see https://plaid.com/docs/api for more details.
  contact:
    name: Plaid Developer Team
    url: https://plaid.com
  termsOfService: https://plaid.com/legal/
tags:
- name: plaid
  description: The Plaid API
security:
- clientId: []
  secret: []
  plaidVersion: []
paths:
  /accounts/get:
    x-plaid-business-unit-context: BUSINESS_UNIT_PLAID
    post:
      tags:
      - plaid
      summary: Retrieve accounts
      externalDocs:
        url: /api/accounts/#accountsget
      operationId: accountsGet
      description: |-
        The `/accounts/get` endpoint can be used to retrieve a list of accounts associated with any linked Item. Plaid will only return active bank accounts — that is, accounts that are not closed and are capable of carrying a balance.
        For items that went through the updated account selection pane, this endpoint only returns accounts that were permissioned by the user when they initially created the Item. If a user creates a new account after the initial link, you can capture this event through the [`NEW_ACCOUNTS_AVAILABLE`](https://plaid.com/docs/api/items/#new_accounts_available) webhook and then use Link's [update mode](https://plaid.com/docs/link/update-mode/) to request that the user share this new account with you.

        `/accounts/get` is free to use and retrieves cached information, rather than extracting fresh information from the institution. The balance returned will reflect the balance at the time of the last successful Item update. If the Item is enabled for a regularly updating product, such as Transactions, Investments, or Liabilities, the balance will typically update about once a day, as long as the Item is healthy. If the Item is enabled only for products that do not frequently update, such as Auth or Identity, balance data may be much older.

        For realtime balance information, use the paid endpoint `/accounts/balance/get` instead.
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsGetResponse'
              examples:
                example-1:
                  value:
                    accounts:
                    - account_id: blgvvBlXw3cq5GMPwqB6s6q4dLKB9WcVqGDGo
                      balances:
                        available: 100
                        current: 110
                        iso_currency_code: USD
                        limit: null
                        unofficial_currency_code: null
                      mask: "0000"
                      name: Plaid Checking
                      official_name: Plaid Gold Standard 0% Interest Checking
                      persistent_account_id: 8cfb8beb89b774ee43b090625f0d61d0814322b43bff984eaf60386e
                      subtype: checking
                      type: depository
                    - account_id: 6PdjjRP6LmugpBy5NgQvUqpRXMWxzktg3rwrk
                      balances:
                        available: null
                        current: 23631.9805
                        iso_currency_code: USD
                        limit: null
                        unofficial_currency_code: null
                      mask: "6666"
                      name: Plaid 401k
                      official_name: null
                      subtype: 401k
                      type: investment
                    - account_id: XMBvvyMGQ1UoLbKByoMqH3nXMj84ALSdE5B58
                      balances:
                        available: null
                        current: 65262
                        iso_currency_code: USD
                        limit: null
                        unofficial_currency_code: null
                      mask: "7777"
                      name: Plaid Student Loan
                      official_name: null
                      subtype: student
                      type: loan
                    item:
                      available_products:
                      - balance
                      - identity
                      - payment_initiation
                      - transactions
                      billed_products:
                      - assets
                      - auth
                      consent_expiration_time: null
                      error: null
                      institution_id: ins_117650
                      item_id: DWVAAPWq4RHGlEaNyGKRTAnPLaEmo8Cvq7na6
                      update_type: background
                      webhook: https://www.genericwebhookurl.com/webhook
                    request_id: bkVE1BHWMAZ9Rnr
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaidError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountsGetRequest'
            examples:
              example-1:
                value:
                  client_id: string
                  secret: string
                  access_token: string
                  options:
                    account_ids:
                    - string
  /item/public_token/exchange:
    x-plaid-business-unit-context: BUSINESS_UNIT_PLAID
    post:
      tags:
      - plaid
      summary: Exchange public token for an access token
      externalDocs:
        url: /api/tokens/#itempublic_tokenexchange
      operationId: itemPublicTokenExchange
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemPublicTokenExchangeResponse'
              examples:
                example-1:
                  value:
                    access_token: access-sandbox-de3ce8ef-33f8-452c-a685-8671031fc0f6
                    item_id: M5eVJqLnv3tbzdngLDp9FL5OlDNxlNhlE55op
                    request_id: Aim3b
      description: |-
        Exchange a Link `public_token` for an API `access_token`. Link hands off the `public_token` client-side via the `onSuccess` callback once a user has successfully created an Item. The `public_token` is ephemeral and expires after 30 minutes. An `access_token` does not expire, but can be revoked by calling `/item/remove`.

        The response also includes an `item_id` that should be stored with the `access_token`. The `item_id` is used to identify an Item in a webhook. The `item_id` can also be retrieved by making an `/item/get` request.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemPublicTokenExchangeRequest'
  /item/get:
    x-plaid-business-unit-context: BUSINESS_UNIT_PLAID
    post:
      tags:
      - plaid
      summary: Retrieve an Item
      externalDocs:
        url: /api/items/#itemget
      operationId: itemGet
      description: Returns information about the status of an Item.
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemGetResponse'
              examples:
                example-1:
                  value:
                    item:
                      available_products:
                      - balance
                      - auth
                      billed_products:
                      - identity
                      - transactions
                      error: null
                      institution_id: ins_109508
                      item_id: Ed6bjNrDLJfGvZWwnkQlfxwoNz54B5C97ejBr
                      update_type: background
                      webhook: https://plaid.com/example/hook
                      consent_expiration_time: null
                    status:
                      transactions:
                        last_successful_update: "2019-02-15T15:52:39Z"
                        last_failed_update: "2019-01-22T04:32:00Z"
                      last_webhook:
                        sent_at: "2019-02-15T15:53:00Z"
                        code_sent: DEFAULT_UPDATE
                    request_id: m8MDnv9okwxFNBV
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaidError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemGetRequest'
        description: ""
  /link/token/create:
    x-plaid-business-unit-context: BUSINESS_UNIT_UNDETERMINED
    post:
      tags:
      - plaid
      summary: Create Link Token
      externalDocs:
        url: /api/tokens/#linktokencreate
      operationId: linkTokenCreate
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkTokenCreateResponse'
              examples:
                example-1:
                  value:
                    link_token: link-sandbox-af1a0311-da53-4636-b754-dd15cc058176
                    expiration: "2020-03-27T12:56:34Z"
                    request_id: XQVgFigpGHXkb0b
      description: |-
        The `/link/token/create` endpoint creates a `link_token`, which is required as a parameter when initializing Link. Once Link has been initialized, it returns a `public_token`, which can then be exchanged for an `access_token` via `/item/public_token/exchange` as part of the main Link flow.

        A `link_token` generated by `/link/token/create` is also used to initialize other Link flows, such as the update mode flow for tokens with expired credentials, or the Payment Initiation (Europe) flow.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkTokenCreateRequest'
        description: ""
  /transactions/sync:
    x-plaid-business-unit-context: BUSINESS_UNIT_PLAID
    post:
      tags:
      - plaid
      summary: Get incremental transaction updates on an Item
      externalDocs:
        url: /api/products/transactions/#transactionssync
      operationId: transactionsSync
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsSyncResponse'
              examples:
                example-1:
                  value:
                    added:
                    - account_id: BxBXxLj1m4HMXBm9WZZmCWVbPjX16EHwv99vp
                      account_owner: null
                      amount: 72.1
                      iso_currency_code: USD
                      unofficial_currency_code: null
                      category:
                      - Shops
                      - Supermarkets and Groceries
                      category_id: "19046000"
                      check_number: null
                      counterparties:
                      - name: Walmart
                        type: merchant
                        logo_url: https://plaid-merchant-logos.plaid.com/walmart_1100.png
                        website: walmart.com
                        entity_id: O5W5j4dN9OR3E6ypQmjdkWZZRoXEzVMz2ByWM
                        confidence_level: VERY_HIGH
                      date: "2023-09-24"
                      datetime: "2023-09-24T11:01:01Z"
                      authorized_date: "2023-09-22"
                      authorized_datetime: "2023-09-22T10:34:50Z"
                      location:
                        address: 13425 Community Rd
                        city: Poway
                        region: CA
                        postal_code: "92064"
                        country: US
                        lat: 32.959068
                        lon: -117.037666
                        store_number: "1700"
                      name: 'PURCHASE WM SUPERCENTER #1700'
                      merchant_name: Walmart
                      merchant_entity_id: O5W5j4dN9OR3E6ypQmjdkWZZRoXEzVMz2ByWM
                      logo_url: https://plaid-merchant-logos.plaid.com/walmart_1100.png
                      website: walmart.com
                      payment_meta:
                        by_order_of: null
                        payee: null
                        payer: null
                        payment_method: null
                        payment_processor: null
                        ppd_id: null
                        reason: null
                        reference_number: null
                      payment_channel: in store
                      pending: false
                      pending_transaction_id: no86Eox18VHMvaOVL7gPUM9ap3aR1LsAVZ5nc
                      personal_finance_category:
                        primary: GENERAL_MERCHANDISE
                        detailed: GENERAL_MERCHANDISE_SUPERSTORES
                        confidence_level: VERY_HIGH
                      personal_finance_category_icon_url: https://plaid-category-icons.plaid.com/PFC_GENERAL_MERCHANDISE.png
                      transaction_id: lPNjeW1nR6CDn5okmGQ6hEpMo4lLNoSrzqDje
                      transaction_code: null
                      transaction_type: place
                    modified:
                    - account_id: BxBXxLj1m4HMXBm9WZZmCWVbPjX16EHwv99vp
                      account_owner: null
                      amount: 28.34
                      iso_currency_code: USD
                      unofficial_currency_code: null
                      category:
                      - Food and Drink
                      - Restaurants
                      - Fast Food
                      category_id: "13005032"
                      check_number: null
                      counterparties:
                      - name: DoorDash
                        type: marketplace
                        logo_url: https://plaid-counterparty-logos.plaid.com/doordash_1.png
                        website: doordash.com
                        entity_id: YNRJg5o2djJLv52nBA1Yn1KpL858egYVo4dpm
                        confidence_level: HIGH
                      - name: Burger King
                        type: merchant
                        logo_url: https://plaid-merchant-logos.plaid.com/burger_king_155.png
                        website: burgerking.com
                        entity_id: mVrw538wamwdm22mK8jqpp7qd5br0eeV9o4a1
                        confidence_level: VERY_HIGH
                      date: "2023-09-28"
                      datetime: "2023-09-28T15:10:09Z"
                      authorized_date: "2023-09-27"
                      authorized_datetime: "2023-09-27T08:01:58Z"
                      location:
                        address: null
                        city: null
                        region: null
                        postal_code: null
                        country: null
                        lat: null
                        lon: null
                        store_number: null
                      name: Dd Doordash Burgerkin
                      merchant_name: Burger King
                      merchant_entity_id: mVrw538wamwdm22mK8jqpp7qd5br0eeV9o4a1
                      logo_url: https://plaid-merchant-logos.plaid.com/burger_king_155.png
                      website: burgerking.com
                      payment_meta:
                        by_order_of: null
                        payee: null
                        payer: null
                        payment_method: null
                        payment_processor: null
                        ppd_id: null
                        reason: null
                        reference_number: null
                      payment_channel: online
                      pending: true
                      pending_transaction_id: null
                      personal_finance_category:
                        primary: FOOD_AND_DRINK
                        detailed: FOOD_AND_DRINK_FAST_FOOD
                        confidence_level: VERY_HIGH
                      personal_finance_category_icon_url: https://plaid-category-icons.plaid.com/PFC_FOOD_AND_DRINK.png
                      transaction_id: yhnUVvtcGGcCKU0bcz8PDQr5ZUxUXebUvbKC0
                      transaction_code: null
                      transaction_type: digital
                    removed:
                    - transaction_id: CmdQTNgems8BT1B7ibkoUXVPyAeehT3Tmzk0l
                    next_cursor: tVUUL15lYQN5rBnfDIc1I8xudpGdIlw9nsgeXWvhOfkECvUeR663i3Dt1uf/94S8ASkitgLcIiOSqNwzzp+bh89kirazha5vuZHBb2ZA5NtCDkkV
                    has_more: false
                    request_id: Wvhy9PZHQLV8njG
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaidError'
          description: Error response
      description: |-
        The `/transactions/sync` endpoint allows developers to subscribe to all transactions associated with an Item and get updates synchronously in a stream-like manner, using a cursor to track which updates have already been seen.

        `/transactions/sync` provides the same functionality as `/transactions/get` and can be used instead of `/transactions/get` to simplify the process of tracking transactions updates. To learn more about migrating from `/transactions/get`, see the [Transactions Sync migration guide](https://plaid.com/docs/transactions/sync-migration/).

        This endpoint provides user-authorized transaction data for `credit`, `depository`, and some loan-type accounts (only those with account subtype `student`; coverage may be limited). For transaction history from `investments` accounts, use `/investments/transactions/get` instead.

        Returned transactions data is grouped into three types of update, indicating whether the transaction was added, removed, or modified since the last call to the API.

        In the first call to `/transactions/sync` for an Item, the endpoint will return all historical transactions data associated with that Item up until the time of the API call (as "adds"), which then generates a `next_cursor` for that Item. In subsequent calls, send the `next_cursor` to receive only the changes that have occurred since the previous call.

        Due to the potentially large number of transactions associated with an Item, results are paginated. The `has_more` field specifies if additional calls are necessary to fetch all available transaction updates. Call `/transactions/sync` with the new cursor, pulling all updates, until `has_more` is `false`.

        When retrieving paginated updates, track both the `next_cursor` from the latest response and the original cursor from the first call in which `has_more` was `true`; if a call to `/transactions/sync` fails due to the [`TRANSACTIONS_SYNC_MUTATION_DURING_PAGINATION`](https://plaid.com/docs/errors/transactions/#transactions_sync_mutation_during_pagination) error, the entire pagination request loop must be restarted beginning with the cursor for the first page of the update, rather than retrying only the single request that failed.

        Whenever new or updated transaction data becomes available, `/transactions/sync` will provide these updates. Plaid typically checks for new data multiple times a day, but these checks may occur less frequently, such as once a day, depending on the institution. An Item's `status.transactions.last_successful_update` field will show the timestamp of the most recent successful update. To force Plaid to check for new transactions, use the `/transactions/refresh` endpoint.

        For newly created Items, data may not be immediately available to `/transactions/sync`. Plaid begins preparing transactions data when the Item is created, but the process can take anywhere from a few seconds to several minutes to complete, depending on the number of transactions available.

        To be alerted when new data is available, listen for the [`SYNC_UPDATES_AVAILABLE`](https://plaid.com/docs/api/products/transactions/#sync_updates_available) webhook.

        `/transactions/sync` does not directly return balance data. To get the balance for an account, call `/accounts/get`, which is a free-to-use endpoint that will return the cached balance as of the last successful transactions update.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionsSyncRequest'
            examples: {}
components:
  securitySchemes:
    clientId:
      type: apiKey
      in: header
      name: PLAID-CLIENT-ID
    secret:
      type: apiKey
      in: header
      name: PLAID-SECRET
    plaidVersion:
      type: apiKey
      in: header
      name: Plaid-Version
  schemas:
    PartnerEndCustomerOAuthStatusUpdatedValues:
      nullable: false
      type: string
      description: The OAuth status of the update
      enum:
      - not-started
      - processing
      - approved
      - enabled
      - attention-required
    WebhookEnvironmentValues:
      nullable: false
      type: string
      description: The Plaid environment the webhook was sent from
      enum:
      - development
      - sandbox
      - production
    AuthGetRequest:
      type: object
      description: AuthGetRequest defines the request schema for `/auth/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        access_token:
          $ref: '#/components/schemas/AccessToken'
        options:
          $ref: '#/components/schemas/AuthGetRequestOptions'
      required:
      - access_token
    AuthGetRequestOptions:
      type: object
      description: An optional object to filter `/auth/get` results.
      properties:
        account_ids:
          type: array
          description: |-
            A list of `account_ids` to retrieve for the Item.
            Note: An error will be returned if a provided `account_id` is not associated with the Item.
          items:
            type: string
    AuthGetResponse:
      type: object
      additionalProperties: true
      description: AuthGetResponse defines the response schema for `/auth/get`
      properties:
        accounts:
          type: array
          description: The `accounts` for which numbers are being retrieved.
          items:
            $ref: '#/components/schemas/AccountBase'
        numbers:
          $ref: '#/components/schemas/AuthGetNumbers'
        item:
          $ref: '#/components/schemas/Item'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - accounts
      - numbers
      - item
      - request_id
    AuthGetNumbers:
      type: object
      additionalProperties: true
      description: An object containing identifying numbers used for making electronic transfers to and from the `accounts`. The identifying number type (ACH, EFT, IBAN, or BACS) used will depend on the country of the account. An account may have more than one number type. If a particular identifying number type is not used by any `accounts` for which data has been requested, the array for that type will be empty.
      properties:
        ach:
          type: array
          description: An array of ACH numbers identifying accounts.
          items:
            $ref: '#/components/schemas/NumbersACH'
        eft:
          type: array
          description: An array of EFT numbers identifying accounts.
          items:
            $ref: '#/components/schemas/NumbersEFT'
        international:
          type: array
          description: An array of IBAN numbers identifying accounts.
          items:
            $ref: '#/components/schemas/NumbersInternational'
        bacs:
          type: array
          description: An array of BACS numbers identifying accounts.
          items:
            $ref: '#/components/schemas/NumbersBACS'
      required:
      - ach
      - eft
      - international
      - bacs
    TransactionsGetRequest:
      type: object
      description: TransactionsGetRequest defines the request schema for `/transactions/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        options:
          $ref: '#/components/schemas/TransactionsGetRequestOptions'
        access_token:
          $ref: '#/components/schemas/AccessToken'
        secret:
          $ref: '#/components/schemas/APISecret'
        start_date:
          type: string
          format: date
          description: The earliest date for which data should be returned. Dates should be formatted as YYYY-MM-DD.
        end_date:
          type: string
          format: date
          description: The latest date for which data should be returned. Dates should be formatted as YYYY-MM-DD.
      required:
      - access_token
      - start_date
      - end_date
    TransactionsGetRequestOptions:
      type: object
      description: An optional object to be used with the request. If specified, `options` must not be `null`.
      properties:
        account_ids:
          type: array
          description: |-
            A list of `account_ids` to retrieve for the Item

            Note: An error will be returned if a provided `account_id` is not associated with the Item.
          items:
            type: string
        count:
          type: integer
          default: 100
          description: The number of transactions to fetch.
          minimum: 1
          maximum: 500
          exclusiveMinimum: false
        offset:
          type: integer
          default: 0
          description: The number of transactions to skip. The default value is 0.
          minimum: 0
        include_original_description:
          type: boolean
          default: false
          description: Include the raw unparsed transaction description from the financial institution. This field is disabled by default. If you need this information in addition to the parsed data provided, contact your Plaid Account Manager, or submit a [Support request](https://dashboard.plaid.com/support/new/product-and-development/product-troubleshooting/product-functionality).
          nullable: true
        include_personal_finance_category_beta:
          type: boolean
          default: false
          description: Personal finance categories are now returned by default.
          deprecated: true
          x-hidden-from-docs: true
        include_personal_finance_category:
          type: boolean
          default: false
          description: Personal finance categories are now returned by default.
          deprecated: true
          x-hidden-from-docs: true
        include_logo_and_counterparty_beta:
          type: boolean
          default: false
          description: Counterparties and extra merchant fields are now returned by default.
          deprecated: true
          x-hidden-from-docs: true
        days_requested:
          description: |-
            This option only applies to calls for Items that were not initialized with Transactions during Link and are now adding the Transactions product to the Item for the first time. In these cases, this option controls the maximum number of days of transaction history that Plaid will request from the financial institution. For developer accounts created after December 3, 2023, if no value is specified, this will default to 90 days. For developer accounts created on December 3, 2023 or earlier, if no value is specified, this will default to 730 days until June 24, 2024, at which point it will default to 90 days.

            If Transactions has already been added to the Item prior to this call, this field will have no effect.

            We strongly recommend that customers utilizing [Recurring Transactions](https://plaid.com/docs/api/products/transactions/#transactionsrecurringget) request at least 180 days of history for optimal results.
          type: integer
          minimum: 1
          maximum: 730
          default: 90
    TransactionsGetResponse:
      type: object
      additionalProperties: true
      description: TransactionsGetResponse defines the response schema for `/transactions/get`
      properties:
        accounts:
          type: array
          description: An array containing the `accounts` associated with the Item for which transactions are being returned. Each transaction can be mapped to its corresponding account via the `account_id` field.
          items:
            $ref: '#/components/schemas/AccountBase'
        transactions:
          type: array
          description: An array containing transactions from the account. Transactions are returned in reverse chronological order, with the most recent at the beginning of the array. The maximum number of transactions returned is determined by the `count` parameter.
          items:
            $ref: '#/components/schemas/Transaction'
        total_transactions:
          type: integer
          description: The total number of transactions available within the date range specified. If `total_transactions` is larger than the size of the `transactions` array, more transactions are available and can be fetched via manipulating the `offset` parameter.
        item:
          $ref: '#/components/schemas/Item'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - accounts
      - transactions
      - total_transactions
      - item
      - request_id
    TransactionsRefreshRequest:
      type: object
      description: TransactionsRefreshRequest defines the request schema for `/transactions/refresh`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        access_token:
          $ref: '#/components/schemas/AccessToken'
        secret:
          $ref: '#/components/schemas/APISecret'
      required:
      - access_token
    TransactionsRefreshResponse:
      type: object
      additionalProperties: true
      description: TransactionsRefreshResponse defines the response schema for `/transactions/refresh`
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - request_id
    TransactionsRecurringUpdateRequest:
      type: object
      description: TransactionsRecurringUpdateRequest defined the request schema for `/transactions/recurring/streams/update` endpoint.
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        access_token:
          $ref: '#/components/schemas/AccessToken'
        secret:
          $ref: '#/components/schemas/APISecret'
        inputs:
          type: array
          description: A list of all the operations to be performed. This will either all succeed or all fail.
          items:
            $ref: '#/components/schemas/TransactionsRecurringUpdateInput'
      required:
      - access_token
      - inputs
    TransactionsRecurringUpdateInput:
      type: object
      description: TransactionsRecurringUpdateInput defines a single operation to the `/transactions/recurring/streams/update` endpoint.
      properties:
        stream_id:
          type: string
          description: ID of the stream that all the transactions will be added in to.
        transaction_ids:
          type: array
          description: IDs of all the transactions that will be added into the stream. If any transaction currently exist in another stream, it will be removed from the other stream.
          items:
            type: string
      required:
      - stream_id
      - transaction_ids
    TransactionsRecurringUpdateResponse:
      type: object
      additionalProperties: true
      description: TransactionsRecurringUpdateResponse defines the response schema for the `/transactions/recurring/streams/update` endpoint.
      properties:
        modified_streams:
          type: array
          description: Directly modified stream, along with other streams with transactions removed from them as a result of the operation (in no particular order).
          items:
            $ref: '#/components/schemas/TransactionStream'
        removed_stream_ids:
          type: array
          description: The ids of streams that are no longer qualified as recurring transaction streams (in no particular order).
          items:
            type: string
            description: ID of the removed stream
      required:
      - modified_streams
    TransactionsRecurringMergeRequest:
      type: object
      description: TransactionsRecurringMergeRequest defined the request schema for `/transactions/recurring/streams/merge` endpoint.
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        access_token:
          $ref: '#/components/schemas/AccessToken'
        secret:
          $ref: '#/components/schemas/APISecret'
        inputs:
          type: array
          description: A list of all the operations to be performed. This will either all succeed or all fail.
          items:
            $ref: '#/components/schemas/TransactionsRecurringMergeInput'
      required:
      - access_token
      - inputs
    TransactionsRecurringMergeInput:
      type: object
      description: TransactionsRecurringMergeInput defines a single input to the `/transactions/recurring/streams/merge` endpoint.
      properties:
        stream_ids:
          type: array
          description: IDs of all the streams that will be merged into the first stream. This operation will retain the stream_id of the first stream.
          items:
            type: string
      required:
      - stream_ids
    TransactionsRecurringMergeResponse:
      type: object
      additionalProperties: true
      description: TransactionsRecurringMergeResponse defines the response schema for the `/transactions/recurring/streams/merge` endpoint.
      properties:
        modified_streams:
          type: array
          description: Directly modified stream, along with other streams with transactions removed from them as a result of the operation (in no particular order).
          items:
            $ref: '#/components/schemas/TransactionStream'
        removed_stream_ids:
          type: array
          description: The ids of streams that are no longer qualified as recurring transaction streams (in no particular order).
          items:
            type: string
            description: ID of the removed stream
      required:
      - modified_streams
    TransactionsRecurringCreateRequest:
      type: object
      description: TransactionsRecurringCreateRequest defined the request schema for `/transactions/recurring/streams/create` endpoint.
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        access_token:
          $ref: '#/components/schemas/AccessToken'
        secret:
          $ref: '#/components/schemas/APISecret'
        inputs:
          type: array
          description: A list of all the operations to be performed. This will either all succeed or all fail.
          items:
            $ref: '#/components/schemas/TransactionsRecurringCreateInput'
      required:
      - access_token
      - inputs
    TransactionsRecurringCreateInput:
      type: object
      description: TransactionsRecurringCreateInput defines a single input to the `/transactions/recurring/streams/create` endpoint.
      properties:
        transaction_ids:
          type: array
          description: IDs of all the transactions that will be merged into one stream. If any transaction currently exists in another stream, it will be removed from the other stream.
          items:
            type: string
      required:
      - stream_ids
    TransactionsRecurringCreateResponse:
      type: object
      additionalProperties: true
      description: TransactionsRecurringCreateResponse defines the response schema for the `/transactions/recurring/streams/create` endpoint.
      properties:
        added_streams:
          type: array
          description: Streams created as a result of the operation.
          items:
            $ref: '#/components/schemas/TransactionStream'
        modified_streams:
          type: array
          description: Other streams with transactions removed from them as a result of the operation (in no particular order).
          items:
            $ref: '#/components/schemas/TransactionStream'
        removed_stream_ids:
          type: array
          description: The ids of streams that are no longer qualified as recurring transaction streams (in no particular order).
          items:
            type: string
            description: ID of the removed stream
      required:
      - added_streams
    TransactionsRecurringGetRequest:
      type: object
      description: TransactionsRecurringGetRequest defines the request schema for `/transactions/recurring/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        access_token:
          $ref: '#/components/schemas/AccessToken'
        secret:
          $ref: '#/components/schemas/APISecret'
        options:
          $ref: '#/components/schemas/TransactionsRecurringGetRequestOptions'
        account_ids:
          type: array
          description: |-
            A list of `account_ids` to retrieve for the Item

            Note: An error will be returned if a provided `account_id` is not associated with the Item.
          items:
            type: string
      required:
      - access_token
      - account_ids
    TransactionsRecurringGetRequestOptions:
      type: object
      description: An optional object to be used with the request. If specified, `options` must not be `null`.
      x-hidden-from-docs: true
      properties:
        include_personal_finance_category:
          type: boolean
          default: false
          description: Personal finance categories are now returned by default.
          deprecated: true
          x-hidden-from-docs: true
    TransactionsRecurringGetResponse:
      type: object
      additionalProperties: true
      description: TransactionsRecurringGetResponse defines the response schema for `/transactions/recurring/get`
      properties:
        inflow_streams:
          type: array
          description: An array of depository transaction streams.
          items:
            $ref: '#/components/schemas/TransactionStream'
        outflow_streams:
          type: array
          description: An array of expense transaction streams.
          items:
            $ref: '#/components/schemas/TransactionStream'
        updated_datetime:
          type: string
          format: date-time
          description: Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (`YYYY-MM-DDTHH:mm:ssZ`) indicating the last time transaction streams for the given account were updated on
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - inflow_streams
      - outflow_streams
      - updated_datetime
      - request_id
    TransactionsRulesCreateRequest:
      type: object
      description: TransactionsRulesCreateRequest defines the request schema for `beta/transactions/rules/v1/create`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        access_token:
          $ref: '#/components/schemas/AccessToken'
        secret:
          $ref: '#/components/schemas/APISecret'
        personal_finance_category:
          type: string
          description: |
            Personal finance detailed category.

            All implementations are encouraged to use this field instead of `category`, as it provides more meaningful and accurate categorization.

            See the [`taxonomy csv file`](https://plaid.com/documents/transactions-personal-finance-category-taxonomy.csv) for a full list of personal finance categories.
        rule_details:
          $ref: '#/components/schemas/TransactionsRuleDetails'
      required:
      - access_token
      - personal_finance_category
      - rule_details
    TransactionsRulesCreateResponse:
      type: object
      additionalProperties: true
      description: TransactionsRulesCreateResponse defines the response schema for `/beta/transactions/rules/v1/create`
      properties:
        rule:
          $ref: '#/components/schemas/TransactionsCategoryRule'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - rule
      - request_id
    TransactionsRulesListRequest:
      type: object
      description: TransactionsRulesListRequest defines the request schema for `/beta/transactions/rules/v1/list`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        access_token:
          $ref: '#/components/schemas/AccessToken'
        secret:
          $ref: '#/components/schemas/APISecret'
      required:
      - access_token
    TransactionsRulesListResponse:
      type: object
      additionalProperties: true
      description: TransactionsRulesListResponse defines the response schema for `/beta/transactions/rules/v1/list`
      properties:
        rules:
          type: array
          description: A list of the Item's transaction rules
          items:
            $ref: '#/components/schemas/TransactionsCategoryRule'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - rules
      - request_id
    TransactionsRulesRemoveRequest:
      type: object
      description: TransactionsRulesRemoveRequest defines the request schema for `/beta/transactions/rules/v1/remove`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        access_token:
          $ref: '#/components/schemas/AccessToken'
        secret:
          $ref: '#/components/schemas/APISecret'
        rule_id:
          type: string
          description: A rule's unique identifier
      required:
      - access_token
      - rule_id
    TransactionsRulesRemoveResponse:
      type: object
      additionalProperties: true
      description: TransactionsRulesRemoveResponse defines the response schema for `/beta/transactions/rules/v1/remove`
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - request_id
    TransactionsSyncRequest:
      type: object
      description: TransactionsSyncRequest defines the request schema for `/transactions/sync`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        access_token:
          $ref: '#/components/schemas/AccessToken'
        secret:
          $ref: '#/components/schemas/APISecret'
        cursor:
          type: string
          description: |-
            The cursor value represents the last update requested. Providing it will cause the response to only return changes after this update.
            If omitted, the entire history of updates will be returned, starting with the first-added transactions on the Item. The cursor also accepts the special value of `"now"`, which can be used to fast-forward the cursor as part of migrating an existing Item from `/transactions/get` to `/transactions/sync`. For more information, see the [Transactions sync migration guide](https://plaid.com/docs/transactions/sync-migration/). Note that using the `"now"` value is not supported for any use case other than migrating existing Items from `/transactions/get`.

            The upper-bound length of this cursor is 256 characters of base64.
        count:
          type: integer
          default: 100
          description: The number of transaction updates to fetch.
          minimum: 1
          maximum: 500
          exclusiveMinimum: false
        options:
          $ref: '#/components/schemas/TransactionsSyncRequestOptions'
      required:
      - access_token
    TransactionsSyncRequestOptions:
      type: object
      description: An optional object to be used with the request. If specified, `options` must not be `null`.
      properties:
        include_original_description:
          type: boolean
          default: false
          description: Include the raw unparsed transaction description from the financial institution. This field is disabled by default. If you need this information in addition to the parsed data provided, contact your Plaid Account Manager or submit a [Support request](https://dashboard.plaid.com/support/new/product-and-development/product-troubleshooting/product-functionality).
          nullable: true
        include_personal_finance_category:
          type: boolean
          default: false
          description: Personal finance categories are now returned by default.
          deprecated: true
          x-hidden-from-docs: true
        include_logo_and_counterparty_beta:
          type: boolean
          default: false
          description: Counterparties and extra merchant fields are now returned by default.
          deprecated: true
          x-hidden-from-docs: true
        days_requested:
          description: |-
            This option only applies to calls for Items that were not initialized with Transactions during Link and are now adding the Transactions product to the Item for the first time. In these cases, this option controls the maximum number of days of transaction history that Plaid will request from the financial institution. For developer accounts created after December 3, 2023, if no value is specified, this will default to 90 days. For developer accounts created on December 3, 2023 or earlier, if no value is specified, this will default to 730 days until June 24, 2024, at which point it will default to 90 days.

            If Transactions has already been added to the Item prior to this call, this field will have no effect.

            We strongly recommend that customers utilizing [Recurring Transactions](https://plaid.com/docs/api/products/transactions/#transactionsrecurringget) request at least 180 days of history for optimal results.
          type: integer
          minimum: 1
          maximum: 730
          default: 90
    TransactionsSyncResponse:
      type: object
      additionalProperties: true
      description: TransactionsSyncResponse defines the response schema for `/transactions/sync`
      properties:
        added:
          type: array
          description: Transactions that have been added to the Item since `cursor` ordered by ascending last modified time.
          items:
            $ref: '#/components/schemas/Transaction'
        modified:
          type: array
          description: Transactions that have been modified on the Item since `cursor` ordered by ascending last modified time.
          items:
            $ref: '#/components/schemas/Transaction'
        removed:
          type: array
          description: Transactions that have been removed from the Item since `cursor` ordered by ascending last modified time.
          items:
            $ref: '#/components/schemas/RemovedTransaction'
        next_cursor:
          type: string
          description: Cursor used for fetching any future updates after the latest update provided in this response. The cursor obtained after all pages have been pulled (indicated by `has_more` being `false`) will be valid for at least 1 year. This cursor should be persisted for later calls. If transactions are not yet available, this will be an empty string.
        has_more:
          type: boolean
          description: Represents if more than requested count of transaction updates exist. If true, the additional updates can be fetched by making an additional request with `cursor` set to `next_cursor`. If `has_more` is true, it’s important to pull all available pages, to make it less likely for underlying data changes to conflict with pagination.
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - added
      - modified
      - removed
      - next_cursor
      - has_more
      - request_id
    InstitutionsGetRequest:
      type: object
      description: InstitutionsGetRequest defines the request schema for `/institutions/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        count:
          type: integer
          minimum: 1
          maximum: 500
          description: The total number of Institutions to return.
        offset:
          type: integer
          description: The number of Institutions to skip.
          minimum: 0
        country_codes:
          type: array
          description: |
            Specify which country or countries to include institutions from, using the ISO-3166-1 alpha-2 country code standard.

            In API versions 2019-05-29 and earlier, the `country_codes` parameter is an optional parameter within the `options` object and will default to `[US]` if it is not supplied.
          minItems: 1
          items:
            $ref: '#/components/schemas/CountryCode'
        options:
          $ref: '#/components/schemas/InstitutionsGetRequestOptions'
      required:
      - count
      - offset
      - country_codes
    InstitutionsGetRequestOptions:
      type: object
      description: An optional object to filter `/institutions/get` results.
      properties:
        products:
          type: array
          description: 'Filter the Institutions based on which products they support. '
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/Products'
          x-override-enum-values-shown:
          - assets
          - auth
          - balance
          - employment
          - identity
          - income_verification
          - identity_verification
          - investments
          - liabilities
          - payment_initiation
          - standing_orders
          - transactions
          - transfer
        routing_numbers:
          type: array
          description: Specify an array of routing numbers to filter institutions. The response will only return institutions that match all of the routing numbers in the array. Routing number records used for this matching are not comprehensive; failure to match a given routing number to an institution does not mean that the institution is unsupported by Plaid.
          nullable: true
          items:
            type: string
        oauth:
          type: boolean
          nullable: true
          description: Limit results to institutions with or without OAuth login flows. Note that institutions will have `oauth` set to `true` if some Items associated with that institution are required to use OAuth flows; institutions in a state of migration to OAuth will have the `oauth` attribute set to `true`.
        include_optional_metadata:
          type: boolean
          description: |-
            When `true`, return the institution's homepage URL, logo and primary brand color.

            Note that Plaid does not own any of the logos shared by the API, and that by accessing or using these logos, you agree that you are doing so at your own risk and will, if necessary, obtain all required permissions from the appropriate rights holders and adhere to any applicable usage guidelines. Plaid disclaims all express or implied warranties with respect to the logos.
        include_auth_metadata:
          type: boolean
          default: false
          description: When `true`, returns metadata related to the Auth product indicating which auth methods are supported.
        include_payment_initiation_metadata:
          type: boolean
          default: false
          description: When `true`, returns metadata related to the Payment Initiation product indicating which payment configurations are supported.
    InstitutionsGetResponse:
      type: object
      additionalProperties: true
      description: InstitutionsGetResponse defines the response schema for `/institutions/get`
      properties:
        institutions:
          type: array
          description: A list of Plaid institutions
          items:
            $ref: '#/components/schemas/Institution'
        total:
          type: integer
          description: The total number of institutions available via this endpoint
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - institutions
      - total
      - request_id
    InstitutionsSearchRequest:
      type: object
      description: InstitutionsSearchRequest defines the request schema for `/institutions/search`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        query:
          type: string
          description: The search query. Institutions with names matching the query are returned
          minLength: 1
        products:
          type: array
          description: Filter the Institutions based on whether they support all products listed in `products`. Provide `null` to get institutions regardless of supported products. Note that when `auth` is specified as a product, if you are enabled for Instant Match or Automated Micro-deposits, institutions that support those products will be returned even if `auth` is not present in their product array.
          minItems: 1
          nullable: true
          items:
            $ref: '#/components/schemas/Products'
          x-override-enum-values-shown:
          - assets
          - auth
          - balance
          - employment
          - identity
          - income_verification
          - investments
          - liabilities
          - identity_verification
          - payment_initiation
          - standing_orders
          - transactions
          - transfer
        country_codes:
          type: array
          description: |
            Specify which country or countries to include institutions from, using the ISO-3166-1 alpha-2 country code standard. In API versions 2019-05-29 and earlier, the `country_codes` parameter is an optional parameter within the `options` object and will default to `[US]` if it is not supplied.
          items:
            $ref: '#/components/schemas/CountryCode'
        options:
          $ref: '#/components/schemas/InstitutionsSearchRequestOptions'
      required:
      - query
      - country_codes
    InstitutionsSearchRequestOptions:
      type: object
      description: An optional object to filter `/institutions/search` results.
      properties:
        oauth:
          type: boolean
          nullable: true
          description: Limit results to institutions with or without OAuth login flows. Note that institutions will have `oauth` set to `true` if some Items associated with that institution are required to use OAuth flows; institutions in a state of migration to OAuth will have the `oauth` attribute set to `true`.
        include_optional_metadata:
          type: boolean
          description: When true, return the institution's homepage URL, logo and primary brand color.
        include_auth_metadata:
          type: boolean
          default: false
          nullable: true
          description: When `true`, returns metadata related to the Auth product indicating which auth methods are supported.
        include_payment_initiation_metadata:
          type: boolean
          default: false
          nullable: true
          description: When `true`, returns metadata related to the Payment Initiation product indicating which payment configurations are supported.
        payment_initiation:
          $ref: '#/components/schemas/InstitutionsSearchPaymentInitiationOptions'
    InstitutionsSearchPaymentInitiationOptions:
      type: object
      description: Additional options that will be used to filter institutions by various Payment Initiation configurations.
      nullable: true
      properties:
        payment_id:
          type: string
          nullable: true
          description: A unique ID identifying the payment
        consent_id:
          type: string
          nullable: true
          description: A unique ID identifying the payment consent
    InstitutionsSearchResponse:
      type: object
      additionalProperties: true
      description: InstitutionsSearchResponse defines the response schema for `/institutions/search`
      properties:
        institutions:
          type: array
          description: An array of institutions matching the search criteria
          items:
            $ref: '#/components/schemas/Institution'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - institutions
      - request_id
    InstitutionsGetByIdRequest:
      type: object
      description: InstitutionsGetByIdRequest defines the request schema for `/institutions/get_by_id`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        institution_id:
          type: string
          description: The ID of the institution to get details about
          minLength: 1
        country_codes:
          type: array
          description: |
            Specify which country or countries to include institutions from, using the ISO-3166-1 alpha-2 country code standard. In API versions 2019-05-29 and earlier, the `country_codes` parameter is an optional parameter within the `options` object and will default to `[US]` if it is not supplied.
          items:
            $ref: '#/components/schemas/CountryCode'
        options:
          $ref: '#/components/schemas/InstitutionsGetByIdRequestOptions'
      required:
      - institution_id
      - country_codes
    InstitutionsGetByIdRequestOptions:
      type: object
      description: Specifies optional parameters for `/institutions/get_by_id`. If provided, must not be `null`.
      properties:
        include_optional_metadata:
          default: false
          type: boolean
          description: |-
            When `true`, return an institution's logo, brand color, and URL. When available, the bank's logo is returned as a base64 encoded 152x152 PNG, the brand color is in hexadecimal format. The default value is `false`.

            Note that Plaid does not own any of the logos shared by the API and that by accessing or using these logos, you agree that you are doing so at your own risk and will, if necessary, obtain all required permissions from the appropriate rights holders and adhere to any applicable usage guidelines. Plaid disclaims all express or implied warranties with respect to the logos.
        include_status:
          type: boolean
          default: false
          description: If `true`, the response will include status information about the institution. Default value is `false`.
        include_auth_metadata:
          type: boolean
          default: false
          description: When `true`, returns metadata related to the Auth product indicating which auth methods are supported.
        include_payment_initiation_metadata:
          type: boolean
          default: false
          description: When `true`, returns metadata related to the Payment Initiation product indicating which payment configurations are supported.
    InstitutionsGetByIdResponse:
      type: object
      additionalProperties: true
      description: InstitutionsGetByIdResponse defines the response schema for `/institutions/get_by_id`
      properties:
        institution:
          $ref: '#/components/schemas/Institution'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - institution
      - request_id
    AccountsGetRequest:
      type: object
      description: AccountsGetRequest defines the request schema for `/accounts/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        access_token:
          $ref: '#/components/schemas/AccessToken'
        options:
          $ref: '#/components/schemas/AccountsGetRequestOptions'
      required:
      - access_token
      x-examples:
        example-1: {}
    AccountsGetRequestOptions:
      type: object
      description: An optional object to filter `/accounts/get` results.
      properties:
        account_ids:
          type: array
          description: An array of `account_ids` to retrieve for the Account.
          items:
            type: string
    AccountsGetResponse:
      type: object
      additionalProperties: true
      description: AccountsGetResponse defines the response schema for `/accounts/get` and `/accounts/balance/get`.
      properties:
        accounts:
          type: array
          description: |-
            An array of financial institution accounts associated with the Item.
            If `/accounts/balance/get` was called, each account will include real-time balance information.
          items:
            $ref: '#/components/schemas/AccountBase'
        item:
          $ref: '#/components/schemas/Item'
        payment_risk_assessment:
          $ref: '#/components/schemas/AccountsBalanceGetResponsePaymentRiskAssessment'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - accounts
      - item
      - request_id
    AccountsBalanceGetResponsePaymentRiskAssessment:
      x-hidden-from-docs: true
      type: object
      description: This object provides detailed risk assessment for the requested transaction
      additionalProperties: true
      nullable: true
      properties:
        risk_level:
          type: string
          description: A five-tier risk assessment for the transaction based on the probability of return.
        exceeds_balance_threshold:
          type: boolean
          description: Indicates whether the requested ACH debit amount is greater than the threshold (set by customers) of the available or current balance.
    CategoriesGetRequest:
      type: object
      description: CategoriesGetRequest defines the request schema for `/categories/get`
    CategoriesGetResponse:
      type: object
      additionalProperties: true
      description: CategoriesGetResponse defines the response schema for `/categories/get`
      properties:
        categories:
          type: array
          description: An array of all of the transaction categories used by Plaid.
          items:
            $ref: '#/components/schemas/Category'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - categories
      - request_id
    SandboxOverridePassword:
      type: string
      nullable: true
      default: pass_good
      description: Test password to use for the creation of the Sandbox Item. Default value is `pass_good`.
    SandboxOverrideUsername:
      type: string
      nullable: true
      default: user_good
      description: Test username to use for the creation of the Sandbox Item. Default value is `user_good`.
    SandboxProcessorTokenCreateRequest:
      description: SandboxProcessorTokenCreateRequest defines the request schema for `/sandbox/processor_token/create`
      type: object
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        institution_id:
          type: string
          description: The ID of the institution the Item will be associated with
        options:
          $ref: '#/components/schemas/SandboxProcessorTokenCreateRequestOptions'
      required:
      - institution_id
    SandboxProcessorTokenCreateRequestOptions:
      type: object
      description: An optional set of options to be used when configuring the Item. If specified, must not be `null`.
      properties:
        override_username:
          $ref: '#/components/schemas/SandboxOverrideUsername'
        override_password:
          $ref: '#/components/schemas/SandboxOverridePassword'
    SandboxProcessorTokenCreateResponse:
      type: object
      additionalProperties: true
      properties:
        processor_token:
          type: string
          description: A processor token that can be used to call the `/processor/` endpoints.
        request_id:
          $ref: '#/components/schemas/RequestID'
      description: SandboxProcessorTokenCreateResponse defines the response schema for `/sandbox/processor_token/create`
      required:
      - processor_token
      - request_id
    SandboxPublicTokenCreateRequest:
      type: object
      description: SandboxPublicTokenCreateRequest defines the request schema for `/sandbox/public_token/create`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        institution_id:
          type: string
          description: The ID of the institution the Item will be associated with
        initial_products:
          type: array
          description: The products to initially pull for the Item. May be any products that the specified `institution_id`  supports. This array may not be empty.
          items:
            $ref: '#/components/schemas/Products'
          minItems: 1
          x-override-enum-values-shown:
          - assets
          - auth
          - balance
          - employment
          - identity
          - income_verification
          - identity_verification
          - investments
          - liabilities
          - payment_initiation
          - standing_orders
          - transactions
          - transfer
        options:
          $ref: '#/components/schemas/SandboxPublicTokenCreateRequestOptions'
        user_token:
          $ref: '#/components/schemas/UserToken'
      required:
      - institution_id
      - initial_products
    SandboxPublicTokenCreateRequestOptions:
      type: object
      description: An optional set of options to be used when configuring the Item. If specified, must not be `null`.
      properties:
        webhook:
          type: string
          description: Specify a webhook to associate with the new Item.
        override_username:
          $ref: '#/components/schemas/SandboxOverrideUsername'
        override_password:
          $ref: '#/components/schemas/SandboxOverridePassword'
        transactions:
          $ref: '#/components/schemas/SandboxPublicTokenCreateRequestOptionsTransactions'
        income_verification:
          $ref: '#/components/schemas/SandboxPublicTokenCreateRequestOptionsIncomeVerification'
    SandboxPublicTokenCreateRequestOptionsTransactions:
      type: object
      description: An optional set of parameters corresponding to transactions options.
      properties:
        start_date:
          type: string
          format: date
          description: The earliest date for which to fetch transaction history. Dates should be formatted as YYYY-MM-DD.
        end_date:
          type: string
          format: date
          description: The most recent date for which to fetch transaction history. Dates should be formatted as YYYY-MM-DD.
        days_requested:
          description: The maximum number of days of transaction history to request for the Transactions product.
          type: integer
          minimum: 1
          maximum: 730
          default: 90
          x-hidden-from-docs: true
      title: SandboxPublicTokenCreateRequestOptionsTransactions
    SandboxPublicTokenCreateRequestOptionsIncomeVerification:
      type: object
      description: A set of parameters for income verification options. This field is required if `income_verification` is included in the `initial_products` array.
      properties:
        income_source_types:
          type: array
          description: The types of source income data that users will be permitted to share. Options include `bank` and `payroll`. Currently you can only specify one of these options.
          items:
            $ref: '#/components/schemas/IncomeVerificationSourceType'
        bank_income:
          $ref: '#/components/schemas/SandboxPublicTokenCreateRequestIncomeVerificationBankIncome'
    SandboxPublicTokenCreateRequestIncomeVerificationBankIncome:
      type: object
      description: Specifies options for Bank Income. This field is required if `income_verification` is included in the `initial_products` array and `bank` is specified in `income_source_types`.
      properties:
        days_requested:
          type: integer
          description: The number of days of data to request for the Bank Income product
    SandboxPublicTokenCreateResponse:
      type: object
      additionalProperties: true
      description: SandboxPublicTokenCreateResponse defines the response schema for `/sandbox/public_token/create`
      properties:
        public_token:
          type: string
          description: A public token that can be exchanged for an access token using `/item/public_token/exchange`
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - public_token
      - request_id
    SandboxItemFireWebhookRequest:
      type: object
      description: SandboxItemFireWebhookRequest defines the request schema for `/sandbox/item/fire_webhook`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        access_token:
          $ref: '#/components/schemas/AccessToken'
        webhook_type:
          $ref: '#/components/schemas/WebhookType'
        webhook_code:
          type: string
          enum:
          - DEFAULT_UPDATE
          - NEW_ACCOUNTS_AVAILABLE
          - AUTH_DATA_UPDATE
          - AUTHORIZATION_GRANTED
          - RECURRING_TRANSACTIONS_UPDATE
          - SYNC_UPDATES_AVAILABLE
          - PRODUCT_READY
          - ERROR
          description: The webhook codes that can be fired by this test endpoint.
      required:
      - access_token
      - webhook_code
    WebhookType:
      type: string
      enum:
      - AUTH
      - HOLDINGS
      - INVESTMENTS_TRANSACTIONS
      - ITEM
      - LIABILITIES
      - TRANSACTIONS
      - ASSETS
      description: The webhook types that can be fired by this test endpoint.
    SandboxItemFireWebhookResponse:
      type: object
      additionalProperties: true
      description: SandboxItemFireWebhookResponse defines the response schema for `/sandbox/item/fire_webhook`
      properties:
        webhook_fired:
          type: boolean
          description: Value is `true`  if the test` webhook_code`  was successfully fired.
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - webhook_fired
      - request_id
    AccountsBalanceGetRequest:
      type: object
      description: AccountsBalanceGetRequest defines the request schema for `/accounts/balance/get`
      properties:
        access_token:
          $ref: '#/components/schemas/AccessToken'
        secret:
          $ref: '#/components/schemas/APISecret'
        client_id:
          $ref: '#/components/schemas/APIClientID'
        options:
          $ref: '#/components/schemas/AccountsBalanceGetRequestOptions'
        payment_details:
          $ref: '#/components/schemas/AccountsBalanceGetRequestPaymentDetails'
      required:
      - access_token
    AccountsBalanceGetRequestPaymentDetails:
      x-hidden-from-docs: true
      type: object
      description: An optional object containing payment details. If set, a payment risk assessment is performed and returned as AccountsBalanceGetResponsePaymentRiskAssessment.
      nullable: true
      additionalProperties: true
      properties:
        account_id:
          type: string
          description: |-
            The Plaid `account_id` of the account that is the funding source for the proposed transaction. The `account_id` is returned in the `/accounts/get` endpoint as well as the [`onSuccess`](/docs/link/ios/#link-ios-onsuccess-linkSuccess-metadata-accounts-id) callback metadata.

            This will return an [`INVALID_ACCOUNT_ID`](/docs/errors/invalid-input/#invalid_account_id) error if the account has been removed at the bank or if the `account_id` is no longer valid.
        client_transaction_id:
          type: string
          description: The unique ID that you would like to use to refer to this transaction. For your convenience mapping your internal data, you could use your internal identifier for this transaction. The max length for this field is 36 characters.
          minLength: 1
          maxLength: 36
        amount:
          type: number
          format: double
          description: The transaction amount, in USD (e.g. `102.05`)
        balance_threshold_percentage:
          type: integer
          minimum: 1
          maximum: 100
          default: 90
          description: The threshold percentage of the account balance used for comparison with the requested ACH debit amount.
    AccountsBalanceGetRequestOptions:
      type: object
      description: An optional object to filter `/accounts/balance/get` results.
      properties:
        account_ids:
          type: array
          description: |-
            A list of `account_ids` to retrieve for the Item. The default value is `null`.

            Note: An error will be returned if a provided `account_id` is not associated with the Item.
          items:
            type: string
        min_last_updated_datetime:
          $ref: '#/components/schemas/MinLastUpdatedDatetime'
    MinLastUpdatedDatetime:
      title: MinLastUpdatedDatetime
      type: string
      format: date-time
      description: |-
        Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (`YYYY-MM-DDTHH:mm:ssZ`) indicating the oldest acceptable balance when making a request to `/accounts/balance/get`.

        If the balance that is pulled for `ins_128026` (Capital One) is older than the given timestamp, an `INVALID_REQUEST` error with the code of `LAST_UPDATED_DATETIME_OUT_OF_RANGE` will be returned with the most recent timestamp for the requested account contained in the response.

        This field is only used when the institution is `ins_128026` (Capital One), in which case a value must be provided or an `INVALID_REQUEST` error with the code of `INVALID_FIELD` will be returned. For all other institutions, this field is ignored.
    IdentityGetRequest:
      type: object
      description: IdentityGetRequest defines the request schema for `/identity/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        access_token:
          $ref: '#/components/schemas/AccessToken'
        options:
          $ref: '#/components/schemas/IdentityGetRequestOptions'
      required:
      - access_token
    IdentityGetRequestOptions:
      type: object
      description: An optional object to filter `/identity/get` results.
      properties:
        account_ids:
          type: array
          description: |-
            A list of `account_ids` to retrieve for the Item.
            Note: An error will be returned if a provided `account_id` is not associated with the Item.
          items:
            type: string
    IdentityGetResponse:
      type: object
      additionalProperties: true
      description: IdentityGetResponse defines the response schema for `/identity/get`
      properties:
        accounts:
          type: array
          description: The accounts for which Identity data has been requested
          items:
            $ref: '#/components/schemas/AccountIdentity'
        item:
          $ref: '#/components/schemas/Item'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - accounts
      - item
      - request_id
    IdentityMatchRequest:
      type: object
      description: IdentityMatchRequest defines the request schema for `/identity/match`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        access_token:
          $ref: '#/components/schemas/AccessToken'
        user:
          $ref: '#/components/schemas/IdentityMatchUser'
        options:
          $ref: '#/components/schemas/IdentityMatchRequestOptions'
      required:
      - access_token
    IdentityMatchRequestOptions:
      type: object
      description: An optional object to filter /identity/match results
      properties:
        account_ids:
          type: array
          description: An array of `account_ids` to perform fuzzy match
          items:
            type: string
    IdentityMatchUser:
      title: IdentityMatchUser
      type: object
      additionalProperties: true
      description: The user's legal name, phone number, email address and address used to perform fuzzy match. If Financial Account Matching is enabled in the Identity Verification product, leave this field empty to automatically match against PII collected from the Identity Verification checks.
      properties:
        legal_name:
          type: string
          description: The user's full legal name.
          nullable: true
        phone_number:
          type: string
          nullable: true
          description: 'The user''s phone number, in E.164 format: +{countrycode}{number}. For example: "+14151234567". Phone numbers provided in other formats will be parsed on a best-effort basis.'
        email_address:
          type: string
          description: The user's email address.
          nullable: true
        address:
          $ref: '#/components/schemas/AddressDataNullableNoRequiredFields'
    IdentityMatchResponse:
      type: object
      additionalProperties: true
      description: IdentityMatchResponse defines the response schema for `/identity/match`
      properties:
        accounts:
          type: array
          description: The accounts for which Identity match has been requested
          items:
            $ref: '#/components/schemas/AccountIdentityMatchScore'
        item:
          $ref: '#/components/schemas/Item'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - accounts
      - item
      - request_id
    IdentityRefreshRequest:
      type: object
      description: IdentityRefreshRequest defines the request schema for `/identity/refresh`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        access_token:
          $ref: '#/components/schemas/AccessToken'
        secret:
          $ref: '#/components/schemas/APISecret'
      required:
      - access_token
    IdentityRefreshResponse:
      type: object
      additionalProperties: true
      description: IdentityRefreshResponse defines the response schema for `/identity/refresh`
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - request_id
    ProcessorAuthGetRequest:
      type: object
      description: ProcessorAuthGetRequest defines the request schema for `/processor/auth/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        processor_token:
          $ref: '#/components/schemas/ProcessorToken'
      required:
      - processor_token
    ProcessorAuthGetResponse:
      type: object
      additionalProperties: true
      description: ProcessorAuthGetResponse defines the response schema for `/processor/auth/get`
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
        numbers:
          $ref: '#/components/schemas/ProcessorNumber'
        account:
          $ref: '#/components/schemas/AccountBase'
      required:
      - request_id
      - numbers
      - account
    ProcessorAccountGetRequest:
      type: object
      description: ProcessorAccountGetRequest defines the request schema for `/processor/account/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        processor_token:
          $ref: '#/components/schemas/ProcessorToken'
        secret:
          $ref: '#/components/schemas/APISecret'
      required:
      - processor_token
    ProcessorAccountGetResponse:
      type: object
      additionalProperties: true
      description: ProcessorAccountGetResponse defines the response schema for `/processor/account/get`
      properties:
        account:
          $ref: '#/components/schemas/AccountBase'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - account
      - request_id
    ProcessorTransactionsGetRequestOptions:
      type: object
      description: An optional object to be used with the request. If specified, `options` must not be `null`.
      properties:
        count:
          type: integer
          default: 100
          description: The number of transactions to fetch.
          minimum: 1
          maximum: 500
          exclusiveMinimum: false
        offset:
          type: integer
          default: 0
          description: The number of transactions to skip. The default value is 0.
          minimum: 0
        include_original_description:
          type: boolean
          default: false
          description: Include the raw unparsed transaction description from the financial institution. This field is disabled by default. If you need this information in addition to the parsed data provided, contact your Plaid Account Manager, or submit a [Support request](https://dashboard.plaid.com/support/new/product-and-development/product-troubleshooting/product-functionality).
          nullable: true
        include_personal_finance_category_beta:
          type: boolean
          default: false
          description: Personal finance categories are now returned by default.
          deprecated: true
          x-hidden-from-docs: true
        include_personal_finance_category:
          type: boolean
          default: false
          description: Personal finance categories are now returned by default.
          deprecated: true
          x-hidden-from-docs: true
        include_logo_and_counterparty_beta:
          type: boolean
          default: false
          description: Counterparties and extra merchant fields are now returned by default.
          deprecated: true
          x-hidden-from-docs: true
    ProcessorTransactionsGetRequest:
      type: object
      description: ProcessorTransactionsGetRequest defines the request schema for `/processor/transactions/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        options:
          $ref: '#/components/schemas/ProcessorTransactionsGetRequestOptions'
        processor_token:
          $ref: '#/components/schemas/ProcessorToken'
        secret:
          $ref: '#/components/schemas/APISecret'
        start_date:
          type: string
          format: date
          description: The earliest date for which data should be returned. Dates should be formatted as YYYY-MM-DD.
        end_date:
          type: string
          format: date
          description: The latest date for which data should be returned. Dates should be formatted as YYYY-MM-DD.
      required:
      - processor_token
      - start_date
      - end_date
    ProcessorTransactionsGetResponse:
      type: object
      additionalProperties: true
      description: ProcessorTransactionsGetResponse defines the response schema for `/processor/transactions/get`
      properties:
        account:
          $ref: '#/components/schemas/AccountBase'
        transactions:
          type: array
          description: An array containing transactions from the account. Transactions are returned in reverse chronological order, with the most recent at the beginning of the array. The maximum number of transactions returned is determined by the `count` parameter.
          items:
            $ref: '#/components/schemas/Transaction'
        total_transactions:
          type: integer
          description: The total number of transactions available within the date range specified. If `total_transactions` is larger than the size of the `transactions` array, more transactions are available and can be fetched via manipulating the `offset` parameter.
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - account
      - transactions
      - total_transactions
      - request_id
    ProcessorTransactionsSyncRequest:
      type: object
      description: ProcessorTransactionsSyncRequest defines the request schema for `/processor/transactions/sync`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        processor_token:
          $ref: '#/components/schemas/ProcessorToken'
        secret:
          $ref: '#/components/schemas/APISecret'
        cursor:
          type: string
          description: |-
            The cursor value represents the last update requested. Providing it will cause the response to only return changes after this update.
            If omitted, the entire history of updates will be returned, starting with the first-added transactions on the item.
            Note: The upper-bound length of this cursor is 256 characters of base64.
        count:
          type: integer
          default: 100
          description: The number of transaction updates to fetch.
          minimum: 1
          maximum: 500
          exclusiveMinimum: false
        options:
          $ref: '#/components/schemas/TransactionsSyncRequestOptions'
      required:
      - processor_token
    ProcessorTransactionsSyncResponse:
      type: object
      additionalProperties: true
      description: ProcessorTransactionsSyncResponse defines the response schema for `/processor/transactions/sync`
      properties:
        added:
          type: array
          description: Transactions that have been added to the Item since `cursor` ordered by ascending last modified time.
          items:
            $ref: '#/components/schemas/Transaction'
        modified:
          type: array
          description: Transactions that have been modified on the Item since `cursor` ordered by ascending last modified time.
          items:
            $ref: '#/components/schemas/Transaction'
        removed:
          type: array
          description: Transactions that have been removed from the Item since `cursor` ordered by ascending last modified time.
          items:
            $ref: '#/components/schemas/RemovedTransaction'
        next_cursor:
          type: string
          description: Cursor used for fetching any future updates after the latest update provided in this response. The cursor obtained after all pages have been pulled (indicated by `has_more` being `false`) will be valid for at least 1 year. This cursor should be persisted for later calls. If transactions are not yet available, this will be an empty string.
        has_more:
          type: boolean
          description: Represents if more than requested count of transaction updates exist. If true, the additional updates can be fetched by making an additional request with `cursor` set to `next_cursor`. If `has_more` is true, it’s important to pull all available pages, to make it less likely for underlying data changes to conflict with pagination.
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - added
      - modified
      - removed
      - next_cursor
      - has_more
      - request_id
    ProcessorTransactionsRefreshRequest:
      type: object
      description: ProcessorTransactionsRefreshRequest defines the request schema for `/processor/transactions/refresh`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        processor_token:
          $ref: '#/components/schemas/ProcessorToken'
        secret:
          $ref: '#/components/schemas/APISecret'
      required:
      - processor_token
    ProcessorTransactionsRefreshResponse:
      type: object
      additionalProperties: true
      description: ProcessorTransactionsRefreshResponse defines the response schema for `/processor/transactions/refresh`
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - request_id
    ProcessorTransactionsRecurringGetRequest:
      type: object
      description: ProcessorTransactionsRecurringGetRequest defines the request schema for `/processor/transactions/recurring/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        processor_token:
          $ref: '#/components/schemas/ProcessorToken'
        secret:
          $ref: '#/components/schemas/APISecret'
        options:
          $ref: '#/components/schemas/TransactionsRecurringGetRequestOptions'
      required:
      - processor_token
    ProcessorTransactionsRecurringGetResponse:
      type: object
      additionalProperties: true
      description: ProcessorTransactionsRecurringGetResponse defines the response schema for `/processor/transactions/recurring/get`
      properties:
        inflow_streams:
          type: array
          description: An array of depository transaction streams.
          items:
            $ref: '#/components/schemas/TransactionStream'
        outflow_streams:
          type: array
          description: An array of expense transaction streams.
          items:
            $ref: '#/components/schemas/TransactionStream'
        updated_datetime:
          type: string
          format: date-time
          description: Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (`YYYY-MM-DDTHH:mm:ssZ`) indicating the last time transaction streams for the given account were updated on
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - inflow_streams
      - outflow_streams
      - updated_datetime
      - request_id
    ProcessorBankTransferCreateRequest:
      title: ProcessorBankTransferCreateRequest
      type: object
      description: Defines the request schema for `/processor/bank_transfer/create`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        idempotency_key:
          $ref: '#/components/schemas/BankTransferIdempotencyKey'
        processor_token:
          $ref: '#/components/schemas/ProcessorToken'
        type:
          $ref: '#/components/schemas/BankTransferType'
        network:
          $ref: '#/components/schemas/BankTransferNetwork'
        amount:
          $ref: '#/components/schemas/BankTransferAmount'
        iso_currency_code:
          type: string
          description: The currency of the transfer amount – should be set to "USD".
        description:
          type: string
          description: The transfer description. Maximum of 10 characters.
          maxLength: 10
        ach_class:
          $ref: '#/components/schemas/ACHClass'
        user:
          $ref: '#/components/schemas/BankTransferUser'
        custom_tag:
          type: string
          maxLength: 100
          nullable: true
          description: An arbitrary string provided by the client for storage with the bank transfer. May be up to 100 characters.
        metadata:
          $ref: '#/components/schemas/BankTransferMetadata'
        origination_account_id:
          type: string
          nullable: true
          description: Plaid’s unique identifier for the origination account for this transfer. If you have more than one origination account, this value must be specified.
      required:
      - idempotency_key
      - processor_token
      - type
      - network
      - amount
      - iso_currency_code
      - description
      - user
    ProcessorBankTransferCreateResponse:
      title: ProcessorBankTransferCreateResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/processor/bank_transfer/create`
      properties:
        bank_transfer:
          $ref: '#/components/schemas/BankTransfer'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - bank_transfer
      - request_id
    ProcessorNumber:
      type: object
      additionalProperties: true
      description: An object containing identifying numbers used for making electronic transfers to and from the `account`. The identifying number type (ACH, EFT, IBAN, or BACS) used will depend on the country of the account. An account may have more than one number type. If a particular identifying number type is not used by the `account` for which auth data has been requested, a null value will be returned.
      properties:
        ach:
          $ref: '#/components/schemas/NumbersACHNullable'
        eft:
          $ref: '#/components/schemas/NumbersEFTNullable'
        international:
          $ref: '#/components/schemas/NumbersInternationalNullable'
        bacs:
          $ref: '#/components/schemas/NumbersBACSNullable'
    ProcessorLiabilitiesGetRequest:
      type: object
      description: ProcessorLiabilitiesGetRequest defines the request schema for `/processor/liabilities/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        processor_token:
          $ref: '#/components/schemas/ProcessorToken'
      required:
      - processor_token
    ProcessorLiabilitiesGetResponse:
      type: object
      additionalProperties: true
      description: ProcessorLiabilitiesGetResponse defines the response schema for `/processor/liabilities/get`
      properties:
        account:
          $ref: '#/components/schemas/AccountBase'
        liabilities:
          $ref: '#/components/schemas/LiabilitiesObject'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - account
      - liabilities
      - request_id
    ProcessorIdentityGetRequest:
      type: object
      description: ProcessorIdentityGetRequest defines the request schema for `/processor/identity/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        processor_token:
          $ref: '#/components/schemas/ProcessorToken'
      required:
      - processor_token
    ProcessorIdentityGetResponse:
      type: object
      additionalProperties: true
      description: ProcessorIdentityGetResponse defines the response schema for `/processor/identity/get`
      properties:
        account:
          $ref: '#/components/schemas/AccountIdentity'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - account
      - request_id
    ProcessorIdentityMatchRequest:
      type: object
      description: ProcessorIdentityMatchRequest defines the request schema for `/processor/identity/match`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        processor_token:
          $ref: '#/components/schemas/ProcessorToken'
        user:
          $ref: '#/components/schemas/IdentityMatchUser'
      required:
      - processor_token
    ProcessorIdentityMatchResponse:
      type: object
      additionalProperties: true
      description: ProcessorIdentityMatchResponse defines the response schema for `/processor/identity/match`
      properties:
        account:
          $ref: '#/components/schemas/AccountIdentityMatchScore'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - account
      - request_id
    ProcessorBalanceGetRequest:
      type: object
      description: ProcessorBalanceGetRequest defines the request schema for `/processor/balance/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        processor_token:
          $ref: '#/components/schemas/ProcessorToken'
        options:
          $ref: '#/components/schemas/ProcessorBalanceGetRequestOptions'
      required:
      - processor_token
    ProcessorBalanceGetRequestOptions:
      type: object
      description: An optional object to filter `/processor/balance/get` results.
      properties:
        min_last_updated_datetime:
          $ref: '#/components/schemas/MinLastUpdatedDatetime'
    ProcessorBalanceGetResponse:
      type: object
      additionalProperties: true
      description: ProcessorBalanceGetResponse defines the response schema for `/processor/balance/get`
      properties:
        account:
          $ref: '#/components/schemas/AccountBase'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - account
      - request_id
    WebhookVerificationKeyGetRequest:
      type: object
      description: WebhookVerificationKeyGetRequest defines the request schema for `/webhook_verification_key/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        key_id:
          type: string
          description: The key ID ( `kid` ) from the JWT header.
      required:
      - key_id
    WebhookVerificationKeyGetResponse:
      type: object
      additionalProperties: true
      description: WebhookVerificationKeyGetResponse defines the response schema for `/webhook_verification_key/get`
      properties:
        key:
          $ref: '#/components/schemas/JWKPublicKey'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - key
      - request_id
    JWKPublicKey:
      type: object
      additionalProperties: true
      description: A JSON Web Key (JWK) that can be used in conjunction with [JWT libraries](https://jwt.io/#libraries-io) to verify Plaid webhooks
      properties:
        alg:
          type: string
          description: The alg member identifies the cryptographic algorithm family used with the key.
        crv:
          type: string
          description: The crv member identifies the cryptographic curve used with the key.
        kid:
          type: string
          description: The kid (Key ID) member can be used to match a specific key. This can be used, for instance, to choose among a set of keys within the JWK during key rollover.
        kty:
          type: string
          description: The kty (key type) parameter identifies the cryptographic algorithm family used with the key, such as RSA or EC.
        use:
          type: string
          description: The use (public key use) parameter identifies the intended use of the public key.
        x:
          type: string
          description: The x member contains the x coordinate for the elliptic curve point, provided as a base64url-encoded string of the coordinate's big endian representation.
        "y":
          type: string
          description: The y member contains the y coordinate for the elliptic curve point, provided as a base64url-encoded string of the coordinate's big endian representation.
        created_at:
          type: integer
          description: The timestamp when the key was created, in Unix time.
        expired_at:
          type: integer
          description: The timestamp when the key expired, in Unix time.
          nullable: true
      required:
      - alg
      - kid
      - kty
      - crv
      - x
      - "y"
      - use
      - created_at
      - expired_at
    LiabilitiesGetRequest:
      type: object
      description: LiabilitiesGetRequest defines the request schema for `/liabilities/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        access_token:
          $ref: '#/components/schemas/AccessToken'
        options:
          $ref: '#/components/schemas/LiabilitiesGetRequestOptions'
      required:
      - access_token
    LiabilitiesGetRequestOptions:
      type: object
      description: An optional object to filter `/liabilities/get` results. If provided, `options` cannot be null.
      properties:
        account_ids:
          type: array
          description: |-
            A list of accounts to retrieve for the Item.

            An error will be returned if a provided `account_id` is not associated with the Item
          items:
            type: string
    LiabilitiesGetResponse:
      type: object
      additionalProperties: true
      description: LiabilitiesGetResponse defines the response schema for `/liabilities/get`
      properties:
        accounts:
          type: array
          description: An array of accounts associated with the Item
          items:
            $ref: '#/components/schemas/AccountBase'
        item:
          $ref: '#/components/schemas/Item'
        liabilities:
          $ref: '#/components/schemas/LiabilitiesObject'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - accounts
      - item
      - liabilities
      - request_id
    PaymentInitiationRecipientCreateRequest:
      type: object
      description: PaymentInitiationRecipientCreateRequest defines the request schema for `/payment_initiation/recipient/create`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        name:
          type: string
          description: The name of the recipient. We recommend using strings of length 18 or less and avoid special characters to ensure compatibility with all institutions.
          minLength: 1
        iban:
          type: string
          description: The International Bank Account Number (IBAN) for the recipient. If BACS data is not provided, an IBAN is required.
          nullable: true
          minLength: 15
          maxLength: 34
        bacs:
          $ref: '#/components/schemas/RecipientBACSNullable'
        address:
          $ref: '#/components/schemas/PaymentInitiationAddress'
      required:
      - name
    PaymentInitiationRecipientCreateResponse:
      type: object
      additionalProperties: true
      description: PaymentInitiationRecipientCreateResponse defines the response schema for `/payment_initation/recipient/create`
      properties:
        recipient_id:
          type: string
          description: A unique ID identifying the recipient
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - recipient_id
      - request_id
    PaymentInitiationPaymentReverseResponse:
      type: object
      additionalProperties: true
      description: PaymentInitiationPaymentReverseResponse defines the response schema for `/payment_initation/payment/reverse`
      properties:
        refund_id:
          type: string
          description: A unique ID identifying the refund
        status:
          $ref: '#/components/schemas/WalletTransactionStatus'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - refund_id
      - request_id
      - status
    PaymentInitiationRecipientGetRequest:
      type: object
      description: PaymentInitiationRecipientGetRequest defines the request schema for `/payment_initiation/recipient/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        recipient_id:
          type: string
          description: The ID of the recipient
      required:
      - recipient_id
    PaymentInitiationRecipientGetResponse:
      additionalProperties: true
      description: PaymentInitiationRecipientGetResponse defines the response schema for `/payment_initiation/recipient/get`
      allOf:
      - $ref: '#/components/schemas/PaymentInitiationRecipient'
      - type: object
        properties:
          request_id:
            $ref: '#/components/schemas/RequestID'
      required:
      - recipient_id
      - name
      - request_id
    PaymentInitiationRecipient:
      type: object
      additionalProperties: true
      description: PaymentInitiationRecipient defines a payment initiation recipient
      properties:
        recipient_id:
          type: string
          description: The ID of the recipient.
        name:
          type: string
          description: The name of the recipient.
        address:
          $ref: '#/components/schemas/PaymentInitiationAddress'
        iban:
          type: string
          description: The International Bank Account Number (IBAN) for the recipient.
          nullable: true
        bacs:
          $ref: '#/components/schemas/RecipientBACSNullable'
      required:
      - recipient_id
      - name
      title: PaymentInitiationRecipient
    PaymentInitiationRecipientListRequest:
      type: object
      description: PaymentInitiationRecipientListRequest defines the request schema for `/payment_initiation/recipient/list`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
    PaymentInitiationRecipientListResponse:
      type: object
      additionalProperties: true
      description: PaymentInitiationRecipientListResponse defines the response schema for `/payment_initiation/recipient/list`
      properties:
        recipients:
          type: array
          description: An array of payment recipients created for Payment Initiation
          items:
            $ref: '#/components/schemas/PaymentInitiationRecipient'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - recipients
      - request_id
    PaymentInitiationPaymentCreateRequest:
      type: object
      description: PaymentInitiationPaymentCreateRequest defines the request schema for `/payment_initiation/payment/create`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        recipient_id:
          type: string
          description: The ID of the recipient the payment is for.
        reference:
          type: string
          description: |-
            A reference for the payment. This must be an alphanumeric string with at most 18 characters and must not contain any special characters (since not all institutions support them).
            In order to track settlement via Payment Confirmation, each payment must have a unique reference. If the reference provided through the API is not unique, Plaid will adjust it.
            Some institutions may limit the reference to less than 18 characters. If necessary, Plaid will adjust the reference by truncating it to fit the institution's requirements.
            Both the originally provided and automatically adjusted references (if any) can be found in the `reference` and `adjusted_reference` fields, respectively.
          minLength: 1
          maxLength: 18
        amount:
          $ref: '#/components/schemas/PaymentAmount'
        schedule:
          $ref: '#/components/schemas/ExternalPaymentScheduleRequest'
        options:
          $ref: '#/components/schemas/ExternalPaymentOptions'
      required:
      - recipient_id
      - reference
      - amount
    PaymentInitiationPaymentReverseRequest:
      type: object
      description: PaymentInitiationPaymentReverseRequest defines the request schema for `/payment_initiation/payment/reverse`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        payment_id:
          type: string
          description: The ID of the payment to reverse
        idempotency_key:
          $ref: '#/components/schemas/WalletTransactionIdempotencyKey'
        reference:
          type: string
          maxLength: 18
          minLength: 6
          description: A reference for the refund. This must be an alphanumeric string with 6 to 18 characters and must not contain any special characters or spaces.
        amount:
          $ref: '#/components/schemas/PaymentAmountToRefund'
      required:
      - payment_id
      - idempotency_key
      - reference
    PaymentInitiationPaymentCreateStatus:
      type: string
      enum:
      - PAYMENT_STATUS_INPUT_NEEDED
      description: |-
        For a payment returned by this endpoint, there is only one possible value:

        `PAYMENT_STATUS_INPUT_NEEDED`: The initial phase of the payment
    PaymentInitiationPaymentCreateResponse:
      type: object
      additionalProperties: true
      description: PaymentInitiationPaymentCreateResponse defines the response schema for `/payment_initiation/payment/create`
      properties:
        payment_id:
          type: string
          description: A unique ID identifying the payment
        status:
          $ref: '#/components/schemas/PaymentInitiationPaymentCreateStatus'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - payment_id
      - status
      - request_id
    SandboxItemResetLoginRequest:
      type: object
      description: SandboxItemResetLoginRequest defines the request schema for `/sandbox/item/reset_login`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        access_token:
          $ref: '#/components/schemas/AccessToken'
      required:
      - access_token
    SandboxItemResetLoginResponse:
      type: object
      additionalProperties: true
      description: SandboxItemResetLoginResponse defines the response schema for `/sandbox/item/reset_login`
      properties:
        reset_login:
          type: boolean
          description: '`true` if the call succeeded'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - reset_login
      - request_id
    SandboxPaymentProfileResetLoginRequest:
      type: object
      description: SandboxPaymentProfileResetLoginRequest defines the request schema for `/sandbox/payment_profile/reset_login`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        payment_profile_token:
          $ref: '#/components/schemas/PaymentProfileToken'
      required:
      - payment_profile_token
    SandboxPaymentProfileResetLoginResponse:
      type: object
      additionalProperties: true
      description: SandboxPaymentProfileResetLoginResponse defines the response schema for `/sandbox/payment_profile/reset_login`
      properties:
        reset_login:
          type: boolean
          description: '`true` if the call succeeded'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - reset_login
      - request_id
    SandboxItemSetVerificationStatusRequest:
      type: object
      description: SandboxItemSetVerificationStatusRequest defines the request schema for `/sandbox/item/set_verification_status`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        access_token:
          $ref: '#/components/schemas/AccessToken'
        account_id:
          type: string
          description: The `account_id` of the account whose verification status is to be modified
        verification_status:
          enum:
          - automatically_verified
          - verification_expired
          type: string
          description: The verification status to set the account to.
      required:
      - access_token
      - account_id
      - verification_status
    SandboxItemSetVerificationStatusResponse:
      type: object
      additionalProperties: true
      description: SandboxItemSetVerificationStatusResponse defines the response schema for `/sandbox/item/set_verification_status`
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - request_id
    UserCreateRequest:
      type: object
      description: UserCreateRequest defines the request schema for `/user/create`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        client_user_id:
          description: A unique ID representing the end user. Maximum of 128 characters. Typically this will be a user ID number from your application. Personally identifiable information, such as an email address or phone number, should not be used in the `client_user_id`.
          type: string
          maxLength: 128
          minLength: 1
        consumer_report_user_identity:
          $ref: '#/components/schemas/ConsumerReportUserIdentity'
      required:
      - client_user_id
    UserCreateResponse:
      type: object
      additionalProperties: true
      description: UserCreateResponse defines the response schema for `/user/create`
      properties:
        user_token:
          $ref: '#/components/schemas/UserToken'
        user_id:
          $ref: '#/components/schemas/UserId'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - user_token
      - user_id
      - request_id
    UserUpdateRequest:
      x-hidden-from-docs: true
      type: object
      description: UserUpdateRequest defines the request schema for `/user/update`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        user_token:
          $ref: '#/components/schemas/UserToken'
        consumer_report_user_identity:
          $ref: '#/components/schemas/ConsumerReportUserIdentity'
      required:
      - user_token
    UserUpdateResponse:
      x-hidden-from-docs: true
      type: object
      additionalProperties: true
      description: UserUpdateResponse defines the response schema for `/user/update`
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - request_id
    ConsumerReportUserIdentity:
      type: object
      nullable: true
      additionalProperties: true
      x-hidden-from-docs: true
      description: ConsumerReportUserIdentity defines the user identity data collected for consumer report purpose. This field is required to be set if you later use the created user for consumer report purpose.
      properties:
        first_name:
          type: string
          description: The user's first name
        last_name:
          type: string
          description: The user's last name
        phone_numbers:
          description: The user's phone numbers. The format of phone number will be validated and for better normalization, it is expected to be in E.164 format +{countrycode}{number}, for example `+14151234567`.
          type: array
          items:
            type: string
        emails:
          description: The user's emails
          type: array
          items:
            type: string
        primary_address:
          $ref: '#/components/schemas/AddressData'
      required:
      - first_name
      - last_name
      - phone_numbers
      - emails
      - primary_address
    CreditSessionsGetRequest:
      type: object
      description: CreditSessionsGetRequest defines the request schema for `/credit/sessions/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        user_token:
          $ref: '#/components/schemas/UserToken'
      required:
      - user_token
    CreditSessionsGetResponse:
      type: object
      additionalProperties: true
      description: CreditSessionsGetResponse defines the response schema for `/credit/sessions/get`
      properties:
        sessions:
          type: array
          description: A list of Link sessions for the user. Sessions will be sorted in reverse chronological order.
          items:
            $ref: '#/components/schemas/CreditSession'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - request_id
    CreditSession:
      type: object
      description: Metadata and results for a Link session
      properties:
        link_session_id:
          type: string
          description: The unique identifier associated with the Link session. This identifier matches the `link_session_id` returned in the onSuccess/onExit callbacks.
        session_start_time:
          type: string
          description: The time when the Link session started
          format: date-time
        results:
          $ref: '#/components/schemas/CreditSessionResults'
        errors:
          type: array
          description: The set of errors that occurred during the Link session.
          items:
            $ref: '#/components/schemas/CreditSessionError'
    CreditSessionResults:
      type: object
      description: The set of results for a Link session.
      properties:
        item_add_results:
          type: array
          description: The set of Item adds for the Link session.
          items:
            $ref: '#/components/schemas/CreditSessionItemAddResult'
        bank_income_results:
          type: array
          description: The set of bank income verifications for the Link session.
          items:
            $ref: '#/components/schemas/CreditSessionBankIncomeResult'
        bank_employment_results:
          type: array
          description: The set of bank employment verifications for the Link session.
          items:
            $ref: '#/components/schemas/CreditSessionBankEmploymentResult'
        payroll_income_results:
          type: array
          description: The set of payroll income verifications for the Link session.
          items:
            $ref: '#/components/schemas/CreditSessionPayrollIncomeResult'
        document_income_results:
          $ref: '#/components/schemas/CreditSessionDocumentIncomeResult'
    CreditSessionItemAddResult:
      type: object
      description: The details of an Item add in Link.
      properties:
        public_token:
          description: Returned once a user has successfully linked their Item.
          type: string
        item_id:
          description: The Plaid Item ID. The `item_id` is always unique; linking the same account at the same institution twice will result in two Items with different `item_id` values. Like all Plaid identifiers, the `item_id` is case-sensitive.
          type: string
        institution_id:
          description: The Plaid Institution ID associated with the Item.
          type: string
    CreditSessionBankIncomeResult:
      type: object
      description: The details of a bank income verification in Link
      properties:
        status:
          $ref: '#/components/schemas/CreditSessionBankIncomeStatus'
        item_id:
          description: The Plaid Item ID. The `item_id` is always unique; linking the same account at the same institution twice will result in two Items with different `item_id` values. Like all Plaid identifiers, the `item_id` is case-sensitive.
          type: string
        institution_id:
          description: The Plaid Institution ID associated with the Item.
          type: string
    CreditSessionBankEmploymentResult:
      type: object
      description: The details of a bank employment verification in Link.
      properties:
        status:
          $ref: '#/components/schemas/CreditSessionBankEmploymentStatus'
        item_id:
          description: The Plaid Item ID. The `item_id` is always unique; linking the same account at the same institution twice will result in two Items with different `item_id` values. Like all Plaid identifiers, the `item_id` is case-sensitive.
          type: string
        institution_id:
          description: The Plaid Institution ID associated with the Item.
          type: string
    CreditSessionError:
      type: object
      description: The details of a Link error.
      properties:
        error_type:
          type: string
          description: A broad categorization of the error.
        error_code:
          description: The particular error code.
          type: string
        error_message:
          description: A developer-friendly representation of the error code.
          type: string
        display_message:
          description: A user-friendly representation of the error code. `null` if the error is not related to user action.
          type: string
          nullable: true
    CreditSessionPayrollIncomeResult:
      type: object
      description: The details of a digital payroll income verification in Link
      properties:
        num_paystubs_retrieved:
          type: integer
          description: The number of paystubs retrieved from a payroll provider.
        num_w2s_retrieved:
          type: integer
          description: The number of w2s retrieved from a payroll provider.
        institution_id:
          type: string
          description: The Plaid Institution ID associated with the Item.
        institution_name:
          type: string
          description: The Institution Name associated with the Item.
    CreditSessionDocumentIncomeResult:
      type: object
      nullable: true
      description: The details of a document income verification in Link
      properties:
        num_paystubs_uploaded:
          type: integer
          description: The number of paystubs uploaded by the user.
        num_w2s_uploaded:
          type: integer
          description: The number of w2s uploaded by the user.
        num_bank_statements_uploaded:
          type: integer
          description: The number of bank statements uploaded by the user.
      required:
      - num_paystubs_uploaded
      - num_w2s_uploaded
      - num_bank_statements_uploaded
    CreditSessionBankIncomeStatus:
      type: string
      enum:
      - APPROVED
      - NO_DEPOSITS_FOUND
      - USER_REPORTED_NO_INCOME
      description: |-
        Status of the Bank Income Link session.

        `APPROVED`: User has approved and verified their income

        `NO_DEPOSITS_FOUND`: We attempted, but were unable to find any income in the connected account.

        `USER_REPORTED_NO_INCOME`: The user explicitly indicated that they don't receive income in the connected account.

        `STARTED`: The user began the bank income portion of the link flow.

        `INTERNAL_ERROR`: The user encountered an internal error.
    CreditSessionBankEmploymentStatus:
      type: string
      enum:
      - APPROVED
      - NO_EMPLOYERS_FOUND
      - EMPLOYER_NOT_LISTED
      description: |-
        Status of the Bank Employment Link session.

        `APPROVED`: User has approved and verified their employment.

        `NO_EMPLOYMENTS_FOUND`: We attempted, but were unable to find any employment in the connected account.

        `EMPLOYER_NOT_LISTED`: The user explicitly indicated that they did not see their current or previous employer in the list of employer names found.

        `STARTED`: The user began the bank income portion of the link flow.

        `INTERNAL_ERROR`: The user encountered an internal error.
    CreditPayStubPayBasisType:
      type: string
      description: The explicit pay basis on the paystub (if present).
      enum:
      - SALARY
      - HOURLY
      - COMMISSION
    PaymentInitiationPaymentGetRequest:
      type: object
      description: PaymentInitiationPaymentGetRequest defines the request schema for `/payment_initiation/payment/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        payment_id:
          type: string
          description: The `payment_id` returned from `/payment_initiation/payment/create`.
      required:
      - payment_id
    PaymentInitiationPaymentGetResponse:
      additionalProperties: true
      description: PaymentInitiationPaymentGetResponse defines the response schema for `/payment_initation/payment/get`
      allOf:
      - $ref: '#/components/schemas/PaymentInitiationPayment'
      - type: object
        properties:
          request_id:
            $ref: '#/components/schemas/RequestID'
      required:
      - request_id
      - payment_id
      - amount
      - status
      - recipient_id
      - reference
      - last_status_update
      - bacs
      - iban
    PaymentInitiationPaymentStatus:
      type: string
      enum:
      - PAYMENT_STATUS_INPUT_NEEDED
      - PAYMENT_STATUS_PROCESSING
      - PAYMENT_STATUS_INITIATED
      - PAYMENT_STATUS_COMPLETED
      - PAYMENT_STATUS_INSUFFICIENT_FUNDS
      - PAYMENT_STATUS_FAILED
      - PAYMENT_STATUS_BLOCKED
      - PAYMENT_STATUS_UNKNOWN
      - PAYMENT_STATUS_EXECUTED
      - PAYMENT_STATUS_SETTLED
      - PAYMENT_STATUS_AUTHORISING
      - PAYMENT_STATUS_CANCELLED
      - PAYMENT_STATUS_ESTABLISHED
      - PAYMENT_STATUS_REJECTED
      description: |-
        The status of the payment.

        `PAYMENT_STATUS_INPUT_NEEDED`: This is the initial state of all payments. It indicates that the payment is waiting on user input to continue processing. A payment may re-enter this state later on if further input is needed.

        `PAYMENT_STATUS_INITIATED`: The payment has been successfully authorised and accepted by the financial institution. For successful payments, this is a potential terminal status. Further status transitions can be to REJECTED and, when supported by the institution, to EXECUTED.

        `PAYMENT_STATUS_INSUFFICIENT_FUNDS`: The payment has failed due to insufficient funds.

        `PAYMENT_STATUS_FAILED`: The payment has failed to be initiated. This error may be caused by transient system outages and is retryable once the root cause is resolved.

        `PAYMENT_STATUS_BLOCKED`: The payment has been blocked by Plaid. This can occur, for example, due to Plaid flagging the payment as potentially risky. This is a retryable error.

        `PAYMENT_STATUS_AUTHORISING`: The payment is currently being processed. The payment will automatically exit this state when the financial institution has authorised the transaction.

        `PAYMENT_STATUS_CANCELLED`: The payment was cancelled (typically by the end user) during authorisation.

        `PAYMENT_STATUS_EXECUTED`: The funds have successfully left the payer account and payment is considered complete. Not all institutions support this status: support is more common in the UK, and less common in the EU. For institutions where this status is not supported, the terminal status for a successful payment will be `PAYMENT_STATUS_INITIATED`.

        `PAYMENT_STATUS_SETTLED`: The payment has settled and funds are available for use. A payment will typically settle within seconds to several days, depending on which payment rail is used. This status is only available to customers using [Plaid Virtual Accounts](https://plaid.com/docs/virtual-accounts/).

        `PAYMENT_STATUS_ESTABLISHED`: Indicates that the standing order has been successfully established. This state is only used for standing orders.

        `PAYMENT_STATUS_REJECTED`: The payment was rejected by the financial institution.

        Deprecated:
        These statuses will be removed in a future release.

        `PAYMENT_STATUS_UNKNOWN`: The payment status is unknown.

        `PAYMENT_STATUS_PROCESSING`: The payment is currently being processed. The payment will automatically exit this state when processing is complete.

        `PAYMENT_STATUS_COMPLETED`: Indicates that the standing order has been successfully established. This state is only used for standing orders.
    PaymentInitiationPayment:
      type: object
      additionalProperties: true
      description: PaymentInitiationPayment defines a payment initiation payment
      properties:
        payment_id:
          type: string
          description: The ID of the payment. Like all Plaid identifiers, the `payment_id` is case sensitive.
        amount:
          $ref: '#/components/schemas/PaymentAmount'
        status:
          $ref: '#/components/schemas/PaymentInitiationPaymentStatus'
        recipient_id:
          type: string
          description: The ID of the recipient
        reference:
          type: string
          description: A reference for the payment.
        adjusted_reference:
          type: string
          description: The value of the reference sent to the bank after adjustment to pass bank validation rules.
          nullable: true
        last_status_update:
          format: date-time
          type: string
          description: The date and time of the last time the `status` was updated, in IS0 8601 format
        schedule:
          $ref: '#/components/schemas/ExternalPaymentScheduleGet'
        refund_details:
          $ref: '#/components/schemas/ExternalPaymentRefundDetails'
        bacs:
          $ref: '#/components/schemas/SenderBACSNullable'
        iban:
          type: string
          description: The International Bank Account Number (IBAN) for the sender, if specified in the `/payment_initiation/payment/create` call.
          nullable: true
        refund_ids:
          type: array
          description: Refund IDs associated with the payment.
          items:
            type: string
          nullable: true
        amount_refunded:
          $ref: '#/components/schemas/PaymentAmountRefunded'
        wallet_id:
          type: string
          description: The EMI (E-Money Institution) wallet that this payment is associated with, if any. This wallet is used as an intermediary account to enable Plaid to reconcile the settlement of funds for Payment Initiation requests.
          nullable: true
        scheme:
          $ref: '#/components/schemas/PaymentScheme'
        adjusted_scheme:
          $ref: '#/components/schemas/PaymentScheme'
        consent_id:
          type: string
          description: The payment consent ID that this payment was initiated with. Is present only when payment was initiated using the payment consent.
          nullable: true
        transaction_id:
          type: string
          description: The transaction ID that this payment is associated with, if any. This is present only when a payment was initiated using virtual accounts.
          nullable: true
      required:
      - payment_id
      - amount
      - status
      - recipient_id
      - reference
      - last_status_update
      - bacs
      - iban
    PaymentInitiationPaymentTokenCreateRequest:
      type: object
      description: PaymentInitiationPaymentTokenCreateRequest defines the request schema for `/payment_initiation/payment/token/create`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        payment_id:
          type: string
          description: The `payment_id` returned from `/payment_initiation/payment/create`.
      required:
      - payment_id
    PaymentInitiationPaymentTokenCreateResponse:
      type: object
      additionalProperties: true
      description: PaymentInitiationPaymentTokenCreateResponse defines the response schema for `/payment_initiation/payment/token/create`
      properties:
        payment_token:
          type: string
          description: A `payment_token` that can be provided to Link initialization to enter the payment initiation flow
        payment_token_expiration_time:
          format: date-time
          type: string
          description: The date and time at which the token will expire, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format. A `payment_token` expires after 15 minutes.
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - payment_token
      - payment_token_expiration_time
      - request_id
    PaymentInitiationConsentCreateRequest:
      type: object
      description: PaymentInitiationConsentCreateRequest defines the request schema for `/payment_initiation/consent/create`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        recipient_id:
          type: string
          description: The ID of the recipient the payment consent is for. The created consent can be used to transfer funds to this recipient only.
        reference:
          type: string
          description: A reference for the payment consent. This must be an alphanumeric string with at most 18 characters and must not contain any special characters.
          minLength: 1
          maxLength: 18
        scopes:
          type: array
          description: An array of payment consent scopes.
          minItems: 1
          uniqueItems: true
          items:
            $ref: '#/components/schemas/PaymentInitiationConsentScope'
        constraints:
          $ref: '#/components/schemas/PaymentInitiationConsentConstraints'
        options:
          $ref: '#/components/schemas/ExternalPaymentInitiationConsentOptions'
      required:
      - recipient_id
      - reference
      - scopes
      - constraints
    PaymentInitiationConsentCreateResponse:
      type: object
      additionalProperties: true
      description: PaymentInitiationConsentCreateResponse defines the response schema for `/payment_initiation/consent/create`
      properties:
        consent_id:
          type: string
          description: A unique ID identifying the payment consent.
        status:
          $ref: '#/components/schemas/PaymentInitiationConsentStatus'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - consent_id
      - status
      - request_id
    PaymentInitiationConsentGetRequest:
      type: object
      description: PaymentInitiationConsentGetRequest defines the request schema for `/payment_initiation/consent/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        consent_id:
          type: string
          description: The `consent_id` returned from `/payment_initiation/consent/create`.
      required:
      - consent_id
    PaymentInitiationConsentGetResponse:
      type: object
      additionalProperties: true
      description: PaymentInitiationConsentGetResponse defines the response schema for `/payment_initation/consent/get`
      allOf:
      - $ref: '#/components/schemas/PaymentInitiationConsent'
      - type: object
        properties:
          request_id:
            $ref: '#/components/schemas/RequestID'
      required:
      - request_id
    PaymentInitiationConsent:
      type: object
      additionalProperties: true
      description: PaymentInitiationConsent defines a payment initiation consent.
      properties:
        consent_id:
          type: string
          description: The consent ID.
          minLength: 1
        status:
          $ref: '#/components/schemas/PaymentInitiationConsentStatus'
        created_at:
          type: string
          format: date-time
          description: Consent creation timestamp, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.
        recipient_id:
          type: string
          description: The ID of the recipient the payment consent is for.
          minLength: 1
        reference:
          type: string
          description: A reference for the payment consent.
        constraints:
          $ref: '#/components/schemas/PaymentInitiationConsentConstraints'
        scopes:
          type: array
          description: An array of payment consent scopes.
          items:
            $ref: '#/components/schemas/PaymentInitiationConsentScope'
      required:
      - consent_id
      - status
      - created_at
      - recipient_id
      - reference
      - constraints
      - scopes
    PaymentInitiationConsentStatus:
      type: string
      enum:
      - UNAUTHORISED
      - AUTHORISED
      - REVOKED
      - REJECTED
      - EXPIRED
      description: |-
        The status of the payment consent.

        `UNAUTHORISED`: Consent created, but requires user authorisation.

        `REJECTED`: Consent authorisation was rejected by the user and/or the bank.

        `AUTHORISED`: Consent is active and ready to be used.

        `REVOKED`: Consent has been revoked and can no longer be used.

        `EXPIRED`: Consent is no longer valid.
    PaymentInitiationConsentRevokeRequest:
      type: object
      description: PaymentInitiationConsentRevokeRequest defines the request schema for `/payment_initiation/consent/revoke`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        consent_id:
          type: string
          description: The consent ID.
      required:
      - consent_id
    PaymentInitiationConsentRevokeResponse:
      type: object
      additionalProperties: true
      description: PaymentInitiationConsentRevokeResponse defines the response schema for `/payment_initation/consent/revoke`
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
    PaymentInitiationConsentPaymentExecuteRequest:
      type: object
      description: PaymentInitiationConsentPaymentExecuteRequest defines the request schema for `/payment_initiation/consent/payment/execute`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        consent_id:
          type: string
          description: The consent ID.
        amount:
          $ref: '#/components/schemas/PaymentAmount'
        idempotency_key:
          $ref: '#/components/schemas/ConsentPaymentIdempotencyKey'
      required:
      - consent_id
      - amount
      - idempotency_key
    PaymentInitiationConsentPaymentExecuteResponse:
      type: object
      additionalProperties: true
      description: PaymentInitiationConsentPaymentExecuteResponse defines the response schema for `/payment_initiation/consent/payment/execute`
      properties:
        payment_id:
          type: string
          description: A unique ID identifying the payment
        status:
          $ref: '#/components/schemas/PaymentInitiationPaymentStatus'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - payment_id
      - status
      - request_id
    PaymentInitiationPaymentListRequest:
      type: object
      description: PaymentInitiationPaymentListRequest defines the request schema for `/payment_initiation/payment/list`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        count:
          type: integer
          minimum: 1
          maximum: 200
          default: 10
          description: The maximum number of payments to return. If `count` is not specified, a maximum of 10 payments will be returned, beginning with the most recent payment before the cursor (if specified).
          nullable: true
        cursor:
          type: string
          description: A string in RFC 3339 format (i.e. "2019-12-06T22:35:49Z"). Only payments created before the cursor will be returned.
          format: date-time
          nullable: true
        consent_id:
          type: string
          description: The consent ID. If specified, only payments, executed using this consent, will be returned.
          nullable: true
    PaymentInitiationPaymentListResponse:
      type: object
      additionalProperties: true
      description: PaymentInitiationPaymentListResponse defines the response schema for `/payment_initiation/payment/list`
      properties:
        payments:
          type: array
          description: An array of payments that have been created, associated with the given `client_id`.
          items:
            $ref: '#/components/schemas/PaymentInitiationPayment'
        next_cursor:
          nullable: true
          format: date-time
          type: string
          description: The value that, when used as the optional `cursor` parameter to `/payment_initiation/payment/list`, will return the next unreturned payment as its first payment.
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - payments
      - next_cursor
      - request_id
    InvestmentsHoldingsGetRequest:
      type: object
      description: InvestmentsHoldingsGetRequest defines the request schema for `/investments/holdings/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        access_token:
          $ref: '#/components/schemas/AccessToken'
        options:
          $ref: '#/components/schemas/InvestmentHoldingsGetRequestOptions'
      required:
      - access_token
    InvestmentHoldingsGetRequestOptions:
      type: object
      description: An optional object to filter `/investments/holdings/get` results. If provided, must not be `null`.
      properties:
        account_ids:
          type: array
          description: An array of `account_id`s to retrieve for the Item. An error will be returned if a provided `account_id` is not associated with the Item.
          items:
            type: string
    InvestmentsHoldingsGetResponse:
      type: object
      additionalProperties: true
      description: InvestmentsHoldingsGetResponse defines the response schema for `/investments/holdings/get`
      properties:
        accounts:
          type: array
          description: The accounts associated with the Item
          items:
            $ref: '#/components/schemas/AccountBase'
        holdings:
          type: array
          description: 'The holdings belonging to investment accounts associated with the Item. Details of the securities in the holdings are provided in the `securities` field. '
          items:
            $ref: '#/components/schemas/Holding'
        securities:
          description: 'Objects describing the securities held in the accounts associated with the Item. '
          type: array
          items:
            $ref: '#/components/schemas/Security'
        item:
          $ref: '#/components/schemas/Item'
        request_id:
          $ref: '#/components/schemas/RequestID'
        is_investments_fallback_item:
          type: boolean
          description: When true, this field indicates that the Item's portfolio was manually created with the Investments Fallback flow.
      required:
      - accounts
      - holdings
      - securities
      - item
      - request_id
    InvestmentsAuthGetRequest:
      type: object
      x-hidden-from-docs: true
      description: InvestmentsAuthGetRequest defines the request schema for `/investments/auth/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        access_token:
          $ref: '#/components/schemas/AccessToken'
        options:
          $ref: '#/components/schemas/InvestmentsAuthGetRequestOptions'
      required:
      - access_token
    InvestmentsAuthGetRequestOptions:
      type: object
      x-hidden-from-docs: true
      description: An optional object to filter `/investments/auth/get` results.
      properties:
        account_ids:
          type: array
          description: An array of `account_id`s to retrieve for the Item. An error will be returned if a provided `account_id` is not associated with the Item.
          items:
            type: string
    InvestmentsAuthGetResponse:
      type: object
      additionalProperties: true
      x-hidden-from-docs: true
      description: InvestmentsAuthGetResponse defines the response schema for `/investments/auth/get`
      properties:
        accounts:
          type: array
          description: The accounts for which data is being retrieved
          items:
            $ref: '#/components/schemas/AccountBase'
        holdings:
          type: array
          description: 'The holdings belonging to investment accounts associated with the Item. Details of the securities in the holdings are provided in the `securities` field. '
          items:
            $ref: '#/components/schemas/Holding'
        securities:
          description: 'Objects describing the securities held in the accounts associated with the Item. '
          type: array
          items:
            $ref: '#/components/schemas/Security'
        owners:
          description: 'Information about the account owners for the accounts associated with the Item. '
          type: array
          items:
            $ref: '#/components/schemas/InvestmentsAuthOwner'
        numbers:
          $ref: '#/components/schemas/InvestmentsAuthGetNumbers'
        item:
          $ref: '#/components/schemas/Item'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - accounts
      - holdings
      - securities
      - item
      - numbers
      - owners
      - request_id
    InvestmentsTransactionsGetRequest:
      type: object
      description: InvestmentsTransactionsGetRequest defines the request schema for `/investments/transactions/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        access_token:
          $ref: '#/components/schemas/AccessToken'
        start_date:
          type: string
          format: date
          description: The earliest date for which to fetch transaction history. Dates should be formatted as YYYY-MM-DD.
        end_date:
          type: string
          format: date
          description: The most recent date for which to fetch transaction history. Dates should be formatted as YYYY-MM-DD.
        options:
          $ref: '#/components/schemas/InvestmentsTransactionsGetRequestOptions'
      required:
      - access_token
      - start_date
      - end_date
    InvestmentsTransactionsGetRequestOptions:
      description: An optional object to filter `/investments/transactions/get` results. If provided, must be non-`null`.
      type: object
      properties:
        account_ids:
          type: array
          description: An array of `account_ids` to retrieve for the Item.
          items:
            type: string
        count:
          type: integer
          default: 100
          minimum: 1
          maximum: 500
          description: |
            The number of transactions to fetch.
        offset:
          type: integer
          description: The number of transactions to skip when fetching transaction history
          default: 0
          minimum: 0
        async_update:
          type: boolean
          description: If the Item was not initialized with the investments product via the `products` array when calling `/link/token/create`, and `async_update` is set to true, the initial Investments extraction will happen asynchronously. Plaid will subsequently fire a `HISTORICAL_UPDATE` webhook when the extraction completes. When `false`, Plaid will wait to return a response until extraction completion and no `HISTORICAL_UPDATE` webhook will fire. Note that while the extraction is happening asynchronously, calls to `/investments/transactions/get` and `/investments/refresh` will return `PRODUCT_NOT_READY` errors until the extraction completes.
          default: false
    InvestmentsTransactionsGetResponse:
      type: object
      additionalProperties: true
      description: InvestmentsTransactionsGetResponse defines the response schema for `/investments/transactions/get`
      properties:
        item:
          $ref: '#/components/schemas/Item'
        accounts:
          type: array
          description: The accounts for which transaction history is being fetched.
          items:
            $ref: '#/components/schemas/AccountBase'
        securities:
          type: array
          description: All securities for which there is a corresponding transaction being fetched.
          items:
            $ref: '#/components/schemas/Security'
        investment_transactions:
          type: array
          description: The transactions being fetched
          items:
            $ref: '#/components/schemas/InvestmentTransaction'
        total_investment_transactions:
          type: integer
          description: The total number of transactions available within the date range specified. If `total_investment_transactions` is larger than the size of the `transactions` array, more transactions are available and can be fetched via manipulating the `offset` parameter.
        request_id:
          $ref: '#/components/schemas/RequestID'
        is_investments_fallback_item:
          type: boolean
          description: When true, this field indicates that the Item's portfolio was manually created with the Investments Fallback flow.
      required:
      - item
      - accounts
      - securities
      - investment_transactions
      - total_investment_transactions
      - request_id
    InvestmentsRefreshRequest:
      x-hidden-from-docs: true
      type: object
      description: InvestmentsRefreshRequest defines the request schema for `/investments/refresh`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        access_token:
          $ref: '#/components/schemas/AccessToken'
        secret:
          $ref: '#/components/schemas/APISecret'
      required:
      - access_token
    InvestmentsRefreshResponse:
      x-hidden-from-docs: true
      type: object
      additionalProperties: true
      description: InvestmentsRefreshResponse defines the response schema for `/investments/refresh`
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - request_id
    ProcessorTokenCreateRequest:
      type: object
      description: ProcessorTokenCreateRequest defines the request schema for `/processor/token/create`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        access_token:
          $ref: '#/components/schemas/AccessToken'
        account_id:
          type: string
          description: The `account_id` value obtained from the `onSuccess` callback in Link
        processor:
          type: string
          enum:
          - dwolla
          - galileo
          - modern_treasury
          - ocrolus
          - prime_trust
          - vesta
          - drivewealth
          - vopay
          - achq
          - check
          - checkbook
          - circle
          - sila_money
          - rize
          - svb_api
          - unit
          - wyre
          - lithic
          - alpaca
          - astra
          - moov
          - treasury_prime
          - marqeta
          - checkout
          - solid
          - highnote
          - gemini
          - apex_clearing
          - gusto
          - adyen
          - atomic
          - i2c
          - wepay
          - riskified
          - utb
          - adp_roll
          - fortress_trust
          - bond
          - bakkt
          - teal
          - zero_hash
          - taba_pay
          - knot
          - sardine
          - alloy
          description: The processor you are integrating with.
      required:
      - access_token
      - account_id
      - processor
    ProcessorTokenCreateResponse:
      type: object
      additionalProperties: true
      description: ProcessorTokenCreateResponse defines the response schema for `/processor/token/create` and `/processor/apex/processor_token/create`
      properties:
        processor_token:
          type: string
          description: The `processor_token` that can then be used by the Plaid partner to make API requests
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - processor_token
      - request_id
    ProcessorTokenPermissionsSetRequest:
      type: object
      description: ProcessorTokenPermissionsSetRequest defines the request schema for `/processor/token/permissions/set`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        processor_token:
          $ref: '#/components/schemas/ProcessorToken'
        products:
          type: array
          description: A list of products the processor token should have access to. An empty list will grant access to all products.
          items:
            $ref: '#/components/schemas/Products'
      required:
      - processor_token
      - products
    ProcessorTokenPermissionsSetResponse:
      type: object
      additionalProperties: true
      description: ProcessorTokenPermissionsSetResponse defines the response schema for `/processor/token/permissions/set`
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - request_id
    ProcessorTokenPermissionsGetRequest:
      type: object
      description: ProcessorTokenPermissionsGetRequest defines the request schema for `/processor/token/permissions/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        processor_token:
          $ref: '#/components/schemas/ProcessorToken'
      required:
      - processor_token
    ProcessorTokenPermissionsGetResponse:
      type: object
      additionalProperties: true
      description: ProcessorTokenPermissionsGetResponse defines the response schema for `/processor/token/permissions/get`
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
        products:
          type: array
          description: A list of products the processor token should have access to. An empty list means that the processor has access to all available products, including future products.
          items:
            $ref: '#/components/schemas/Products'
      required:
      - request_id
      - products
    ProcessorTokenWebhookUpdateRequest:
      type: object
      description: ProcessorTokenWebhookUpdateRequest defines the request schema for `/processor/token/webhook/update`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        processor_token:
          $ref: '#/components/schemas/ProcessorToken'
        webhook:
          type: string
          description: The new webhook URL to associate with the processor token. To remove a webhook from a processor token, set to `null`.
          nullable: true
      required:
      - processor_token
      - webhook
    ProcessorTokenWebhookUpdateResponse:
      type: object
      additionalProperties: true
      description: ProcessorTokenWebhookUpdateResponse defines the response schema for `/processor/token/webhook/update`
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - request_id
    ProcessorStripeBankAccountTokenCreateRequest:
      type: object
      description: ProcessorStripeBankAccountTokenCreateRequest defines the request schema for `/processor/stripe/bank_account/create`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        access_token:
          $ref: '#/components/schemas/AccessToken'
        account_id:
          type: string
          description: The `account_id` value obtained from the `onSuccess` callback in Link
      required:
      - access_token
      - account_id
    ProcessorStripeBankAccountTokenCreateResponse:
      type: object
      additionalProperties: true
      description: ProcessorStripeBankAccountTokenCreateResponse defines the response schema for `/processor/stripe/bank_account/create`
      properties:
        stripe_bank_account_token:
          type: string
          description: A token that can be sent to Stripe for use in making API calls to Plaid
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - stripe_bank_account_token
      - request_id
    ProcessorApexProcessorTokenCreateRequest:
      type: object
      description: ProcessorApexProcessorTokenCreateRequest defines the request schema for `/processor/apex/processor_token/create`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        access_token:
          $ref: '#/components/schemas/AccessToken'
        account_id:
          type: string
          description: The `account_id` value obtained from the `onSuccess` callback in Link
      required:
      - access_token
      - account_id
    DepositSwitchCreateRequest:
      type: object
      description: DepositSwitchCreateRequest defines the request schema for `/deposit_switch/create`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        target_access_token:
          type: string
          description: 'Access token for the target Item, typically provided in the Import Item response. '
        target_account_id:
          type: string
          description: Plaid Account ID that specifies the target bank account. This account will become the recipient for a user's direct deposit.
        country_code:
          type: string
          title: CountryCode
          enum:
          - US
          - CA
          description: ISO-3166-1 alpha-2 country code standard.
          nullable: true
        options:
          $ref: '#/components/schemas/DepositSwitchCreateRequestOptions'
      required:
      - target_access_token
      - target_account_id
    DepositSwitchCreateRequestOptions:
      type: object
      title: DepositSwitchCreateRequestOptions
      description: Options to configure the `/deposit_switch/create` request. If provided, cannot be `null`.
      x-private-visibility: false
      properties:
        webhook:
          type: string
          description: |
            The URL registered to receive webhooks when the status of a deposit switch request has changed.
          nullable: true
        transaction_item_access_tokens:
          type: array
          description: An array of access tokens corresponding to transaction items to use when attempting to match the user to their Payroll Provider. These tokens must be created by the same client id as the one creating the switch, and have access to the transactions product.
          items:
            $ref: '#/components/schemas/AccessToken'
          minItems: 1
          maxItems: 99
    DepositSwitchCreateResponse:
      type: object
      additionalProperties: true
      description: DepositSwitchCreateResponse defines the response schema for `/deposit_switch/create`
      properties:
        deposit_switch_id:
          type: string
          description: ID of the deposit switch. This ID is persisted throughout the lifetime of the deposit switch.
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - deposit_switch_id
      - request_id
    DepositSwitchTokenCreateRequest:
      type: object
      description: DepositSwitchTokenCreateRequest defines the request schema for `/deposit_switch/token/create`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        deposit_switch_id:
          type: string
          description: The ID of the deposit switch
      required:
      - deposit_switch_id
    DepositSwitchTokenCreateResponse:
      type: object
      additionalProperties: true
      description: DepositSwitchTokenCreateResponse defines the response schema for `/deposit_switch/token/create`
      properties:
        deposit_switch_token:
          type: string
          description: Deposit switch token, used to initialize Link for the Deposit Switch product
        deposit_switch_token_expiration_time:
          type: string
          description: Expiration time of the token, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - deposit_switch_token
      - deposit_switch_token_expiration_time
      - request_id
    LinkTokenGetRequest:
      type: object
      description: LinkTokenGetRequest defines the request schema for `/link/token/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        link_token:
          type: string
          description: A `link_token` from a previous invocation of `/link/token/create`
      required:
      - link_token
    LinkTokenCreateRequest:
      type: object
      description: LinkTokenCreateRequest defines the request schema for `/link/token/create`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        client_name:
          type: string
          description: The name of your application, as it should be displayed in Link. Maximum length of 30 characters. If a value longer than 30 characters is provided, Link will display "This Application" instead.
          minLength: 1
        language:
          type: string
          description: |-
            The language that Link should be displayed in. When initializing with Identity Verification, this field is not used; for more details, see [Identity Verification supported languages](https://www.plaid.com/docs/identity-verification/#supported-languages).

            Supported languages are:
            - Danish (`'da'`)
            - Dutch (`'nl'`)
            - English (`'en'`)
            - Estonian (`'et'`)
            - French (`'fr'`)
            - German (`'de'`)
            - Italian (`'it'`)
            - Latvian (`'lv'`)
            - Lithuanian (`'lt'`)
            - Norwegian (`'no'`)
            - Polish (`'pl'`)
            - Portuguese (`'pt'`)
            - Romanian (`'ro'`)
            - Spanish (`'es'`)
            - Swedish (`'sv'`)

            When using a Link customization, the language configured here must match the setting in the customization, or the customization will not be applied.
          minLength: 1
        country_codes:
          type: array
          description: |-
            Specify an array of Plaid-supported country codes using the ISO-3166-1 alpha-2 country code standard. Institutions from all listed countries will be shown. For a complete mapping of supported products by country, see https://plaid.com/global/.

            If using Identity Verification, `country_codes` should be set to the country where your company is based, not the country where your user is located. For all other products, `country_codes` represents the location of your user's financial institution.

            If Link is launched with multiple country codes, only products that you are enabled for in all countries will be used by Link. Note that while all countries are enabled by default in Sandbox and Development, in Production only US and Canada are enabled by default. Access to European institutions requires additional compliance steps. To request access to European institutions in the Production environment, [file a product access Support ticket](https://dashboard.plaid.com/support/new/product-and-development/product-troubleshooting/request-product-access) via the Plaid dashboard. If you initialize with a European country code, your users will see the European consent panel during the Link flow.

            If using a Link customization, make sure the country codes in the customization match those specified in `country_codes`, or the customization may not be applied.

            If using the Auth features Instant Match, Same-day Micro-deposits, or Automated Micro-deposits, `country_codes` must be set to `['US']`.
          items:
            $ref: '#/components/schemas/CountryCode'
          minItems: 1
        user:
          $ref: '#/components/schemas/LinkTokenCreateRequestUser'
        products:
          type: array
          description: |-
            List of Plaid product(s) you wish to use. If launching Link in update mode, should be omitted (unless you are using update mode to add Income or Assets to an Item); required otherwise.

            `balance` is *not* a valid value, the Balance product does not require explicit initialization and will automatically be initialized when any other product is initialized.

            The products specified here will determine which institutions will be available to your users in Link. Only institutions that support *all* requested products can be selected; a if a user attempts to select an institution that does not support a listed product, a "Connectivity not supported" error message will appear in Link. To maximize the number of institutions available, initialize Link with the minimal product set required for your use case. Additional products can be included via the [`optional_products`](https://plaid.com/docs/api/tokens/#link-token-create-request-optional-products) or  [`required_if_supported_products`](https://plaid.com/docs/api/tokens/#link-token-create-request-required-if-supported-products) fields, or can be initialized by calling the endpoint after obtaining an access token. For details and exceptions, see [Choosing when to initialize products](https://plaid.com/docs/link/initializing-products/).

            Note that, unless you have opted to disable Instant Match support, institutions that support Instant Match will also be shown in Link if `auth` is specified as a product, even though these institutions do not contain `auth` in their product array.

            In Production, you will be billed for each product that you specify when initializing Link. Note that a product cannot be removed from an Item once the Item has been initialized with that product. To stop billing on an Item for subscription-based products, such as Liabilities, Investments, and Transactions, remove the Item via `/item/remove`.
          items:
            $ref: '#/components/schemas/Products'
          x-override-enum-values-shown:
          - assets
          - auth
          - employment
          - identity
          - income_verification
          - identity_verification
          - investments
          - liabilities
          - payment_initiation
          - standing_orders
          - transactions
          - transfer
          - signal
          nullable: true
        required_if_supported_products:
          type: array
          description: |-
            List of Plaid product(s) you wish to use only if the institution and account(s) selected by the user support the product. Institutions that do not support these products will still be shown in Link. The products will only be extracted and billed if the user selects an institution and account type that supports them.

            There should be no overlap between this array and the `products`, `optional_products`, or `additional_consented_products` arrays. The `products` array must have at least one product.

            For more details on using this feature, see [Required if Supported Products](https://www.plaid.com/docs/link/initializing-products/#required-if-supported-products).
          items:
            $ref: '#/components/schemas/Products'
          x-override-enum-values-shown:
          - auth
          - identity
          - investments
          - liabilities
          - transactions
          - statements
          nullable: true
        optional_products:
          type: array
          description: |-
            List of Plaid product(s) that you may wish to use but that are not required for your use case. Plaid will attempt to fetch data for these products on a best-effort basis, and failure to support these products will not affect Item creation.

            There should be no overlap between this array and the `products`, `required_if_supported_products`, or `additional_consented_products` arrays. The `products` array must have at least one product.

            For more details on using this feature, see [Optional Products](https://www.plaid.com/docs/link/initializing-products/#optional-products).
          items:
            $ref: '#/components/schemas/Products'
          x-override-enum-values-shown:
          - auth
          - identity
          - investments
          - liabilities
          - statements
          - transactions
          nullable: true
        additional_consented_products:
          type: array
          description: |-
            (Beta) This field has no effect unless you are participating in the [Data Transparency](https://plaid.com/docs/link/data-transparency-messaging-migration-guide) beta program.
            List of additional Plaid product(s) you wish to collect consent for. These products will not be billed until you start using them by calling the relevant endpoints.

            `balance` is *not* a valid value, the Balance product does not require explicit initialization and will automatically have consent collected.

            Institutions that do not support these products will still be shown in Link.

            There should be no overlap between this array and the `products` or `required_if_supported_products` arrays.
          items:
            $ref: '#/components/schemas/Products'
          x-override-enum-values-shown:
          - assets
          - auth
          - identity
          - investments
          - liabilities
          - transactions
          - signal
          nullable: true
        webhook:
          type: string
          description: The destination URL to which any webhooks should be sent. Note that webhooks for Payment Initiation (e-wallet transactions only), Transfer, Bank Transfer (including Auth micro-deposit notification webhooks) and Identity Verification are configured via the Dashboard instead.
        access_token:
          type: string
          description: The `access_token` associated with the Item to update or reference, used when updating, modifying, or accessing an existing `access_token`. Used when launching Link in update mode, when completing the Same-day (manual) Micro-deposit flow, or (optionally) when initializing Link for a returning user as part of the Transfer UI flow.
          minLength: 1
          nullable: true
        access_tokens:
          x-hidden-from-docs: true
          type: array
          description: A list of access tokens associated with the items to update in Link update mode for the Assets product. Using this instead of the `access_token` field allows the updating of multiple items at once. This feature is in closed beta, please contact your account manager for more info.
          items:
            type: string
        link_customization_name:
          type: string
          description: The name of the Link customization from the Plaid Dashboard to be applied to Link. If not specified, the `default` customization will be used. When using a Link customization, the language in the customization must match the language selected via the `language` parameter, and the countries in the customization should match the country codes selected via `country_codes`.
        redirect_uri:
          type: string
          description: A URI indicating the destination where a user should be forwarded after completing the Link flow; used to support OAuth authentication flows when launching Link in the browser or via a webview. The `redirect_uri` should not contain any query parameters. When used in Production or Development, must be an https URI. To specify any subdomain, use `*` as a wildcard character, e.g. `https://*.example.com/oauth.html`. Note that any redirect URI must also be added to the Allowed redirect URIs list in the [developer dashboard](https://dashboard.plaid.com/team/api). If initializing on Android, `android_package_name` must be specified instead and `redirect_uri` should be left blank. If using Hosted Link (beta) the `redirect_uri` must be set to `https://hosted.plaid.com/oauth/redirect`.
        android_package_name:
          type: string
          description: The name of your app's Android package. Required if using the `link_token` to initialize Link on Android. Any package name specified here must also be added to the Allowed Android package names setting on the [developer dashboard](https://dashboard.plaid.com/team/api). When creating a `link_token` for initializing Link on other platforms, `android_package_name` must be left blank and `redirect_uri` should be used instead.
        institution_data:
          $ref: '#/components/schemas/LinkTokenCreateInstitutionData'
        card_switch:
          $ref: '#/components/schemas/LinkTokenCreateCardSwitch'
        account_filters:
          $ref: '#/components/schemas/LinkTokenAccountFilters'
        eu_config:
          $ref: '#/components/schemas/LinkTokenEUConfig'
        institution_id:
          type: string
          description: Used for certain Europe-only configurations, as well as certain legacy use cases in other regions.
        payment_initiation:
          $ref: '#/components/schemas/LinkTokenCreateRequestPaymentInitiation'
        deposit_switch:
          $ref: '#/components/schemas/LinkTokenCreateRequestDepositSwitch'
        employment:
          $ref: '#/components/schemas/LinkTokenCreateRequestEmployment'
        income_verification:
          $ref: '#/components/schemas/LinkTokenCreateRequestIncomeVerification'
        base_report:
          $ref: '#/components/schemas/LinkTokenCreateRequestBaseReport'
        consumer_report_permissible_purpose:
          $ref: '#/components/schemas/ConsumerReportPermissiblePurpose'
        auth:
          $ref: '#/components/schemas/LinkTokenCreateRequestAuth'
        transfer:
          $ref: '#/components/schemas/LinkTokenCreateRequestTransfer'
        update:
          $ref: '#/components/schemas/LinkTokenCreateRequestUpdate'
        identity_verification:
          $ref: '#/components/schemas/LinkTokenCreateRequestIdentityVerification'
        statements:
          $ref: '#/components/schemas/LinkTokenCreateRequestStatements'
        user_token:
          type: string
          description: A user token generated using `/user/create`. Any Item created during the Link session will be associated with the user.
        investments:
          $ref: '#/components/schemas/LinkTokenInvestments'
        investments_auth:
          $ref: '#/components/schemas/LinkTokenInvestmentsAuth'
        hosted_link:
          $ref: '#/components/schemas/LinkTokenCreateHostedLink'
        transactions:
          $ref: '#/components/schemas/LinkTokenTransactions'
        cra_enabled:
          x-hidden-from-docs: true
          type: boolean
          description: If `true`, request a CRA connection. Defaults to `false`.
      required:
      - client_name
      - language
      - country_codes
      - user
    LinkTokenAccountFilters:
      description: |
        By default, Link will provide limited account filtering: it will only display Institutions that are compatible with all products supplied in the `products` parameter of `/link/token/create`, and, if `auth` is specified in the `products` array, will also filter out accounts other than `checking` and `savings` accounts on the Account Select pane. You can further limit the accounts shown in Link by using `account_filters` to specify the account subtypes to be shown in Link. Only the specified subtypes will be shown. This filtering applies to both the Account Select view (if enabled) and the Institution Select view. Institutions that do not support the selected subtypes will be omitted from Link. To indicate that all subtypes should be shown, use the value `"all"`. If the `account_filters` filter is used, any account type for which a filter is not specified will be entirely omitted from Link. For a full list of valid types and subtypes, see the [Account schema](https://plaid.com/docs/api/accounts#account-type-schema).

        The filter may or may not impact the list of accounts shown by the institution in the OAuth account selection flow, depending on the specific institution. If the user selects excluded account subtypes in the OAuth flow, these accounts will not be added to the Item. If the user selects only excluded account subtypes, the link attempt will fail and the user will be prompted to try again.
      type: object
      additionalProperties: true
      properties:
        depository:
          $ref: '#/components/schemas/DepositoryFilter'
        credit:
          $ref: '#/components/schemas/CreditFilter'
        loan:
          $ref: '#/components/schemas/LoanFilter'
        investment:
          $ref: '#/components/schemas/InvestmentFilter'
        other:
          $ref: '#/components/schemas/OtherFilter'
    LinkTokenEUConfig:
      description: Configuration parameters for EU flows
      type: object
      properties:
        headless:
          type: boolean
          description: If `true`, open Link without an initial UI. Defaults to `false`.
    LinkTokenInvestments:
      description: Configuration parameters for the Investments product
      type: object
      properties:
        allow_unverified_crypto_wallets:
          type: boolean
          description: If `true`, allow self-custody crypto wallets to be added without requiring signature verification. Defaults to `false`.
        allow_manual_entry:
          type: boolean
          description: If `true`, allow users to manually enter Investments account and holdings information. Defaults to `false`.
    LinkTokenInvestmentsAuth:
      x-hidden-from-docs: true
      description: Configuration parameters for the Investments Auth Product
      type: object
      properties:
        manual_entry_enabled:
          nullable: true
          default: false
          type: boolean
          description: If `true`, show institutions that use the manual entry fallback flow.
        masked_number_match_enabled:
          nullable: true
          default: false
          type: boolean
          description: If `true`, show institutions that use the masked number match fallback flow.
    LinkTokenTransactions:
      description: Configuration parameters for the Transactions product
      type: object
      properties:
        days_requested:
          description: |-
            The maximum number of days of transaction history to request for the Transactions product. For developer accounts created after December 3, 2023, if no value is specified, this will default to 90 days. For developer accounts created on December 3, 2023 or earlier, if no value is specified, this will default to 730 days until June 24, 2024, at which point it will default to 90 days.

            We strongly recommend that customers utilizing [Recurring Transactions](https://plaid.com/docs/api/products/transactions/#transactionsrecurringget) request at least 180 days of history for optimal results.
          type: integer
          minimum: 1
          maximum: 730
          default: 90
    LinkTokenCreateHostedLink:
      description: Configuration parameters for Hosted Link (beta). Only available for participants in the Hosted Link beta program.
      additionalProperties: true
      type: object
      properties:
        delivery_method:
          $ref: '#/components/schemas/HostedLinkDeliveryMethod'
        completion_redirect_uri:
          $ref: '#/components/schemas/HostedLinkCompletionRedirectURI'
        url_lifetime_seconds:
          $ref: '#/components/schemas/HostedLinkURLLifetimeSeconds'
    HostedLinkDeliveryMethod:
      type: string
      description: |
        How Plaid should deliver the Plaid Link session to the customer.
        'sms' will deliver via SMS. Must pass `user.phone_number`.
        'email' will deliver via email. Must pass `user.email_address`. In the Sandbox environment, this field will be ignored; use the Production or Development environment to test Hosted Link session delivery instead.
      enum:
      - sms
      - email
    HostedLinkCompletionRedirectURI:
      x-hidden-from-docs: true
      type: string
      description: |
        URI that Hosted Link will redirect to upon completion of the Link flow. This will only occur in Hosted Link sessions, not in other implementation methods.
    HostedLinkURLLifetimeSeconds:
      type: integer
      description: |
        How many seconds the link will be valid for. Must be positive. Cannot be longer than 21 days. The default lifetime is 4 hours.
    LinkTokenCreateRequestPaymentInitiation:
      type: object
      description: Specifies options for initializing Link for use with the Payment Initiation (Europe) product. This field is required if `payment_initiation` is included in the `products` array. Either `payment_id` or `consent_id` must be provided.
      properties:
        payment_id:
          type: string
          description: The `payment_id` provided by the `/payment_initiation/payment/create` endpoint.
        consent_id:
          type: string
          description: The `consent_id` provided by the `/payment_initiation/consent/create` endpoint.
    LinkTokenCreateRequestDepositSwitch:
      type: object
      x-hidden-from-docs: true
      description: Specifies options for initializing Link for use with the Deposit Switch (beta) product. This field is required if `deposit_switch` is included in the `products` array.
      properties:
        deposit_switch_id:
          type: string
          description: The `deposit_switch_id` provided by the `/deposit_switch/create` endpoint.
      required:
      - deposit_switch_id
    LinkTokenCreateRequestTransfer:
      type: object
      description: Specifies options for initializing Link for use with the Transfer product.
      properties:
        intent_id:
          type: string
          description: The `id` returned by the `/transfer/intent/create` endpoint.
        payment_profile_token:
          x-hidden-from-docs: true
          type: string
          description: The `payment_profile_token` returned by the `/payment_profile/create` endpoint.
    LinkTokenCreateRequestUserStatedIncomeSource:
      type: object
      description: Specifies user stated income sources for the Income product
      properties:
        employer:
          type: string
          description: The employer corresponding to an income source specified by the user
        category:
          $ref: '#/components/schemas/UserStatedIncomeSourceCategory'
        pay_per_cycle:
          type: number
          format: double
          description: The income amount paid per cycle for a specified income source
        pay_annual:
          type: number
          format: double
          description: The income amount paid annually for a specified income source
        pay_type:
          $ref: '#/components/schemas/UserStatedIncomeSourcePayType'
        pay_frequency:
          $ref: '#/components/schemas/UserStatedIncomeSourceFrequency'
    LinkTokenCreateRequestStatements:
      type: object
      description: Specifies options for initializing Link for use with the Statements product.
      properties:
        start_date:
          type: string
          format: date
          description: The start date for statements, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) “YYYY-MM-DD” format, e.g. "2020-10-30". If no value is provided, this will default to 3 months prior to the current date.
        end_date:
          type: string
          format: date
          description: The end date for statements, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) “YYYY-MM-DD” format, e.g. "2020-10-30". If no value is provided, this will default to the current date. You can request up to two years of data.
    UserStatedIncomeSourceCategory:
      type: string
      description: The income category for a specified income source
      enum:
      - OTHER
      - SALARY
      - UNEMPLOYMENT
      - CASH
      - GIG_ECONOMY
      - RENTAL
      - CHILD_SUPPORT
      - MILITARY
      - RETIREMENT
      - LONG_TERM_DISABILITY
      - BANK_INTEREST
    UserStatedIncomeSourceFrequency:
      type: string
      description: The pay frequency of a specified income source
      enum:
      - UNKNOWN
      - WEEKLY
      - BIWEEKLY
      - SEMI_MONTHLY
      - MONTHLY
    UserStatedIncomeSourcePayType:
      type: string
      description: The pay type - `GROSS`, `NET`, or `UNKNOWN` for a specified income source
      enum:
      - UNKNOWN
      - GROSS
      - NET
    LinkTokenCreateRequestAuth:
      type: object
      description: Specifies options for initializing Link for use with the Auth product. This field can be used to enable or disable extended Auth flows for the resulting Link session. Omitting any field will result in a default that can be configured by your account manager.
      properties:
        auth_type_select_enabled:
          type: boolean
          description: Specifies whether Auth Type Select is enabled for the Link session, allowing the end user to choose between linking instantly or manually prior to selecting their financial institution. Note that this can only be true if `same_day_microdeposits_enabled` is set to true.
          default: false
        automated_microdeposits_enabled:
          type: boolean
          description: Specifies whether the Link session is enabled for the Automated Micro-deposits flow.
        instant_match_enabled:
          type: boolean
          description: Specifies whether the Link session is enabled for the Instant Match flow. As of November 2022, Instant Match will be enabled by default. Instant Match can be disabled by setting this field to `false`.
        same_day_microdeposits_enabled:
          type: boolean
          description: Specifies whether the Link session is enabled for the Same Day Micro-deposits flow.
        instant_microdeposits_enabled:
          type: boolean
          description: Specifies whether the Link session is enabled for the Instant Micro-deposits flow.
        reroute_to_credentials:
          type: string
          enum:
          - "OFF"
          - OPTIONAL
          - FORCED
          description: Specifies what type of [Reroute to Credentials](https://plaid.com/docs/auth/coverage/same-day/#reroute-to-credentials) pane should be used in the Link session for the Same Day Micro-deposits flow. As of October 15 2023, the default setting is `OPTIONAL`.
        database_match_enabled:
          type: boolean
          description: Specifies whether the Link session is enabled for the Database Match flow.
          x-hidden-from-docs: true
        flow_type:
          type: string
          enum:
          - FLEXIBLE_AUTH
          description: This field has been deprecated in favor of `auth_type_select_enabled`.
          deprecated: true
    LinkTokenCreateRequestIdentityVerification:
      type: object
      description: Specifies option for initializing Link for use with the Identity Verification product.
      properties:
        template_id:
          allOf:
          - $ref: '#/components/schemas/IdentityVerificationTemplateID'
        consent:
          x-hidden-from-docs: true
          allOf:
          - $ref: '#/components/schemas/IdentityVerificationConsent'
        gave_consent:
          $ref: '#/components/schemas/IdentityVerificationConsent'
      required:
      - template_id
    LinkTokenCreateInstitutionData:
      type: object
      description: A map containing data used to highlight institutions in Link.
      properties:
        routing_number:
          type: string
          description: 'The routing number of the bank to highlight in Link. Note: in rare cases, a single routing number can be associated with multiple institutions, e.g. due to a brokerage using another institution to manage ACH on its sweep accounts. If this happens, the bank will not be highlighted in Link even if the routing number is provided.'
    LinkTokenCreateCardSwitch:
      type: object
      description: A map containing data to pass in for the Card Switch flow.
      x-hidden-from-docs: true
      properties:
        card_bin:
          type: string
          description: The BIN (Bank Identification Number) of the card to switch.
      required:
      - card_bin
    LinkTokenCreateRequestUser:
      type: object
      description: An object specifying information about the end user who will be linking their account.
      properties:
        client_user_id:
          type: string
          description: A unique ID representing the end user. Typically this will be a user ID number from your application. Personally identifiable information, such as an email address or phone number, should not be used in the `client_user_id`. It is currently used as a means of searching logs for the given user in the Plaid Dashboard.
          minLength: 1
        legal_name:
          type: string
          description: The user's full legal name, used for [micro-deposit based verification flows](https://plaid.com/docs/auth/coverage/). For a small number of customers on legacy flows, providing this field is required to enable micro-deposit-based flows. For all other customers, this field is optional. Providing the user's name in this field when using micro-deposit-based verification will streamline the end user experience, as the user will not be prompted to enter their name during the Link flow; Plaid will use the provided legal name instead.
        name:
          allOf:
          - $ref: '#/components/schemas/IdentityVerificationRequestUserName'
          - description: The user's full name. Optional if using the [Identity Verification](https://plaid.com/docs/api/products/identity-verification) product; if not using Identity Verification, this field is not allowed. Users will not be asked for their name when this field is provided.
        phone_number:
          type: string
          description: The user's phone number in [E.164](https://en.wikipedia.org/wiki/E.164) format. This field is optional, but required to enable the [returning user experience](https://plaid.com/docs/link/returning-user). Can also be used to prefill Link fields when used with Identity Verification.
        phone_number_verified_time:
          nullable: true
          format: date-time
          type: string
          deprecated: true
          description: |
            The date and time the phone number was verified in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (`YYYY-MM-DDThh:mm:ssZ`). This was previously an optional field used in the [returning user experience](https://plaid.com/docs/link/returning-user). This field is no longer required to enable the returning user experience.

             Only pass a verification time for a phone number that you have verified. If you have performed verification but don’t have the time, you may supply a signal value of the start of the UNIX epoch.

             Example: `2020-01-01T00:00:00Z`
        email_address:
          type: string
          description: The user's email address. This field is optional, but required to enable the [pre-authenticated returning user flow](https://plaid.com/docs/link/returning-user/#pre-authenticated-rux). Can also be used to prefill Link fields when used with Identity Verification.
        email_address_verified_time:
          nullable: true
          type: string
          format: date-time
          deprecated: true
          description: |-
            The date and time the email address was verified in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (`YYYY-MM-DDThh:mm:ssZ`). This was previously an optional field used in the [returning user experience](https://plaid.com/docs/link/returning-user). This field is no longer required to enable the returning user experience.

             Only pass a verification time for an email address that you have verified. If you have performed verification but don’t have the time, you may supply a signal value of the start of the UNIX epoch.

             Example: `2020-01-01T00:00:00Z`
        ssn:
          type: string
          deprecated: true
          description: Deprecated and not currently used, use the `id_number` field instead.
        date_of_birth:
          type: string
          nullable: true
          format: date
          description: To be provided in the format "yyyy-mm-dd". Can be used to prefill Link fields when used with Identity Verification.
        address:
          allOf:
          - $ref: '#/components/schemas/UserAddress'
          - description: The user's address. Used only for Identity Verification. If provided, the user will not be shown fields to enter their address in the Identity Verification flow. May be omitted, but if not omitted, all fields marked as required must be provided.
        id_number:
          allOf:
          - $ref: '#/components/schemas/UserIDNumber'
          - description: The user's ID number. Used only for Identity Verification. If provided, the user will not be shown fields to enter their ID number in the Identity Verification flow. May be omitted, but if not omitted, all fields marked as required must be provided.
      required:
      - client_user_id
    LinkTokenCreateRequestUpdate:
      type: object
      description: Specifies options for initializing Link for [update mode](https://plaid.com/docs/link/update-mode).
      properties:
        account_selection_enabled:
          type: boolean
          description: If `true`, enables [update mode with Account Select](https://plaid.com/docs/link/update-mode/#using-update-mode-to-request-new-accounts) for institutions that do not use OAuth, or that use OAuth but do not have their own account selection flow. For institutions that have an OAuth account selection flow (i.e. most OAuth-enabled institutions), update mode with Account Select will always be enabled, regardless of the value of this field.
          default: false
    LinkTokenCreateRequestAccountSubtypes:
      description: |
        By default, Link will only display account types that are compatible with all products supplied in the `products` parameter of `/link/token/create`. You can further limit the accounts shown in Link by using `account_filters` to specify the account subtypes to be shown in Link. Only the specified subtypes will be shown. This filtering applies to both the Account Select view (if enabled) and the Institution Select view. Institutions that do not support the selected subtypes will be omitted from Link. To indicate that all subtypes should be shown, use the value `"all"`. If the `account_filters` filter is used, any account type for which a filter is not specified will be entirely omitted from Link.

        For a full list of valid types and subtypes, see the [Account schema](https://plaid.com/docs/api/accounts#account-type-schema).

        For institutions using OAuth, the filter will not affect the list of institutions or accounts shown by the bank in the OAuth window.
      type: object
      properties:
        depository:
          $ref: '#/components/schemas/LinkTokenCreateDepositoryFilter'
        credit:
          $ref: '#/components/schemas/LinkTokenCreateCreditFilter'
        loan:
          $ref: '#/components/schemas/LinkTokenCreateLoanFilter'
        investment:
          $ref: '#/components/schemas/LinkTokenCreateInvestmentFilter'
    LinkTokenCreateDepositoryFilter:
      description: A filter to apply to `depository`-type accounts
      type: object
      properties:
        account_subtypes:
          $ref: '#/components/schemas/DepositoryAccountSubtypes'
    LinkTokenCreateCreditFilter:
      description: A filter to apply to `credit`-type accounts
      type: object
      properties:
        account_subtypes:
          $ref: '#/components/schemas/CreditAccountSubtypes'
    LinkTokenCreateLoanFilter:
      description: A filter to apply to `loan`-type accounts
      type: object
      properties:
        account_subtypes:
          $ref: '#/components/schemas/LoanAccountSubtypes'
    LinkTokenCreateInvestmentFilter:
      description: A filter to apply to `investment`-type accounts (or `brokerage`-type accounts for API versions 2018-05-22 and earlier).
      type: object
      properties:
        account_subtypes:
          $ref: '#/components/schemas/InvestmentAccountSubtypes'
    LinkOAuthCorrelationIdExchangeRequest:
      type: object
      description: LinkOAuthCorrelationIdExchangeRequest defines the request schema for `/link/oauth/correlation_id/exchange`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        link_correlation_id:
          type: string
          description: A `link_correlation_id` from a received OAuth redirect URI callback
      required:
      - link_correlation_id
    LinkOAuthCorrelationIdExchangeResponse:
      type: object
      additionalProperties: true
      description: LinkOAuthCorrelationIdExchangeResponse defines the response schema for `/link/oauth/correlation_id/exchange`
      properties:
        link_token:
          type: string
          description: The `link_token` associated to the given `link_correlation_id`, which can be used to re-initialize Link.
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - link_token
      - request_id
    LinkTokenGetResponse:
      type: object
      additionalProperties: true
      description: LinkTokenGetResponse defines the response schema for `/link/token/get`
      properties:
        link_token:
          type: string
          description: A `link_token`, which can be supplied to Link in order to initialize it and receive a `public_token`, which can be exchanged for an `access_token`.
        created_at:
          type: string
          format: date-time
          nullable: true
          description: The creation timestamp for the `link_token`, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.
        expiration:
          type: string
          format: date-time
          nullable: true
          description: The expiration timestamp for the `link_token`, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.
        link_sessions:
          type: array
          description: Information about Link sessions created using this `link_token`. This field will only be present if your client is enabled for Hosted Link (beta). Session data will be provided for up to six hours after the session has ended.
          items:
            $ref: '#/components/schemas/LinkTokenGetSessionsResponse'
        metadata:
          $ref: '#/components/schemas/LinkTokenGetMetadataResponse'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - link_token
      - created_at
      - expiration
      - metadata
      - request_id
    LinkTokenGetSessionsResponse:
      type: object
      description: An object containing information about a link session. This field will only be present if your client is enabled for Hosted Link (beta). Session data will be provided for up to six hours after the session has ended.
      additionalProperties: true
      properties:
        link_session_id:
          type: string
          description: The unique ID for the link session.
        started_at:
          type: string
          format: date-time
          description: The timestamp at which the link session was first started, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.
        finished_at:
          type: string
          nullable: true
          format: date-time
          description: The timestamp at which the link session was finished, if available, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.
        on_success:
          $ref: '#/components/schemas/LinkSessionSuccess'
        on_exit:
          $ref: '#/components/schemas/LinkSessionExit'
      required:
      - link_session_id
    LinkSessionSuccess:
      type: object
      description: An object representing an [onSuccess](https://plaid.com/docs/link/web/#onsuccess) callback from Link.
      nullable: true
      properties:
        public_token:
          type: string
          description: Displayed once a user has successfully linked their Item.
        metadata:
          $ref: '#/components/schemas/LinkSessionSuccessMetadata'
      required:
      - public_token
      - metadata
    LinkSessionSuccessMetadata:
      type: object
      description: Displayed once a user has successfully linked their Item.
      nullable: true
      properties:
        institution:
          $ref: '#/components/schemas/LinkSessionSuccessMetadataInstitution'
        accounts:
          type: array
          description: A list of accounts attached to the connected Item. If Account Select is enabled via the developer dashboard, `accounts` will only include selected accounts.
          items:
            $ref: '#/components/schemas/LinkSessionSuccessMetadataAccount'
        link_session_id:
          type: string
          description: A unique identifier associated with a user's actions and events through the Link flow. Include this identifier when opening a support ticket for faster turnaround.
        transfer_status:
          $ref: '#/components/schemas/LinkSessionSuccessMetadataTransferStatus'
    LinkSessionSuccessMetadataInstitution:
      type: object
      description: An institution object. If the Item was created via Same-Day micro-deposit verification, will be `null`.
      nullable: true
      properties:
        name:
          type: string
          description: The full institution name, such as `'Wells Fargo'`
        institution_id:
          type: string
          description: The Plaid institution identifier
    LinkSessionSuccessMetadataAccount:
      type: object
      description: An account attached to the connected Item.
      properties:
        id:
          type: string
          description: |
            The Plaid `account_id`
        name:
          type: string
          description: The official account name
        mask:
          type: string
          nullable: true
          description: The last 2-4 alphanumeric characters of an account's official account number. Note that the mask may be non-unique between an Item's accounts. It may also not match the mask that the bank displays to the user.
        type:
          type: string
          description: The account type. See the [Account schema](/docs/api/accounts#account-type-schema) for a full list of possible values
        subtype:
          type: string
          description: The account subtype. See the [Account schema](/docs/api/accounts#account-type-schema) for a full list of possible values
        verification_status:
          nullable: true
          type: string
          description: |
            Indicates an Item's micro-deposit-based verification status. Possible values are:

            `pending_automatic_verification`: The Item is pending automatic verification

            `pending_manual_verification`: The Item is pending manual micro-deposit verification. Items remain in this state until the user successfully verifies the two amounts.

            `automatically_verified`: The Item has successfully been automatically verified

            `manually_verified`: The Item has successfully been manually verified

            `verification_expired`: Plaid was unable to automatically verify the deposit within 7 calendar days and will no longer attempt to validate the Item. Users may retry by submitting their information again through Link.

            `verification_failed`: The Item failed manual micro-deposit verification because the user exhausted all 3 verification attempts. Users may retry by submitting their information again through Link.

            `database_matched`: The Item has successfully been verified using Plaid's data sources. Note: Database Match is currently a beta feature, please contact your account manager for more information.

            `null`: micro-deposit-based verification is not being used for the Item.
        class_type:
          nullable: true
          type: string
          description: If micro-deposit verification is being used, indicates whether the account being verified is a `business` or `personal` account.
    LinkSessionSuccessMetadataTransferStatus:
      type: string
      nullable: true
      description: |-
        The status of a transfer. Returned only when [Transfer UI](/docs/transfer/using-transfer-ui) is implemented.

        - `COMPLETE` – The transfer was completed.
        - `INCOMPLETE` – The transfer could not be completed. For help, see [Troubleshooting transfers](/docs/transfer/using-transfer-ui#troubleshooting-transfers).
      enum:
      - COMPLETE
      - INCOMPLETE
    LinkSessionExit:
      type: object
      description: An object representing an [onExit](https://plaid.com/docs/link/web/#onexit) callback from Link.
      additionalProperties: true
      nullable: true
      properties:
        error:
          $ref: '#/components/schemas/PlaidError'
        metadata:
          $ref: '#/components/schemas/LinkSessionExitMetadata'
      required:
      - error
      - metadata
    LinkSessionExitMetadata:
      type: object
      description: Displayed if a user exits Link without successfully linking an Item.
      nullable: true
      properties:
        institution:
          $ref: '#/components/schemas/LinkSessionExitMetadataInstitution'
        status:
          type: string
          description: The point at which the user exited the Link flow. One of the following values.
          properties:
            requires_questions:
              description: User prompted to answer security questions
            requires_selections:
              description: User prompted to answer multiple choice question(s)
            requires_code:
              description: User prompted to provide a one-time passcode
            choose_device:
              description: User prompted to select a device on which to receive a one-time passcode
            requires_credentials:
              description: User prompted to provide credentials for the selected financial institution or has not yet selected a financial institution
            requires_account_selection:
              description: User prompted to select one or more financial accounts to share
            requires_oauth:
              description: User prompted to enter an OAuth flow
            institution_not_found:
              description: User exited the Link flow after unsuccessfully (no results returned) searching for a financial institution
            institution_not_supported:
              description: User exited the Link flow after discovering their selected institution is no longer supported by Plaid
        link_session_id:
          type: string
          description: A unique identifier associated with a user's actions and events through the Link flow. Include this identifier when opening a support ticket for faster turnaround.
        request_id:
          type: string
          description: The request ID for the last request made by Link. This can be shared with Plaid Support to expedite investigation.
    LinkSessionExitMetadataInstitution:
      type: object
      description: An institution object. If the Item was created via Same-Day micro-deposit verification, will be `null`.
      nullable: true
      properties:
        name:
          type: string
          description: The full institution name, such as `Wells Fargo`
        institution_id:
          type: string
          description: The Plaid institution identifier
    LinkTokenGetMetadataResponse:
      type: object
      additionalProperties: true
      description: An object specifying the arguments originally provided to the `/link/token/create` call.
      properties:
        initial_products:
          type: array
          description: The `products` specified in the `/link/token/create` call.
          items:
            $ref: '#/components/schemas/Products'
          x-override-enum-values-shown:
          - assets
          - auth
          - employment
          - identity
          - income_verification
          - identity_verification
          - investments
          - liabilities
          - payment_initiation
          - standing_orders
          - transactions
          - transfer
        webhook:
          type: string
          description: The `webhook` specified in the `/link/token/create` call.
          nullable: true
        country_codes:
          type: array
          description: The `country_codes` specified in the `/link/token/create` call.
          items:
            $ref: '#/components/schemas/CountryCode'
        language:
          type: string
          nullable: true
          description: The `language` specified in the `/link/token/create` call.
        institution_data:
          $ref: '#/components/schemas/LinkTokenCreateInstitutionData'
        account_filters:
          $ref: '#/components/schemas/AccountFiltersResponse'
        redirect_uri:
          type: string
          description: The `redirect_uri` specified in the `/link/token/create` call.
          nullable: true
        client_name:
          type: string
          nullable: true
          description: The `client_name` specified in the `/link/token/create` call.
      required:
      - initial_products
      - webhook
      - country_codes
      - language
      - redirect_uri
      - client_name
    LinkTokenCreateResponse:
      type: object
      additionalProperties: true
      description: LinkTokenCreateResponse defines the response schema for `/link/token/create`
      properties:
        link_token:
          type: string
          description: A `link_token`, which can be supplied to Link in order to initialize it and receive a `public_token`, which can be exchanged for an `access_token`.
        expiration:
          type: string
          format: date-time
          description: The expiration date for the `link_token`, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format. A `link_token` created to generate a `public_token` that will be exchanged for a new `access_token` expires after 4 hours. A `link_token` created for an existing Item (such as when updating an existing `access_token` by launching Link in update mode) expires after 30 minutes.
        request_id:
          $ref: '#/components/schemas/RequestID'
        hosted_link_url:
          type: string
          description: A URL of a Plaid-hosted Link flow that will use the Link token returned by this request. Only present if the client is enabled for Hosted Link (beta).
      required:
      - link_token
      - expiration
      - request_id
    PlaidError:
      description: We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues. An Item with a non-`null` error object will only be part of an API response when calling `/item/get` to view Item status. Otherwise, error fields will be `null` if no error has occurred; if an error has occurred, an error code will be returned instead.
      type: object
      additionalProperties: true
      title: Error
      nullable: true
      properties:
        error_type:
          $ref: '#/components/schemas/PlaidErrorType'
        error_code:
          description: The particular error code. Safe for programmatic use.
          type: string
        error_message:
          description: A developer-friendly representation of the error code. This may change over time and is not safe for programmatic use.
          type: string
        display_message:
          description: |-
            A user-friendly representation of the error code. `null` if the error is not related to user action.

            This may change over time and is not safe for programmatic use.
          type: string
          nullable: true
        request_id:
          type: string
          description: A unique ID identifying the request, to be used for troubleshooting purposes. This field will be omitted in errors provided by webhooks.
        causes:
          type: array
          description: |-
            In the Assets product, a request can pertain to more than one Item. If an error is returned for such a request, `causes` will return an array of errors containing a breakdown of these errors on the individual Item level, if any can be identified.

            `causes` will only be provided for the `error_type` `ASSET_REPORT_ERROR`. `causes` will also not be populated inside an error nested within a `warning` object.
          items: {}
        status:
          type: integer
          description: The HTTP status code associated with the error. This will only be returned in the response body when the error information is provided via a webhook.
          nullable: true
        documentation_url:
          type: string
          description: The URL of a Plaid documentation page with more information about the error
        suggested_action:
          type: string
          nullable: true
          description: Suggested steps for resolving the error
      required:
      - error_type
      - error_code
      - error_message
      - display_message
    PlaidErrorType:
      title: PlaidErrorType
      type: string
      description: A broad categorization of the error. Safe for programmatic use.
      enum:
      - INVALID_REQUEST
      - INVALID_RESULT
      - INVALID_INPUT
      - INSTITUTION_ERROR
      - RATE_LIMIT_EXCEEDED
      - API_ERROR
      - ITEM_ERROR
      - ASSET_REPORT_ERROR
      - RECAPTCHA_ERROR
      - OAUTH_ERROR
      - PAYMENT_ERROR
      - BANK_TRANSFER_ERROR
      - INCOME_VERIFICATION_ERROR
      - MICRODEPOSITS_ERROR
    AccountType:
      type: string
      title: AccountType
      enum:
      - investment
      - credit
      - depository
      - loan
      - brokerage
      - other
      description: |-
        `investment:` Investment account. In API versions 2018-05-22 and earlier, this type is called `brokerage` instead.

        `credit:` Credit card

        `depository:` Depository account

        `loan:` Loan account

        `other:` Non-specified account type

        See the [Account type schema](https://plaid.com/docs/api/accounts#account-type-schema) for a full listing of account types and corresponding subtypes.
    OverrideAccountType:
      type: string
      title: OverrideAccountType
      enum:
      - investment
      - credit
      - depository
      - loan
      - payroll
      - other
      description: |-
        `investment:` Investment account.

        `credit:` Credit card

        `depository:` Depository account

        `loan:` Loan account

        `payroll:` Payroll account

        `other:` Non-specified account type

        See the [Account type schema](https://plaid.com/docs/api/accounts#account-type-schema) for a full listing of account types and corresponding subtypes.
    AccountBase:
      title: Account
      type: object
      additionalProperties: true
      description: A single account at a financial institution.
      x-examples:
        example-1: {}
      properties:
        account_id:
          type: string
          description: |-
            Plaid’s unique identifier for the account. This value will not change unless Plaid can't reconcile the account with the data returned by the financial institution. This may occur, for example, when the name of the account changes. If this happens a new `account_id` will be assigned to the account.

            The `account_id` can also change if the `access_token` is deleted and the same credentials that were used to generate that `access_token` are used to generate a new `access_token` on a later date. In that case, the new `account_id` will be different from the old `account_id`.

            If an account with a specific `account_id` disappears instead of changing, the account is likely closed. Closed accounts are not returned by the Plaid API.

            Like all Plaid identifiers, the `account_id` is case sensitive.
        balances:
          $ref: '#/components/schemas/AccountBalance'
        mask:
          type: string
          nullable: true
          description: The last 2-4 alphanumeric characters of an account's official account number. Note that the mask may be non-unique between an Item's accounts, and it may also not match the mask that the bank displays to the user.
        name:
          type: string
          description: The name of the account, either assigned by the user or by the financial institution itself
        official_name:
          type: string
          nullable: true
          description: The official name of the account as given by the financial institution
        type:
          $ref: '#/components/schemas/AccountType'
        subtype:
          $ref: '#/components/schemas/AccountSubtype'
        verification_status:
          type: string
          enum:
          - automatically_verified
          - pending_automatic_verification
          - pending_manual_verification
          - manually_verified
          - verification_expired
          - verification_failed
          - database_matched
          description: "The current verification status of an Auth Item initiated through Automated or Manual micro-deposits.  Returned for Auth Items only.\n\n`pending_automatic_verification`: The Item is pending automatic verification\n\n`pending_manual_verification`: The Item is pending manual micro-deposit verification. Items remain in this state until the user successfully verifies the micro-deposit.\n\n`automatically_verified`: The Item has successfully been automatically verified\t\n\n`manually_verified`: The Item has successfully been manually verified\n\n`verification_expired`: Plaid was unable to automatically verify the deposit within 7 calendar days and will no longer attempt to validate the Item. Users may retry by submitting their information again through Link.\n\n`verification_failed`: The Item failed manual micro-deposit verification because the user exhausted all 3 verification attempts. Users may retry by submitting their information again through Link.\n\n`database_matched`: The Item has successfully been verified using Plaid's data sources. Note: Database Match is currently a beta feature, please contact your account manager for more information.\t\n\t"
        persistent_account_id:
          type: string
          description: A unique and persistent identifier for accounts that can be used to trace multiple instances of the same account across different Items for depository accounts. This is currently only supported for Chase Items.
      required:
      - account_id
      - balances
      - mask
      - name
      - official_name
      - type
      - subtype
    AccountBalance:
      title: AccountBalance
      type: object
      additionalProperties: true
      description: A set of fields describing the balance for an account. Balance information may be cached unless the balance object was returned by `/accounts/balance/get`.
      properties:
        available:
          type: number
          format: double
          description: |-
            The amount of funds available to be withdrawn from the account, as determined by the financial institution.

            For `credit`-type accounts, the `available` balance typically equals the `limit` less the `current` balance, less any pending outflows plus any pending inflows.

            For `depository`-type accounts, the `available` balance typically equals the `current` balance less any pending outflows plus any pending inflows. For `depository`-type accounts, the `available` balance does not include the overdraft limit.

            For `investment`-type accounts (or `brokerage`-type accounts for API versions 2018-05-22 and earlier), the `available` balance is the total cash available to withdraw as presented by the institution.

            Note that not all institutions calculate the `available`  balance. In the event that `available` balance is unavailable, Plaid will return an `available` balance value of `null`.

            Available balance may be cached and is not guaranteed to be up-to-date in realtime unless the value was returned by `/accounts/balance/get`.

            If `current` is `null` this field is guaranteed not to be `null`.
          nullable: true
        current:
          type: number
          format: double
          description: |-
            The total amount of funds in or owed by the account.

            For `credit`-type accounts, a positive balance indicates the amount owed; a negative amount indicates the lender owing the account holder.

            For `loan`-type accounts, the current balance is the principal remaining on the loan, except in the case of student loan accounts at Sallie Mae (`ins_116944`). For Sallie Mae student loans, the account's balance includes both principal and any outstanding interest.

            For `investment`-type accounts (or `brokerage`-type accounts for API versions 2018-05-22 and earlier), the current balance is the total value of assets as presented by the institution.

            Note that balance information may be cached unless the value was returned by `/accounts/balance/get`; if the Item is enabled for Transactions, the balance will be at least as recent as the most recent Transaction update. If you require realtime balance information, use the `available` balance as provided by `/accounts/balance/get`.

            When returned by `/accounts/balance/get`, this field may be `null`. When this happens, `available` is guaranteed not to be `null`.
          nullable: true
        limit:
          type: number
          format: double
          description: |-
            For `credit`-type accounts, this represents the credit limit.

            For `depository`-type accounts, this represents the pre-arranged overdraft limit, which is common for current (checking) accounts in Europe.

            In North America, this field is typically only available for `credit`-type accounts.
          nullable: true
        iso_currency_code:
          type: string
          description: The ISO-4217 currency code of the balance. Always null if `unofficial_currency_code` is non-null.
          nullable: true
        unofficial_currency_code:
          type: string
          description: |-
            The unofficial currency code associated with the balance. Always null if `iso_currency_code` is non-null. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.

            See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `unofficial_currency_code`s.
          nullable: true
        last_updated_datetime:
          type: string
          format: date-time
          description: |-
            Timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format (`YYYY-MM-DDTHH:mm:ssZ`) indicating the oldest acceptable balance when making a request to `/accounts/balance/get`.

            This field is only used and expected when the institution is `ins_128026` (Capital One) and the Item contains one or more accounts with a non-depository account type, in which case a value must be provided or an `INVALID_REQUEST` error with the code of `INVALID_FIELD` will be returned. For Capital One depository accounts as well as all other account types on all other institutions, this field is ignored. See [account type schema](https://en.wikipedia.org/wiki/ISO_8601) for a full list of account types.

            If the balance that is pulled is older than the given timestamp for Items with this field required, an `INVALID_REQUEST` error with the code of `LAST_UPDATED_DATETIME_OUT_OF_RANGE` will be returned with the most recent timestamp for the requested account contained in the response.
          nullable: true
      required:
      - available
      - current
      - limit
      - iso_currency_code
      - unofficial_currency_code
    AccountSubtype:
      type: string
      nullable: true
      title: AccountSubtype
      description: See the [Account type schema](https://plaid.com/docs/api/accounts/#account-type-schema) for a full listing of account types and corresponding subtypes.
      enum:
      - 401a
      - 401k
      - 403B
      - 457b
      - "529"
      - brokerage
      - cash isa
      - crypto exchange
      - education savings account
      - ebt
      - fixed annuity
      - gic
      - health reimbursement arrangement
      - hsa
      - isa
      - ira
      - lif
      - life insurance
      - lira
      - lrif
      - lrsp
      - non-custodial wallet
      - non-taxable brokerage account
      - other
      - other insurance
      - other annuity
      - prif
      - rdsp
      - resp
      - rlif
      - rrif
      - pension
      - profit sharing plan
      - retirement
      - roth
      - roth 401k
      - rrsp
      - sep ira
      - simple ira
      - sipp
      - stock plan
      - thrift savings plan
      - tfsa
      - trust
      - ugma
      - utma
      - variable annuity
      - credit card
      - paypal
      - cd
      - checking
      - savings
      - money market
      - prepaid
      - auto
      - business
      - commercial
      - construction
      - consumer
      - home equity
      - loan
      - mortgage
      - overdraft
      - line of credit
      - student
      - cash management
      - keogh
      - mutual fund
      - recurring
      - rewards
      - safe deposit
      - sarsep
      - payroll
      - null
    LinkEventName:
      title: LinkEventName
      description: A string representing the event that has just occurred in the Link flow.
      type: string
      enum:
      - BANK_INCOME_INSIGHTS_COMPLETED
      - CLOSE_OAUTH
      - ERROR
      - EXIT
      - FAIL_OAUTH
      - HANDOFF
      - OPEN
      - OPEN_MY_PLAID
      - OPEN_OAUTH
      - SEARCH_INSTITUTION
      - SELECT_AUTH_TYPE
      - SELECT_BRAND
      - SELECT_DEGRADED_INSTITUTION
      - SELECT_DOWN_INSTITUTION
      - SELECT_FILTERED_INSTITUTION
      - SELECT_INSTITUTION
      - SUBMIT_ACCOUNT_NUMBER
      - SUBMIT_CREDENTIALS
      - SUBMIT_DOCUMENTS
      - SUBMIT_DOCUMENTS_ERROR
      - SUBMIT_DOCUMENTS_SUCCESS
      - SUBMIT_MFA
      - SUBMIT_ROUTING_NUMBER
      - TRANSITION_VIEW
      - VIEW_DATA_TYPES
    LinkDeliveryWebhookCallbackType:
      title: LinkDeliveryWebhookCallbackType
      description: The type of Link callback event
      type: string
      enum:
      - ON_SUCCESS
      - ON_EVENT
      - ON_EXIT
    LinkDeliveryWebhookCommunicationMethod:
      title: LinkDeliveryWebhookCommunicationMethod
      description: The communication method used to deliver the Hosted Link session
      type: string
      enum:
      - SMS
      - EMAIL
    LinkDeliveryWebhookDeliveryStatus:
      title: LinkDeliveryWebhookDeliveryStatus
      description: The status of the delivery of the Hosted Link to the user
      type: string
      enum:
      - SUCCESS
      - FAILURE
    LinkDeliveryInstitution:
      title: LinkDeliveryInstitution
      type: object
      additionalProperties: true
      description: Information related to the financial institution.
      x-hidden-from-docs: true
      properties:
        name:
          type: string
          description: The full institution name, such as 'Wells Fargo'
        institution_id:
          type: string
          description: The Plaid institution identifier
    LinkDeliveryVerificationStatus:
      title: LinkDeliveryVerificationStatus
      description: Indicates an Item's micro-deposit-based verification status.
      type: string
      enum:
      - automatically_verified
      - pending_automatic_verification
      - pending_manual_verification
      - manually_verified
      - verification_expired
      - verification_failed
      - database_matched
    LinkDeliveryAccount:
      title: LinkDeliveryAccount
      type: object
      additionalProperties: true
      description: Information related to account attached to the connected Item
      x-hidden-from-docs: true
      properties:
        id:
          type: string
          description: The Plaid `account_id`
        name:
          type: string
          description: The official account name
        mask:
          type: string
          description: The last 2-4 alphanumeric characters of an account's official account number. Note that the mask may be non-unique between an Item's accounts. It may also not match the mask that the bank displays to the user.
        type:
          type: string
          description: The account type. See the [Account schema](https://plaid.com/docs/api/accounts/#account-type-schema) for a full list of possible values
        subtype:
          type: string
          description: The account subtype. See the [Account schema](https://plaid.com/docs/api/accounts/#account-type-schema) for a full list of possible values
        verification_status:
          $ref: '#/components/schemas/LinkDeliveryVerificationStatus'
        class_type:
          type: string
          description: If micro-deposit verification is being used, indicates whether the account being verified is a `business` or `personal` account.
    LinkDeliveryMetadata:
      title: LinkDeliveryMetadata
      type: object
      additionalProperties: true
      description: Information related to the related to the delivery of the link session to users
      x-hidden-from-docs: true
      properties:
        communication_method:
          $ref: '#/components/schemas/LinkDeliveryWebhookCommunicationMethod'
        delivery_status:
          $ref: '#/components/schemas/LinkDeliveryWebhookDeliveryStatus'
    LinkCallbackMetadata:
      title: LinkCallbackMetadata
      type: object
      additionalProperties: true
      description: Information related to the callback from the Hosted Link session.
      x-hidden-from-docs: true
      properties:
        callback_type:
          $ref: '#/components/schemas/LinkDeliveryWebhookCallbackType'
        event_name:
          $ref: '#/components/schemas/LinkEventName'
        status:
          type: string
          description: Indicates where in the flow the Link user exited
        link_session_id:
          type: string
          description: A unique identifier associated with a user's actions and events through the Link flow. Include this identifier when opening a support ticket for faster turnaround.
        request_id:
          type: string
          description: The request ID for the last request made by Link. This can be shared with Plaid Support to expedite investigation.
        institution:
          $ref: '#/components/schemas/LinkDeliveryInstitution'
        accounts:
          type: array
          description: A list of accounts attached to the connected Item. If Account Select is enabled via the developer dashboard, accounts will only include selected accounts.
          items:
            $ref: '#/components/schemas/LinkDeliveryAccount'
    NumbersACH:
      title: NumbersACH
      type: object
      additionalProperties: true
      description: Identifying information for transferring money to or from a US account via ACH or wire transfer.
      properties:
        account_id:
          type: string
          description: The Plaid account ID associated with the account numbers
        account:
          type: string
          description: |-
            The ACH account number for the account.

            Note that when using OAuth with Chase Bank (`ins_56`), Chase will issue "tokenized" routing and account numbers, which are not the user's actual account and routing numbers. These tokenized account numbers (also known as TANs) should work identically to normal account and routing numbers. The digits returned in the `mask` field will continue to reflect the actual account number, rather than the tokenized account number; for this reason, when displaying account numbers to the user to help them identify their account in your UI, always use the `mask` rather than truncating the `account` number. If a user revokes their permissions to your app, the tokenized numbers will no longer work.
        routing:
          type: string
          description: The ACH routing number for the account. If the institution is `ins_56`, this may be a tokenized routing number. For more information, see the description of the `account` field.
        wire_routing:
          type: string
          description: The wire transfer routing number for the account, if available
          nullable: true
        can_transfer_in:
          type: boolean
          description: Whether the account supports ACH transfers into the account
          nullable: true
          x-hidden-from-docs: true
        can_transfer_out:
          type: boolean
          description: Whether the account supports ACH transfers out of the account
          nullable: true
          x-hidden-from-docs: true
      required:
      - account_id
      - account
      - routing
      - wire_routing
    NumbersACHNullable:
      description: Identifying information for transferring money to or from a US account via ACH or wire transfer.
      nullable: true
      allOf:
      - $ref: '#/components/schemas/NumbersACH'
      - type: object
        additionalProperties: true
    NumbersEFT:
      title: NumbersEFT
      type: object
      additionalProperties: true
      description: Identifying information for transferring money to or from a Canadian bank account via EFT.
      properties:
        account_id:
          type: string
          description: The Plaid account ID associated with the account numbers
        account:
          type: string
          description: The EFT account number for the account
        institution:
          type: string
          description: The EFT institution number for the account
        branch:
          type: string
          description: The EFT branch number for the account
      required:
      - account_id
      - account
      - institution
      - branch
    NumbersEFTNullable:
      description: Identifying information for transferring money to or from a Canadian bank account via EFT.
      nullable: true
      allOf:
      - $ref: '#/components/schemas/NumbersEFT'
      - type: object
        additionalProperties: true
    NumbersInternational:
      title: NumbersInternational
      type: object
      additionalProperties: true
      description: Identifying information for transferring money to or from an international bank account via wire transfer.
      properties:
        account_id:
          type: string
          description: The Plaid account ID associated with the account numbers
        iban:
          type: string
          description: The International Bank Account Number (IBAN) for the account
        bic:
          type: string
          description: The Bank Identifier Code (BIC) for the account
      required:
      - account_id
      - iban
      - bic
    NumbersInternationalNullable:
      description: Identifying information for transferring money to or from an international bank account via wire transfer.
      nullable: true
      allOf:
      - $ref: '#/components/schemas/NumbersInternational'
      - type: object
        additionalProperties: true
    NumbersBACS:
      title: NumbersBACS
      type: object
      additionalProperties: true
      description: Identifying information for transferring money to or from a UK bank account via BACS.
      properties:
        account_id:
          type: string
          description: The Plaid account ID associated with the account numbers
        account:
          type: string
          description: The BACS account number for the account
        sort_code:
          type: string
          description: The BACS sort code for the account
      required:
      - account_id
      - account
      - sort_code
    NumbersBACSNullable:
      description: Identifying information for transferring money to or from a UK bank account via BACS.
      nullable: true
      allOf:
      - $ref: '#/components/schemas/NumbersBACS'
      - type: object
        additionalProperties: true
    NumbersInternationalIBAN:
      type: object
      additionalProperties: true
      description: Account numbers using the International Bank Account Number and BIC/SWIFT code format.
      nullable: true
      properties:
        iban:
          $ref: '#/components/schemas/NumbersIBAN'
        bic:
          type: string
          description: The Business Identifier Code, also known as SWIFT code, for this bank account.
          minLength: 8
          maxLength: 11
      required:
      - iban
      - bic
    NumbersIBAN:
      type: string
      description: International Bank Account Number (IBAN).
      minLength: 15
      maxLength: 34
    NumbersIBANNullable:
      type: string
      description: International Bank Account Number (IBAN).
      nullable: true
      allOf:
      - $ref: '#/components/schemas/NumbersIBAN'
    InvestmentsAuthGetNumbers:
      x-hidden-from-docs: true
      type: object
      additionalProperties: true
      description: Identifying information for transferring holdings to an investments account.
      properties:
        acats:
          type: array
          items:
            $ref: '#/components/schemas/NumbersACATS'
        aton:
          type: array
          items:
            $ref: '#/components/schemas/NumbersATON'
    NumbersACATS:
      x-hidden-from-docs: true
      title: NumbersACATS
      type: object
      additionalProperties: true
      description: Identifying information for transferring holdings to an investments account via ACATS.
      properties:
        account_id:
          type: string
          description: The Plaid account ID associated with the account numbers
        account:
          type: string
          description: The full account number for the account
        dtc_numbers:
          type: array
          description: Identifiers for the clearinghouses that are assocciated with the account in order of relevance. This array will be empty if we can't provide any account level data. Institution level data can be retrieved from the institutions/get endpoints.
          items:
            type: string
      required:
      - account_id
      - account
      - dtc_numbers
    NumbersATON:
      x-hidden-from-docs: true
      title: NumbersATON
      type: object
      additionalProperties: true
      description: Identifying information for transferring holdings to an investments account via ATON.
      properties:
        account_id:
          type: string
          description: The Plaid account ID associated with the account numbers
        account:
          type: string
          description: The full account number for the account
      required:
      - account_id
      - account
    RecipientBACS:
      title: RecipientBACS
      type: object
      additionalProperties: true
      nullable: true
      description: An object containing a BACS account number and sort code. If an IBAN is not provided or if you need to accept domestic GBP-denominated payments, BACS data is required.
      properties:
        account:
          type: string
          description: The account number of the account. Maximum of 10 characters.
          minLength: 1
          maxLength: 10
        sort_code:
          type: string
          description: The 6-character sort code of the account.
          minLength: 6
          maxLength: 6
    RecipientBACSNullable:
      description: An object containing a BACS account number and sort code. If an IBAN is not provided or if this recipient needs to accept domestic GBP-denominated payments, BACS data is required.
      nullable: true
      allOf:
      - $ref: '#/components/schemas/RecipientBACS'
      - type: object
        additionalProperties: true
        description: The account number and sort code of the recipient's account.
    SenderBACSNullable:
      description: An object containing a BACS account number and sort code. If an IBAN is not provided or if this recipient needs to accept domestic GBP-denominated payments, BACS data is required.
      nullable: true
      allOf:
      - $ref: '#/components/schemas/RecipientBACS'
      - type: object
        additionalProperties: true
        description: The account number and sort code of the sender's account, if specified in the `/payment_initiation/payment/create` call.
    PaymentInitiationOptionalRestrictionBacs:
      description: An optional object used to restrict the accounts used for payments. If provided, the end user will be able to send payments only from the specified bank account.
      nullable: true
      allOf:
      - $ref: '#/components/schemas/RecipientBACS'
      - type: object
        additionalProperties: true
    RemovedTransaction:
      title: RemovedTransaction
      type: object
      description: A representation of a removed transaction
      x-examples: {}
      properties:
        transaction_id:
          type: string
          description: The ID of the removed transaction.
    RequestID:
      title: RequestID
      type: string
      description: A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
    TransactionsRuleDetails:
      title: TransactionsRuleDetails
      type: object
      description: A representation of transactions rule details.
      x-examples: {}
      properties:
        field:
          $ref: '#/components/schemas/TransactionsRuleField'
        type:
          $ref: '#/components/schemas/TransactionsRuleType'
        query:
          type: string
          description: |
            For TRANSACTION_ID field, provide transaction_id. For NAME field, provide a string pattern.
      required:
      - field
      - type
      - query
    TransactionsRuleField:
      title: TransactionsRuleField
      type: string
      enum:
      - TRANSACTION_ID
      - NAME
      description: Transaction field for which the rule is defined.
    TransactionsRuleType:
      title: TransactionsRuleType
      type: string
      enum:
      - EXACT_MATCH
      - SUBSTRING_MATCH
      description: |
        Transaction rule's match type. For TRANSACTION_ID field, EXACT_MATCH is available.
        Matches are case sensitive.
    TransactionsCategoryRule:
      title: TransactionsCategoryRule
      type: object
      description: A representation of a transactions category rule.
      x-examples: {}
      properties:
        id:
          type: string
          description: A unique identifier of the rule created
        item_id:
          type: string
          description: A unique identifier of the Item the rule was created for.
        created_at:
          type: string
          format: date-time
          description: |
            Date and time when a rule was created in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format ( `YYYY-MM-DDTHH:mm:ssZ` ).
        personal_finance_category:
          type: string
          description: |
            Personal finance category unique identifier.

            In the personal finance category taxonomy, this field is represented by the detailed category field.
        rule_details:
          $ref: '#/components/schemas/TransactionsRuleDetails'
    TransactionBase:
      title: TransactionBase
      type: object
      additionalProperties: true
      description: A representation of a transaction
      x-examples: {}
      properties:
        account_id:
          type: string
          description: The ID of the account in which this transaction occurred.
        amount:
          type: number
          format: double
          description: The settled value of the transaction, denominated in the transactions's currency, as stated in `iso_currency_code` or `unofficial_currency_code`. Positive values when money moves out of the account; negative values when money moves in. For example, debit card purchases are positive; credit card payments, direct deposits, and refunds are negative.
        iso_currency_code:
          type: string
          description: The ISO-4217 currency code of the transaction. Always `null` if `unofficial_currency_code` is non-null.
          nullable: true
        unofficial_currency_code:
          type: string
          description: |-
            The unofficial currency code associated with the transaction. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.

            See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
          nullable: true
        category:
          deprecated: true
          type: array
          description: |-
            A hierarchical array of the categories to which this transaction belongs. For a full list of categories, see [`/categories/get`](https://plaid.com/docs/api/products/transactions/#categoriesget).

            All Transactions implementations are recommended to use the new `personal_finance_category` instead of `category`, as it provides greater accuracy and more meaningful categorization.

            If the `transactions` object was returned by an Assets endpoint such as `/asset_report/get/` or `/asset_report/pdf/get`, this field will only appear in an Asset Report with Insights.
          nullable: true
          items:
            type: string
        category_id:
          deprecated: true
          description: |-
            The ID of the category to which this transaction belongs. For a full list of categories, see [`/categories/get`](https://plaid.com/docs/api/products/transactions/#categoriesget).

            All Transactions implementations are recommended to use the new `personal_finance_category` instead of `category`, as it provides greater accuracy and more meaningful categorization.

            If the `transactions` object was returned by an Assets endpoint such as `/asset_report/get/` or `/asset_report/pdf/get`, this field will only appear in an Asset Report with Insights.
          type: string
          nullable: true
        check_number:
          type: string
          description: The check number of the transaction. This field is only populated for check transactions.
          nullable: true
        date:
          type: string
          format: date
          description: For pending transactions, the date that the transaction occurred; for posted transactions, the date that the transaction posted. Both dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format ( `YYYY-MM-DD` ). To receive information about the date that a posted transaction was initiated, see the `authorized_date` field.
        location:
          $ref: '#/components/schemas/Location'
        name:
          type: string
          description: |-
            The merchant name or transaction description.

            If the `transactions` object was returned by a Transactions endpoint such as `/transactions/sync` or `/transactions/get`, this field will always appear. If the `transactions` object was returned by an Assets endpoint such as `/asset_report/get/` or `/asset_report/pdf/get`, this field will only appear in an Asset Report with Insights.
        merchant_name:
          type: string
          description: The merchant name, as enriched by Plaid from the `name` field. This is typically a more human-readable version of the merchant counterparty in the transaction. For some bank transactions (such as checks or account transfers) where there is no meaningful merchant name, this value will be `null`.
          nullable: true
        original_description:
          type: string
          description: The string returned by the financial institution to describe the transaction. For transactions returned by `/transactions/sync` or `/transactions/get`, this field is in beta and will be omitted unless the client is both enrolled in the closed beta program and has set `options.include_original_description` to `true`.
          nullable: true
        payment_meta:
          $ref: '#/components/schemas/PaymentMeta'
        pending:
          type: boolean
          description: When `true`, identifies the transaction as pending or unsettled. Pending transaction details (name, type, amount, category ID) may change before they are settled.
        pending_transaction_id:
          type: string
          description: The ID of a posted transaction's associated pending transaction, where applicable.
          nullable: true
        account_owner:
          type: string
          description: The name of the account owner. This field is not typically populated and only relevant when dealing with sub-accounts.
          nullable: true
        transaction_id:
          type: string
          description: The unique ID of the transaction. Like all Plaid identifiers, the `transaction_id` is case sensitive.
        transaction_type:
          type: string
          enum:
          - digital
          - place
          - special
          - unresolved
          description: |
            Please use the `payment_channel` field, `transaction_type` will be deprecated in the future.

            `digital:` transactions that took place online.

            `place:` transactions that were made at a physical location.

            `special:` transactions that relate to banks, e.g. fees or deposits.

            `unresolved:` transactions that do not fit into the other three types.
          deprecated: true
        logo_url:
          type: string
          description: The URL of a logo associated with this transaction, if available. The logo will always be 100×100 pixel PNG file.
          nullable: true
        website:
          type: string
          description: The website associated with this transaction, if available.
          nullable: true
      required:
      - transaction_id
      - pending
      - date
      - unofficial_currency_code
      - iso_currency_code
      - amount
      - account_id
    Transaction:
      title: Transaction
      description: A representation of a transaction
      x-examples: {}
      allOf:
      - $ref: '#/components/schemas/TransactionBase'
      - type: object
        additionalProperties: true
        properties:
          authorized_date:
            type: string
            format: date
            description: The date that the transaction was authorized. For posted transactions, the `date` field will indicate the posted date, but `authorized_date` will indicate the day the transaction was authorized by the financial institution. If presenting transactions to the user in a UI, the `authorized_date`, when available, is generally preferable to use over the `date` field for posted transactions, as it will generally represent the date the user actually made the transaction. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format ( `YYYY-MM-DD` ).
            nullable: true
          authorized_datetime:
            type: string
            format: date-time
            description: |-
              Date and time when a transaction was authorized in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format ( `YYYY-MM-DDTHH:mm:ssZ` ). For posted transactions, the `datetime` field will indicate the posted date, but `authorized_datetime` will indicate the day the transaction was authorized by the financial institution. If presenting transactions to the user in a UI, the `authorized_datetime`, when available, is generally preferable to use over the `datetime` field for posted transactions, as it will generally represent the date the user actually made the transaction.

              This field is returned for select financial institutions and comes as provided by the institution. It may contain default time values (such as 00:00:00). This field is only populated in API version 2019-05-29 and later.
            nullable: true
          datetime:
            type: string
            format: date-time
            description: |-
              Date and time when a transaction was posted in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format ( `YYYY-MM-DDTHH:mm:ssZ` ). For the date that the transaction was initiated, rather than posted, see the `authorized_datetime` field.

              This field is returned for select financial institutions and comes as provided by the institution. It may contain default time values (such as 00:00:00). This field is only populated in API version 2019-05-29 and later.
            nullable: true
          payment_channel:
            type: string
            enum:
            - online
            - in store
            - other
            description: |
              The channel used to make a payment.
              `online:` transactions that took place online.

              `in store:` transactions that were made at a physical location.

              `other:` transactions that relate to banks, e.g. fees or deposits.

              This field replaces the `transaction_type` field.
          personal_finance_category:
            $ref: '#/components/schemas/PersonalFinanceCategory'
          transaction_code:
            $ref: '#/components/schemas/TransactionCode'
          personal_finance_category_icon_url:
            type: string
            description: The URL of an icon associated with the primary personal finance category. The icon will always be 100×100 pixel PNG file.
          counterparties:
            type: array
            description: The counterparties present in the transaction. Counterparties, such as the merchant or the financial institution, are extracted by Plaid from the raw description.
            items:
              $ref: '#/components/schemas/TransactionCounterparty'
          merchant_entity_id:
            type: string
            description: A unique, stable, Plaid-generated ID that maps to the merchant.
            nullable: true
        required:
        - account_owner
        - pending_transaction_id
        - payment_channel
        - payment_meta
        - name
        - location
        - authorized_date
        - authorized_datetime
        - datetime
        - category_id
        - category
        - transaction_code
    Location:
      title: Transaction Location
      type: object
      additionalProperties: true
      description: A representation of where a transaction took place
      properties:
        address:
          type: string
          description: The street address where the transaction occurred.
          nullable: true
        city:
          type: string
          description: The city where the transaction occurred.
          nullable: true
        region:
          type: string
          description: The region or state where the transaction occurred. In API versions 2018-05-22 and earlier, this field is called `state`.
          nullable: true
        postal_code:
          type: string
          description: The postal code where the transaction occurred. In API versions 2018-05-22 and earlier, this field is called `zip`.
          nullable: true
        country:
          type: string
          description: The ISO 3166-1 alpha-2 country code where the transaction occurred.
          nullable: true
        lat:
          type: number
          format: double
          description: The latitude where the transaction occurred.
          nullable: true
        lon:
          type: number
          format: double
          description: The longitude where the transaction occurred.
          nullable: true
        store_number:
          type: string
          description: The merchant defined store number where the transaction occurred.
          nullable: true
      required:
      - address
      - city
      - region
      - postal_code
      - country
      - lat
      - lon
      - store_number
    TransactionStream:
      title: TransactionStream
      type: object
      description: A grouping of related transactions
      x-examples: {}
      additionalProperties: true
      properties:
        account_id:
          type: string
          description: The ID of the account to which the stream belongs
        stream_id:
          type: string
          description: A unique id for the stream
        category:
          deprecated: true
          type: array
          description: |-
            A hierarchical array of the categories to which this transaction belongs. See [Categories](https://plaid.com/docs/api/products/transactions/#categoriesget).

            All implementations are encouraged to use the new `personal_finance_category` instead of `category`. `personal_finance_category` provides more meaningful categorization and greater accuracy.
          items:
            type: string
        category_id:
          deprecated: true
          description: |-
            The ID of the category to which this transaction belongs. See [Categories](https://plaid.com/docs/api/products/transactions/#categoriesget).

            All implementations are encouraged to use the new `personal_finance_category` instead of `category`. `personal_finance_category` provides more meaningful categorization and greater accuracy.
          type: string
        description:
          type: string
          description: A description of the transaction stream.
        merchant_name:
          type: string
          description: The merchant associated with the transaction stream.
          nullable: true
        first_date:
          type: string
          description: The posted date of the earliest transaction in the stream.
          format: date
        last_date:
          type: string
          description: The posted date of the latest transaction in the stream.
          format: date
        frequency:
          $ref: '#/components/schemas/RecurringTransactionFrequency'
        transaction_ids:
          type: array
          description: An array of Plaid transaction IDs belonging to the stream, sorted by posted date.
          items:
            type: string
        average_amount:
          $ref: '#/components/schemas/TransactionStreamAmount'
        last_amount:
          $ref: '#/components/schemas/TransactionStreamAmount'
        is_active:
          type: boolean
          description: Indicates whether the transaction stream is still live.
        status:
          $ref: '#/components/schemas/TransactionStreamStatus'
        personal_finance_category:
          $ref: '#/components/schemas/PersonalFinanceCategory'
        is_user_modified:
          type: boolean
          description: This will be set to `true` if the stream has been modified by request to a `/transactions/recurring/streams` endpoint. It will be `false` for all other streams.
        last_user_modified_datetime:
          type: string
          description: The date and time of the most recent user modification. This will only be set if `is_user_modified` is `true`.
          format: date-time
      required:
      - account_id
      - stream_id
      - category
      - category_id
      - description
      - merchant_name
      - first_date
      - last_date
      - frequency
      - transaction_ids
      - average_amount
      - last_amount
      - is_active
      - status
      - is_user_modified
    TransactionStreamAmount:
      type: object
      title: TransactionStreamAmount
      description: Object with data pertaining to an amount on the transaction stream.
      additionalProperties: true
      properties:
        amount:
          type: number
          format: double
          description: Represents the numerical value of an amount.
        iso_currency_code:
          type: string
          description: |-
            The ISO-4217 currency code of the amount. Always `null` if `unofficial_currency_code` is non-`null`.

            See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
          nullable: true
        unofficial_currency_code:
          type: string
          description: The unofficial currency code of the amount. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.
          nullable: true
    RecurringTransactionFrequency:
      type: string
      description: |-
        Describes the frequency of the transaction stream.

        `WEEKLY`: Assigned to a transaction stream that occurs approximately every week.

        `BIWEEKLY`: Assigned to a transaction stream that occurs approximately every 2 weeks.

        `SEMI_MONTHLY`: Assigned to a transaction stream that occurs approximately twice per month. This frequency is typically seen for inflow transaction streams.

        `MONTHLY`: Assigned to a transaction stream that occurs approximately every month.

        `ANNUALLY`: Assigned to a transaction stream that occurs approximately every year.

        `UNKNOWN`: Assigned to a transaction stream that does not fit any of the pre-defined frequencies.
      title: RecurringTransactionFrequency
      enum:
      - UNKNOWN
      - WEEKLY
      - BIWEEKLY
      - SEMI_MONTHLY
      - MONTHLY
      - ANNUALLY
    TransactionStreamStatus:
      type: string
      description: |-
        The current status of the transaction stream.

        `MATURE`: A `MATURE` recurring stream should have at least 3 transactions and happen on a regular cadence (For Annual recurring stream, we will mark it `MATURE` after 2 instances).

        `EARLY_DETECTION`: When a recurring transaction first appears in the transaction history and before it fulfills the requirement of a mature stream, the status will be `EARLY_DETECTION`.

        `TOMBSTONED`: A stream that was previously in the `EARLY_DETECTION` status will move to the `TOMBSTONED` status when no further transactions were found at the next expected date.

        `UNKNOWN`: A stream is assigned an `UNKNOWN` status when none of the other statuses are applicable.
      title: TransactionStreamStatus
      enum:
      - UNKNOWN
      - MATURE
      - EARLY_DETECTION
      - TOMBSTONED
    InvestmentsAuthOwner:
      x-hidden-from-docs: true
      title: InvestmentsAuthOwner
      type: object
      description: Information on the ownership of an investments account
      additionalProperties: true
      properties:
        account_id:
          type: string
          description: The ID of the account that this identity information pertains to
        names:
          description: |-
            A list of names associated with the account by the financial institution. In the case of a joint account, Plaid will make a best effort to report the names of all account holders.

            If an Item contains multiple accounts with different owner names, some institutions will report all names associated with the Item in each account's `names` array.
          type: array
          items:
            type: string
    Institution:
      title: Institution
      type: object
      additionalProperties: true
      description: Details relating to a specific financial institution
      properties:
        institution_id:
          type: string
          description: Unique identifier for the institution. Note that the same institution may have multiple records, each with different institution IDs; for example, if the institution has migrated to OAuth, there may be separate `institution_id`s for the OAuth and non-OAuth versions of the institution. Institutions that operate in different countries or with multiple login portals may also have separate `institution_id`s for each country or portal.
        name:
          type: string
          description: The official name of the institution.
        products:
          type: array
          description: A list of the Plaid products supported by the institution. Note that only institutions that support Instant Auth will return `auth` in the product array; institutions that do not list `auth` may still support other Auth methods such as Instant Match or Automated Micro-deposit Verification. To identify institutions that support those methods, use the `auth_metadata` object. For more details, see [Full Auth coverage](https://plaid.com/docs/auth/coverage/).
          items:
            $ref: '#/components/schemas/Products'
        country_codes:
          type: array
          description: A list of the country codes supported by the institution.
          items:
            $ref: '#/components/schemas/CountryCode'
        url:
          type: string
          description: The URL for the institution's website
          nullable: true
        primary_color:
          type: string
          description: Hexadecimal representation of the primary color used by the institution
          nullable: true
        logo:
          type: string
          description: Base64 encoded representation of the institution's logo, returned as a base64 encoded 152x152 PNG. Not all institutions' logos are available.
          nullable: true
        routing_numbers:
          type: array
          description: A partial list of routing numbers associated with the institution. This list is provided for the purpose of looking up institutions by routing number. It is not comprehensive and should never be used as a complete list of routing numbers for an institution.
          items:
            type: string
        dtc_numbers:
          type: array
          description: A partial list of DTC numbers associated with the institution.
          items:
            type: string
        oauth:
          type: boolean
          description: Indicates that the institution has an OAuth login flow. This will be `true` if OAuth is supported for any Items associated with the institution, even if the institution also supports non-OAuth connections.
        status:
          $ref: '#/components/schemas/InstitutionStatus'
        payment_initiation_metadata:
          $ref: '#/components/schemas/PaymentInitiationMetadata'
        auth_metadata:
          $ref: '#/components/schemas/AuthMetadata'
      required:
      - institution_id
      - name
      - products
      - country_codes
      - routing_numbers
      - oauth
    InstitutionStatus:
      title: InstitutionStatus
      type: object
      additionalProperties: true
      nullable: true
      properties:
        item_logins:
          $ref: '#/components/schemas/ProductStatus'
        transactions_updates:
          $ref: '#/components/schemas/ProductStatus'
        auth:
          $ref: '#/components/schemas/ProductStatus'
        identity:
          $ref: '#/components/schemas/ProductStatus'
        investments_updates:
          $ref: '#/components/schemas/ProductStatus'
        liabilities_updates:
          $ref: '#/components/schemas/ProductStatus'
        liabilities:
          $ref: '#/components/schemas/ProductStatus'
        investments:
          $ref: '#/components/schemas/ProductStatus'
        health_incidents:
          nullable: true
          type: array
          description: Details of recent health incidents associated with the institution.
          items:
            $ref: '#/components/schemas/HealthIncident'
      description: |
        The status of an institution is determined by the health of its Item logins, Transactions updates, Investments updates, Liabilities updates, Auth requests, Balance requests, Identity requests, Investments requests, and Liabilities requests. A login attempt is conducted during the initial Item add in Link. If there is not enough traffic to accurately calculate an institution's status, Plaid will return null rather than potentially inaccurate data.

        Institution status is accessible in the Dashboard and via the API using the `/institutions/get_by_id` endpoint with the `include_status` option set to true. Note that institution status is not available in the Sandbox environment.
      x-examples:
        example-1:
          status:
            item_logins:
              status: HEALTHY
              last_status_change: "2019-02-15T15:53:00Z"
              breakdown:
                success: 0.9
                error_plaid: 0.01
                error_institution: 0.09
            transactions_updates:
              status: HEALTHY
              last_status_change: "2019-02-12T08:22:00Z"
              breakdown:
                success: 0.95
                error_plaid: 0.02
                error_institution: 0.03
                refresh_interval: NORMAL
            auth:
              status: HEALTHY
              last_status_change: "2019-02-15T15:53:00Z"
              breakdown:
                success: 0.91
                error_plaid: 0.01
                error_institution: 0.08
            identity:
              status: DEGRADED
              last_status_change: "2019-02-15T15:50:00Z"
              breakdown:
                success: 0.42
                error_plaid: 0.08
                error_institution: 0.5
            investments:
              status: HEALTHY
              last_status_change: "2019-02-15T15:53:00Z"
              breakdown:
                success: 0.89
                error_plaid: 0.02
                error_institution: 0.09
            liabilities:
              status: HEALTHY
              last_status_change: "2019-02-15T15:53:00Z"
              breakdown:
                success: 0.89
                error_plaid: 0.02
                error_institution: 0.09
            investments_updates:
              status: HEALTHY
              last_status_change: "2019-02-12T08:22:00Z"
              breakdown:
                success: 0.95
                error_plaid: 0.02
                error_institution: 0.03
                refresh_interval: NORMAL
            liabilities_updates:
              status: HEALTHY
              last_status_change: "2019-02-12T08:22:00Z"
              breakdown:
                success: 0.95
                error_plaid: 0.02
                error_institution: 0.03
                refresh_interval: NORMAL
    CountryCode:
      type: string
      title: CountryCode
      enum:
      - US
      - GB
      - ES
      - NL
      - FR
      - IE
      - CA
      - DE
      - IT
      - PL
      - DK
      - "NO"
      - SE
      - EE
      - LT
      - LV
      - PT
      - BE
      description: ISO-3166-1 alpha-2 country code standard.
    ConsumerReportPermissiblePurpose:
      x-hidden-from-docs: true
      type: string
      title: ConsumerReportPermissiblePurpose
      enum:
      - ACCOUNT_REVIEW_CREDIT
      - ACCOUNT_REVIEW_NON_CREDIT
      - EMPLOYMENT
      - EXTENSION_OF_CREDIT
      - LEGITIMATE_BUSINESS_NEED_TENANT_SCREENING
      - LEGITIMATE_BUSINESS_NEED_OTHER
      - WRITTEN_INSTRUCTION_PREQUALIFICATION
      - WRITTEN_INSTRUCTION_OTHER
      description: |-
        This enum describes the reason a consumer report is created for

        `ACCOUNT_REVIEW_CREDIT`: In connection with a consumer credit transaction for the review or collection of an account pursuant to FCRA Section 604(a)(3)(A).
        `ACCOUNT_REVIEW_NON_CREDIT`: For a legitimate business need of the information to review a non-credit account provided primarily for personal, family, or household purposes to determine whether the consumer continues to meet the terms of the account pursuant to FCRA Section 604(a)(3)(F)(2).
        `EMPLOYMENT`: For employment purposes pursuant to FCRA 604(a)(3)(B), including hiring, retention and promotion purposes.
        `EXTENSION_OF_CREDIT`: In connection with a credit transaction initiated by and involving the consumer pursuant to FCRA Section 604(a)(3)(A).
        `LEGITIMATE_BUSINESS_NEED_TENANT_SCREENING`: For a legitimate business need in connection with a business transaction initiated by the consumer primarily for personal, family, or household purposes in connection with a property rental assessment pursuant to FCRA Section 604(a)(3)(F)(i).
        `LEGITIMATE_BUSINESS_NEED_OTHER`: For a legitimate business need in connection with a business transaction made primarily for personal, family, or household initiated by the consumer pursuant to FCRA Section 604(a)(3)(F)(i).
        `WRITTEN_INSTRUCTION_PREQUALIFICATION`: In accordance with the written instructions of the consumer pursuant to FCRA Section 604(a)(2), to evaluate an application’s profile to make an offer to the consumer.
        `WRITTEN_INSTRUCTION_OTHER`: In accordance with the written instructions of the consumer pursuant to FCRA Section 604(a)(2), such as when an individual agrees to act as a guarantor or assumes personal liability for a consumer, business, or commercial loan.
    PaymentMeta:
      title: PaymentMeta
      type: object
      additionalProperties: true
      description: |-
        Transaction information specific to inter-bank transfers. If the transaction was not an inter-bank transfer, all fields will be `null`.

        If the `transactions` object was returned by a Transactions endpoint such as `/transactions/sync` or `/transactions/get`, the `payment_meta` key will always appear, but no data elements are guaranteed. If the `transactions` object was returned by an Assets endpoint such as `/asset_report/get/` or `/asset_report/pdf/get`, this field will only appear in an Asset Report with Insights.
      properties:
        reference_number:
          type: string
          description: The transaction reference number supplied by the financial institution.
          nullable: true
        ppd_id:
          type: string
          description: The ACH PPD ID for the payer.
          nullable: true
        payee:
          type: string
          description: For transfers, the party that is receiving the transaction.
          nullable: true
        by_order_of:
          type: string
          description: The party initiating a wire transfer. Will be `null` if the transaction is not a wire transfer.
          nullable: true
        payer:
          type: string
          description: For transfers, the party that is paying the transaction.
          nullable: true
        payment_method:
          type: string
          description: The type of transfer, e.g. 'ACH'
          nullable: true
        payment_processor:
          type: string
          description: The name of the payment processor
          nullable: true
        reason:
          type: string
          description: The payer-supplied description of the transfer.
          nullable: true
      required:
      - reference_number
      - ppd_id
      - payee
      - by_order_of
      - payer
      - payment_method
      - payment_processor
      - reason
    TransactionCode:
      type: string
      title: transaction_code
      description: |-
        An identifier classifying the transaction type.

        This field is only populated for European institutions. For institutions in the US and Canada, this field is set to `null`.

        `adjustment:` Bank adjustment

        `atm:` Cash deposit or withdrawal via an automated teller machine

        `bank charge:` Charge or fee levied by the institution

        `bill payment`: Payment of a bill

        `cash:` Cash deposit or withdrawal

        `cashback:` Cash withdrawal while making a debit card purchase

        `cheque:` Document ordering the payment of money to another person or organization

        `direct debit:` Automatic withdrawal of funds initiated by a third party at a regular interval

        `interest:` Interest earned or incurred

        `purchase:` Purchase made with a debit or credit card

        `standing order:` Payment instructed by the account holder to a third party at a regular interval

        `transfer:` Transfer of money between accounts
      enum:
      - adjustment
      - atm
      - bank charge
      - bill payment
      - cash
      - cashback
      - cheque
      - direct debit
      - interest
      - purchase
      - standing order
      - transfer
      - null
      nullable: true
    Category:
      title: Category
      type: object
      additionalProperties: true
      description: Information describing a transaction category
      properties:
        category_id:
          type: string
          description: An identifying number for the category. `category_id` is a Plaid-specific identifier and does not necessarily correspond to merchant category codes.
        group:
          type: string
          description: '`place` for physical transactions or `special` for other transactions such as bank charges.'
        hierarchy:
          type: array
          description: A hierarchical array of the categories to which this `category_id` belongs.
          items:
            type: string
      required:
      - category_id
      - group
      - hierarchy
    Counterparty:
      type: object
      title: Counterparty
      additionalProperties: true
      description: The counterparty, such as the merchant or financial institution, is extracted by Plaid from the raw description.
      properties:
        name:
          type: string
          description: The name of the counterparty, such as the merchant or the financial institution, as extracted by Plaid from the raw description.
        entity_id:
          type: string
          description: A unique, stable, Plaid-generated ID that maps to the counterparty.
          nullable: true
        type:
          $ref: '#/components/schemas/CounterpartyType'
        website:
          type: string
          description: The website associated with the counterparty.
          nullable: true
        logo_url:
          type: string
          description: The URL of a logo associated with the counterparty, if available. The logo will always be 100×100 pixel PNG file.
          nullable: true
        confidence_level:
          type: string
          description: |-
            A description of how confident we are that the provided counterparty is involved in the transaction.

            `VERY_HIGH`: We recognize this counterparty and we are more than 98% confident that it is involved in this transaction.
            `HIGH`: We recognize this counterparty and we are more than 90% confident that it is involved in this transaction.
            `MEDIUM`: We are moderately confident that this counterparty was involved in this transaction, but some details may differ from our records.
            `LOW`: We didn’t find a matching counterparty in our records, so we are returning a cleansed name parsed out of the request description.
            `UNKNOWN`: We don’t know the confidence level for this counterparty.
          nullable: true
        phone_number:
          type: string
          description: The phone number associated with the primary_counterparty in E. 164 format. If there is a location match (i.e. a street address is returned in the location object), the phone number will be location specific.
          nullable: true
      required:
      - name
      - type
      - logo_url
      - website
      - phone_number
    TransactionCounterparty:
      type: object
      title: Counterparty
      additionalProperties: true
      description: The counterparty, such as the merchant or financial institution, is extracted by Plaid from the raw description.
      properties:
        name:
          type: string
          description: The name of the counterparty, such as the merchant or the financial institution, as extracted by Plaid from the raw description.
        entity_id:
          type: string
          description: A unique, stable, Plaid-generated ID that maps to the counterparty.
          nullable: true
        type:
          $ref: '#/components/schemas/CounterpartyType'
        website:
          type: string
          description: The website associated with the counterparty.
          nullable: true
        logo_url:
          type: string
          description: The URL of a logo associated with the counterparty, if available. The logo will always be 100×100 pixel PNG file.
          nullable: true
        confidence_level:
          type: string
          description: |-
            A description of how confident we are that the provided counterparty is involved in the transaction.

            `VERY_HIGH`: We recognize this counterparty and we are more than 98% confident that it is involved in this transaction.
            `HIGH`: We recognize this counterparty and we are more than 90% confident that it is involved in this transaction.
            `MEDIUM`: We are moderately confident that this counterparty was involved in this transaction, but some details may differ from our records.
            `LOW`: We didn’t find a matching counterparty in our records, so we are returning a cleansed name parsed out of the request description.
            `UNKNOWN`: We don’t know the confidence level for this counterparty.
          nullable: true
      required:
      - name
      - type
      - logo_url
      - website
    CounterpartyType:
      title: CounterpartyType
      description: |-
        The counterparty type.

        `merchant`: a provider of goods or services for purchase
        `financial_institution`: a financial entity (bank, credit union, BNPL, fintech)
        `payment_app`: a transfer or P2P app (e.g. Zelle)
        `marketplace`: a marketplace (e.g DoorDash, Google Play Store)
        `payment_terminal`: a point-of-sale payment terminal (e.g Square, Toast)
        `income_source`: the payer in an income transaction (e.g., an employer, client, or government agency)
      type: string
      enum:
      - merchant
      - financial_institution
      - payment_app
      - marketplace
      - payment_terminal
      - income_source
    PersonalFinanceCategory:
      title: PersonalFinanceCategory
      nullable: true
      type: object
      additionalProperties: true
      description: |-
        Information describing the intent of the transaction. Most relevant for personal finance use cases, but not limited to such use cases.

        See the [`taxonomy CSV file`](https://plaid.com/documents/transactions-personal-finance-category-taxonomy.csv) for a full list of personal finance categories. If you are migrating to personal finance categories from the legacy categories, also refer to the [`migration guide`](https://plaid.com/docs/transactions/pfc-migration/).
      properties:
        primary:
          type: string
          description: A high level category that communicates the broad category of the transaction.
        detailed:
          type: string
          description: A granular category conveying the transaction's intent. This field can also be used as a unique identifier for the category.
        confidence_level:
          type: string
          description: |-
            A description of how confident we are that the provided categories accurately describe the transaction intent.

            `VERY_HIGH`: We are more than 98% confident that this category reflects the intent of the transaction.
            `HIGH`: We are more than 90% confident that this category reflects the intent of the transaction.
            `MEDIUM`: We are moderately confident that this category reflects the intent of the transaction.
            `LOW`: This category may reflect the intent, but there may be other categories that are more accurate.
            `UNKNOWN`: We don’t know the confidence level for this category.
          nullable: true
      required:
      - primary
      - detailed
    UserToken:
      title: UserToken
      type: string
      description: The user token associated with the User data is being requested for.
    AccessToken:
      title: AccessToken
      type: string
      description: The access token associated with the Item data is being requested for.
    AccessTokenNullable:
      nullable: true
      type: string
      description: The access token associated with the Item data is being requested for.
    TransferAccessToken:
      description: The Plaid `access_token` for the account that will be debited or credited.
      type: string
    TransferAccountID:
      type: string
      description: The Plaid `account_id` corresponding to the end-user account that will be debited or credited.
    TransferOriginatorClientID:
      type: string
      nullable: true
      description: Client ID of the customer that owns the Ledger balance. This is so Plaid knows which of your customers to payout or collect funds. Only applicable for [Platform customers](https://plaid.com/docs/transfer/application/#originators-vs-platforms). Do not include if you’re paying out to yourself.
    TransferMigratedFundingAccountIDRequest:
      type: string
      description: Specify the account used to fund the transfer. Should be specified if using legacy funding methods only. If using Plaid Ledger, leave this field blank. Customers can find a list of `funding_account_id`s in the Accounts page of your Plaid Dashboard, under the "Account ID" column. If this field is left blank and you are using legacy funding methods, this will default to the default `funding_account_id` specified during onboarding. Otherwise, Plaid Ledger will be used.
      nullable: true
    TransferUnmigratedFundingAccountIDRequest:
      type: string
      description: Specify the account used to fund the transfer. Customers can find a list of `funding_account_id`s in the Accounts page of your Plaid Dashboard, under the "Account ID" column. If this field is left blank, it will default to the default `funding_account_id` specified during onboarding.
      nullable: true
    TransferLedgerFundingAccountIDRequest:
      type: string
      description: Specify which funding account linked to this Plaid Ledger to use. Customers can find a list of `funding_account_id`s in the Accounts page of your Plaid Dashboard, under the "Account ID" column. If this field is left blank, this will default to the default `funding_account_id` specified during onboarding. If an `originator_client_id` is specified, the `funding_account_id` must belong to the specified originator, and if `funding_account_id` is left blank, the originator's default `funding_account_id` will be used.
      nullable: true
    TransferFundingAccountIDResponse:
      type: string
      description: The id of the funding account to use, available in the Plaid Dashboard. This determines which of your business checking accounts will be credited or debited.
    TransferFundingAccountIDResponseNullable:
      type: string
      description: The id of the associated funding account, available in the Plaid Dashboard. If present, this indicates which of your business checking accounts will be credited or debited.
      nullable: true
    TransferPaymentProfileToken:
      description: The payment profile token associated with the Payment Profile that will be debited or credited. Required if not using `access_token`.
      type: string
      x-hidden-from-docs: true
    BankTransferAccessToken:
      description: The Plaid `access_token` for the account that will be debited or credited.
      type: string
    APISecret:
      title: APISecret
      type: string
      description: Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
    APIClientID:
      title: ClientID
      type: string
      description: Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
    ScreeningStatusUpdatedWebhook:
      title: ScreeningStatusUpdatedWebhook
      description: Fired when an individual screening status has changed, which can occur manually via the dashboard or during ongoing monitoring.
      type: object
      additionalProperties: true
      properties:
        webhook_type:
          type: string
          description: '`SCREENING`'
        webhook_code:
          type: string
          description: '`STATUS_UPDATED`'
        screening_id:
          type: string
          description: The ID of the associated screening.
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - screening_id
      - environment
      x-examples:
        example-1:
          webhook_type: SCREENING
          webhook_code: STATUS_UPDATED
          screening_id: scr_52xR9LKo77r1Np
          environment: production
    EntityScreeningStatusUpdatedWebhook:
      title: EntityScreeningStatusUpdatedWebhook
      description: Fired when an entity screening status has changed, which can occur manually via the dashboard or during ongoing monitoring.
      type: object
      additionalProperties: true
      properties:
        webhook_type:
          type: string
          description: '`ENTITY_SCREENING`'
        webhook_code:
          type: string
          description: '`STATUS_UPDATED`'
        screening_id:
          type: string
          description: The ID of the associated screening.
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - screening_id
      - environment
      x-examples:
        example-1:
          webhook_type: ENTITY_SCREENING
          webhook_code: STATUS_UPDATED
          screening_id: entscr_52xR9LKo77r1Np
          environment: production
    BeaconUserStatusUpdatedWebhook:
      title: BeaconUserStatusUpdatedWebhook
      description: Fired when a Beacon User status has changed, which can occur manually via the dashboard or when information is reported to the Beacon network.
      type: object
      additionalProperties: true
      properties:
        webhook_type:
          type: string
          description: '`BEACON`'
        webhook_code:
          type: string
          description: '`USER_STATUS_UPDATED`'
        beacon_user_id:
          type: string
          description: The ID of the associated Beacon user.
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - beacon_user_id
      - environment
      x-examples:
        example-1:
          webhook_type: BEACON
          webhook_code: USER_STATUS_UPDATED
          beacon_user_id: becusr_4WciCrtbxF76T8
          environment: production
    BeaconReportCreatedWebhook:
      title: BeaconReportCreatedWebhook
      description: Fired when one of your Beacon Users is first reported to the Beacon network.
      type: object
      additionalProperties: true
      properties:
        webhook_type:
          type: string
          description: '`BEACON`'
        webhook_code:
          type: string
          description: '`REPORT_CREATED`'
        beacon_report_id:
          type: string
          description: The ID of the associated Beacon Report.
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - beacon_report_id
      - environment
      x-examples:
        example-1:
          webhook_type: BEACON
          webhook_code: REPORT_CREATED
          beacon_report_id: becrpt_2zugxV6hWQZG91
          environment: production
    BeaconReportUpdatedWebhook:
      title: BeaconReportUpdatedWebhook
      description: Fired when one of your existing Beacon Reports has been modified or removed from the Beacon Network.
      type: object
      additionalProperties: true
      properties:
        webhook_type:
          type: string
          description: '`BEACON`'
        webhook_code:
          type: string
          description: '`REPORT_UPDATED`'
        beacon_report_id:
          type: string
          description: The ID of the associated Beacon Report.
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - beacon_report_id
      - environment
      x-examples:
        example-1:
          webhook_type: BEACON
          webhook_code: REPORT_UPDATED
          beacon_report_id: becrpt_2zugxV6hWQZG91
          environment: production
    BeaconReportSyndicationCreatedWebhook:
      title: BeaconReportSyndicationCreatedWebhook
      description: Fired when a report created on the Beacon Network matches with one of your Beacon Users.
      type: object
      additionalProperties: true
      properties:
        webhook_type:
          type: string
          description: '`BEACON`'
        webhook_code:
          type: string
          description: '`REPORT_SYNDICATION_CREATED`'
        beacon_report_syndication_id:
          type: string
          description: The ID of the associated Beacon Report Syndication.
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - beacon_report_syndication_id
      - environment
      x-examples:
        example-1:
          webhook_type: BEACON
          webhook_code: REPORT_SYNDICATION_CREATED
          beacon_report_syndication_id: becrsn_eZPgiiv3JH8rfT
          environment: production
    BeaconDuplicateDetectedWebhook:
      title: BeaconDuplicateDetectedWebhook
      description: Fired when a Beacon User created within your organization matches one of your existing users.
      type: object
      additionalProperties: true
      properties:
        webhook_type:
          type: string
          description: '`BEACON`'
        webhook_code:
          type: string
          description: '`DUPLICATE_DETECTED`'
        beacon_duplicate_id:
          type: string
          description: The ID of the associated Beacon Duplicate.
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - beacon_duplicate_id
      - environment
      x-examples:
        example-1:
          webhook_type: BEACON
          webhook_code: DUPLICATE_DETECTED
          beacon_duplicate_id: becdup_erJcFn97r9sugZ
          environment: production
    IdentityVerificationStepUpdatedWebhook:
      title: IdentityVerificationStepUpdatedWebhook
      description: Fired when an end user has completed a step of the Identity Verification process.
      type: object
      additionalProperties: true
      properties:
        webhook_type:
          type: string
          description: '`IDENTITY_VERIFICATION`'
        webhook_code:
          type: string
          description: '`STEP_UPDATED`'
        identity_verification_id:
          type: string
          description: The ID of the associated Identity Verification attempt.
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - identity_verification_id
      - environment
      x-examples:
        example-1:
          webhook_type: IDENTITY_VERIFICATION
          webhook_code: STEP_UPDATED
          identity_verification_id: idv_52xR9LKo77r1Np
          environment: production
    IdentityVerificationRetriedWebhook:
      title: IdentityVerificationRetriedWebhook
      description: Fired when identity verification has been retried, which can be triggered via the dashboard or the API.
      type: object
      additionalProperties: true
      properties:
        webhook_type:
          type: string
          description: '`IDENTITY_VERIFICATION`'
        webhook_code:
          type: string
          description: '`RETRIED`'
        identity_verification_id:
          type: string
          description: The ID of the associated Identity Verification attempt.
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - identity_verification_id
      - environment
      x-examples:
        example-1:
          webhook_type: IDENTITY_VERIFICATION
          webhook_code: RETRIED
          identity_verification_id: idv_52xR9LKo77r1Np
          environment: production
    IdentityVerificationStatusUpdatedWebhook:
      title: IdentityVerificationStatusUpdatedWebhook
      description: Fired when the status of an identity verification has been updated, which can be triggered via the dashboard or the API.
      type: object
      additionalProperties: true
      properties:
        webhook_type:
          type: string
          description: '`IDENTITY_VERIFICATION`'
        webhook_code:
          type: string
          description: '`STATUS_UPDATED`'
        identity_verification_id:
          type: string
          description: The ID of the associated Identity Verification attempt.
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - identity_verification_id
      - environment
      x-examples:
        example-1:
          webhook_type: IDENTITY_VERIFICATION
          webhook_code: STATUS_UPDATED
          identity_verification_id: idv_52xR9LKo77r1Np
          environment: production
    TransactionsRemovedWebhook:
      title: TransactionsRemovedWebhook
      description: |-
        Fired when transaction(s) for an Item are deleted. The deleted transaction IDs are included in the webhook payload. Plaid will typically check for deleted transaction data several times a day.

        This webhook is intended for use with `/transactions/get`; if you are using the newer `/transactions/sync` endpoint, this webhook will still be fired to maintain backwards compatibility, but it is recommended to listen for and respond to the `SYNC_UPDATES_AVAILABLE` webhook instead.
      type: object
      additionalProperties: true
      properties:
        webhook_type:
          type: string
          description: '`TRANSACTIONS`'
        webhook_code:
          type: string
          description: '`TRANSACTIONS_REMOVED`'
        error:
          $ref: '#/components/schemas/PlaidError'
        removed_transactions:
          type: array
          description: An array of `transaction_ids` corresponding to the removed transactions
          items:
            type: string
        item_id:
          $ref: '#/components/schemas/ItemId'
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - removed_transactions
      - item_id
      - environment
      x-examples:
        example-1:
          webhook_type: TRANSACTIONS
          webhook_code: TRANSACTIONS_REMOVED
          item_id: wz666MBjYWTp2PDzzggYhM6oWWmBb
          removed_transactions:
          - yBVBEwrPyJs8GvR77N7QTxnGg6wG74H7dEDN6
          - kgygNvAVPzSX9KkddNdWHaVGRVex1MHm3k9no
          error: null
          environment: production
    ProcessorTransactionsRemovedWebhook:
      title: ProcessorTransactionsRemovedWebhook
      description: |-
        This webhook is only sent to [Plaid processor partners](https://plaid.com/docs/auth/partnerships/).

        Fired when transaction(s) for an Item are deleted. The deleted transaction IDs are included in the webhook payload. Plaid will typically check for deleted transaction data several times a day.

        This webhook is intended for use with `/processor/transactions/get`; if you are using the newer `/processor/transactions/sync` endpoint, this webhook will still be fired to maintain backwards compatibility, but it is recommended to listen for and respond to the `SYNC_UPDATES_AVAILABLE` webhook instead.
      type: object
      additionalProperties: true
      properties:
        webhook_type:
          type: string
          description: '`TRANSACTIONS`'
        webhook_code:
          type: string
          description: '`TRANSACTIONS_REMOVED`'
        error:
          $ref: '#/components/schemas/PlaidError'
        removed_transactions:
          type: array
          description: An array of `transaction_ids` corresponding to the removed transactions
          items:
            type: string
        account_id:
          type: string
          description: The ID of the account.
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - removed_transactions
      - account_id
      - environment
      x-examples:
        example-1:
          webhook_type: TRANSACTIONS
          webhook_code: TRANSACTIONS_REMOVED
          account_id: dVzbVMLjrxTnLjX4G66XUp5GLklm4oiZy88yK
          removed_transactions:
          - yBVBEwrPyJs8GvR77N7QTxnGg6wG74H7dEDN6
          - kgygNvAVPzSX9KkddNdWHaVGRVex1MHm3k9no
          error: null
          environment: production
    DefaultUpdateWebhook:
      title: DefaultUpdateWebhook
      type: object
      additionalProperties: true
      description: |
        Fired when new transaction data is available for an Item. Plaid will typically check for new transaction data several times a day.

        This webhook is intended for use with `/transactions/get`; if you are using the newer `/transactions/sync` endpoint, this webhook will still be fired to maintain backwards compatibility, but it is recommended to listen for and respond to the `SYNC_UPDATES_AVAILABLE` webhook instead.
      x-examples:
        example-1:
          webhook_type: TRANSACTIONS
          webhook_code: DEFAULT_UPDATE
          item_id: wz666MBjYWTp2PDzzggYhM6oWWmBb
          error: null
          new_transactions: 3
          environment: production
      properties:
        webhook_type:
          type: string
          description: '`TRANSACTIONS`'
        webhook_code:
          type: string
          description: '`DEFAULT_UPDATE`'
        error:
          $ref: '#/components/schemas/PlaidError'
        new_transactions:
          type: number
          description: The number of new transactions detected since the last time this webhook was fired.
          title: DefaultUpdateWebhook
        item_id:
          type: string
          description: The `item_id` of the Item the webhook relates to.
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - new_transactions
      - item_id
      - environment
    ProcessorDefaultUpdateWebhook:
      title: ProcessorDefaultUpdateWebhook
      type: object
      additionalProperties: true
      description: |
        This webhook is only sent to [Plaid processor partners](https://plaid.com/docs/auth/partnerships/).

        Fired when new transaction data is available for an Item. Plaid will typically check for new transaction data several times a day.

        This webhook is intended for use with `/processor/transactions/get`; if you are using the newer `/processor/transactions/sync` endpoint, this webhook will still be fired to maintain backwards compatibility, but it is recommended to listen for and respond to the `SYNC_UPDATES_AVAILABLE` webhook instead.
      x-examples:
        example-1:
          webhook_type: TRANSACTIONS
          webhook_code: DEFAULT_UPDATE
          account_id: dVzbVMLjrxTnLjX4G66XUp5GLklm4oiZy88yK
          error: null
          new_transactions: 3
          environment: production
      properties:
        webhook_type:
          type: string
          description: '`TRANSACTIONS`'
        webhook_code:
          type: string
          description: '`DEFAULT_UPDATE`'
        error:
          $ref: '#/components/schemas/PlaidError'
        new_transactions:
          type: number
          description: The number of new transactions detected since the last time this webhook was fired.
          title: DefaultUpdateWebhook
        account_id:
          type: string
          description: The ID of the account.
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - new_transactions
      - account_id
      - environment
    SyncUpdatesAvailableWebhook:
      title: SyncUpdatesAvailableWebhook
      description: |-
        Fired when an Item's transactions change. This can be due to any event resulting in new changes, such as an initial 30-day transactions fetch upon the initialization of an Item with transactions, the backfill of historical transactions that occurs shortly after, or when changes are populated from a regularly-scheduled transactions update job. It is recommended to listen for the `SYNC_UPDATES_AVAILABLE` webhook when using the `/transactions/sync` endpoint. Note that when using `/transactions/sync` the older webhooks `INITIAL_UPDATE`, `HISTORICAL_UPDATE`, `DEFAULT_UPDATE`, and `TRANSACTIONS_REMOVED`, which are intended for use with `/transactions/get`, will also continue to be sent in order to maintain backwards compatibility. It is not necessary to listen for and respond to those webhooks when using `/transactions/sync`.

        After receipt of this webhook, the new changes can be fetched for the Item from `/transactions/sync`.

        Note that to receive this webhook for an Item, `/transactions/sync` must have been called at least once on that Item. This means that, unlike the `INITIAL_UPDATE` and `HISTORICAL_UPDATE` webhooks, it will not fire immediately upon Item creation. If `/transactions/sync` is called on an Item that was *not* initialized with Transactions, the webhook will fire twice: once the first 30 days of transactions data has been fetched, and a second time when all available historical transactions data has been fetched.

        This webhook will fire in the Sandbox environment as it would in Production. It can also be manually triggered in Sandbox by calling `/sandbox/item/fire_webhook`.
      type: object
      additionalProperties: true
      properties:
        webhook_type:
          type: string
          description: '`TRANSACTIONS`'
        webhook_code:
          type: string
          description: '`SYNC_UPDATES_AVAILABLE`'
        item_id:
          $ref: '#/components/schemas/ItemId'
        initial_update_complete:
          type: boolean
          description: Indicates if initial pull information (most recent 30 days of transaction history) is available.
        historical_update_complete:
          type: boolean
          description: Indicates if historical pull information (maximum transaction history requested, up to 2 years) is available.
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - item_id
      - initial_update_complete
      - historical_update_complete
      - environment
      x-examples:
        example-1:
          webhook_type: TRANSACTIONS
          webhook_code: SYNC_UPDATES_AVAILABLE
          item_id: wz666MBjYWTp2PDzzggYhM6oWWmBb
          initial_update_complete: true
          historical_update_complete: false
          environment: production
    ProcessorSyncUpdatesAvailableWebhook:
      title: ProcessorSyncUpdatesAvailableWebhook
      description: |-
        This webhook is only sent to [Plaid processor partners](https://plaid.com/docs/auth/partnerships/).

        Fired when an Item's transactions change. This can be due to any event resulting in new changes, such as an initial 30-day transactions fetch upon the initialization of an Item with transactions, the backfill of historical transactions that occurs shortly after, or when changes are populated from a regularly-scheduled transactions update job. It is recommended to listen for the `SYNC_UPDATES_AVAILABLE` webhook when using the `/processor/transactions/sync` endpoint. Note that when using `/processor/transactions/sync` the older webhooks `INITIAL_UPDATE`, `HISTORICAL_UPDATE`, `DEFAULT_UPDATE`, and `TRANSACTIONS_REMOVED`, which are intended for use with `/processor/transactions/get`, will also continue to be sent in order to maintain backwards compatibility. It is not necessary to listen for and respond to those webhooks when using `/processor/transactions/sync`.

        After receipt of this webhook, the new changes can be fetched for the Item from `/processor/transactions/sync`.

        Note that to receive this webhook for an Item, `/processor/transactions/sync` must have been called at least once on that Item. This means that, unlike the `INITIAL_UPDATE` and `HISTORICAL_UPDATE` webhooks, it will not fire immediately upon Item creation. If `/transactions/sync` is called on an Item that was *not* initialized with Transactions, the webhook will fire twice: once the first 30 days of transactions data has been fetched, and a second time when all available historical transactions data has been fetched.

        This webhook will typically not fire in the Sandbox environment, due to the lack of dynamic transactions data. To test this webhook in Sandbox, call `/sandbox/item/fire_webhook`.
      type: object
      additionalProperties: true
      properties:
        webhook_type:
          type: string
          description: '`TRANSACTIONS`'
        webhook_code:
          type: string
          description: '`SYNC_UPDATES_AVAILABLE`'
        account_id:
          type: string
          description: The ID of the account.
        initial_update_complete:
          type: boolean
          description: Indicates if initial pull information is available.
        historical_update_complete:
          type: boolean
          description: Indicates if historical pull information is available.
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - account_id
      - initial_update_complete
      - historical_update_complete
      - environment
      x-examples:
        example-1:
          webhook_type: TRANSACTIONS
          webhook_code: SYNC_UPDATES_AVAILABLE
          account_id: dVzbVMLjrxTnLjX4G66XUp5GLklm4oiZy88yK
          initial_update_complete: true
          historical_update_complete: false
          environment: production
    RecurringTransactionsUpdateWebhook:
      title: RecurringTransactionsUpdateWebhook
      description: |-
        Fired when recurring transactions data is updated. This includes when a new recurring stream is detected or when a new transaction is added to an existing recurring stream. The `RECURRING_TRANSACTIONS_UPDATE` webhook will also fire when one or more attributes of the recurring stream changes, which is usually a result of the addition, update, or removal of transactions to the stream.

        After receipt of this webhook, the updated data can be fetched from `/transactions/recurring/get`.
      type: object
      additionalProperties: true
      properties:
        webhook_type:
          type: string
          description: '`TRANSACTIONS`'
        webhook_code:
          type: string
          description: '`RECURRING_TRANSACTIONS_UPDATE`'
        item_id:
          $ref: '#/components/schemas/ItemId'
        account_ids:
          type: array
          description: A list of `account_ids` for accounts that have new or updated recurring transactions data.
          items:
            type: string
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - item_id
      - account_ids
      - environment
      x-examples:
        example-1:
          webhook_type: TRANSACTIONS
          webhook_code: RECURRING_TRANSACTIONS_UPDATE
          item_id: wz666MBjYWTp2PDzzggYhM6oWWmBb
          account_ids:
          - lPNjeW1nR6CDn5okmGQ6hEpMo4lLNoSrzqDje
          - lPNjeW1nR6CDn5okmGQ6hEpMo4lLNoSrzqDff
          environment: production
    ProcessorRecurringTransactionsUpdateWebhook:
      title: ProcessorRecurringTransactionsUpdateWebhook
      description: |-
        This webhook is only sent to [Plaid processor partners](https://plaid.com/docs/auth/partnerships/).

        Fired when recurring transactions data is updated. This includes when a new recurring stream is detected or when a new transaction is added to an existing recurring stream. The `RECURRING_TRANSACTIONS_UPDATE` webhook will also fire when one or more attributes of the recurring stream changes, which is usually a result of the addition, update, or removal of transactions to the stream.

        After receipt of this webhook, the updated data can be fetched from `/processor/transactions/recurring/get`.
      type: object
      additionalProperties: true
      properties:
        webhook_type:
          type: string
          description: '`TRANSACTIONS`'
        webhook_code:
          type: string
          description: '`RECURRING_TRANSACTIONS_UPDATE`'
        account_id:
          type: string
          description: The ID of the account.
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - account_id
      - environment
      x-examples:
        example-1:
          webhook_type: TRANSACTIONS
          webhook_code: RECURRING_TRANSACTIONS_UPDATE
          account_id: dVzbVMLjrxTnLjX4G66XUp5GLklm4oiZy88yK
          environment: production
    IdentityDefaultUpdateWebhook:
      x-examples:
        example-1:
          webhook_type: IDENTITY
          webhook_code: DEFAULT_UPDATE
          item_id: wz666MBjYWTp2PDzzggYhM6oWWmBb
          account_ids_with_updated_identity:
            BxBXxLj1m4HMXBm9WZZmCWVbPjX16EHwv99vp:
            - ADDRESSES
          error: null
          environment: production
      title: IdentityDefaultUpdateWebhook
      type: object
      additionalProperties: true
      description: Fired when a change to identity data has been detected on an Item. Items are checked for identity updates every 30-90 days. We recommend that upon receiving this webhook you make another call to `/identity/get` to fetch the user's latest identity data.
      properties:
        webhook_type:
          type: string
          description: '`IDENTITY`'
        webhook_code:
          type: string
          description: '`DEFAULT_UPDATE`'
        item_id:
          $ref: '#/components/schemas/ItemId'
        account_ids_with_updated_identity:
          $ref: '#/components/schemas/AccountIdsWithUpdatedIdentity'
        error:
          $ref: '#/components/schemas/PlaidError'
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - item_id
      - error
      - account_ids_with_updated_identity
      - environment
    AccountIdsWithUpdatedIdentity:
      title: AccountIdsWithUpdatedIdentity
      type: object
      additionalProperties:
        type: array
        items:
          $ref: '#/components/schemas/IdentityUpdateTypes'
      description: |
        An object with keys of `account_id`'s that are mapped to their respective identity attributes that changed.

        Example: `{ "XMBvvyMGQ1UoLbKByoMqH3nXMj84ALSdE5B58": ["PHONES"] }`
    IdentityUpdateTypes:
      type: string
      description: The possible types of identity data that may have changed.
      enum:
      - PHONES
      - ADDRESSES
      - EMAILS
      - NAMES
    HistoricalUpdateWebhook:
      title: HistoricalUpdateWebhook
      description: |-
        Fired when an Item's historical transaction pull is completed and Plaid has prepared as much historical transaction data as possible for the Item. Once this webhook has been fired, transaction data beyond the most recent 30 days can be fetched for the Item. If [Account Select v2](https://plaid.com/docs/link/customization/#account-select) is enabled, this webhook will also be fired if account selections for the Item are updated, with `new_transactions` set to the number of net new transactions pulled after the account selection update.

        This webhook is intended for use with `/transactions/get`; if you are using the newer `/transactions/sync` endpoint, this webhook will still be fired to maintain backwards compatibility, but it is recommended to listen for and respond to the `SYNC_UPDATES_AVAILABLE` webhook instead.
      type: object
      additionalProperties: true
      properties:
        webhook_type:
          type: string
          description: '`TRANSACTIONS`'
        webhook_code:
          type: string
          description: '`HISTORICAL_UPDATE`'
        error:
          $ref: '#/components/schemas/PlaidError'
        new_transactions:
          type: number
          description: The number of new, unfetched transactions available
        item_id:
          $ref: '#/components/schemas/ItemId'
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - new_transactions
      - item_id
      - environment
      x-examples:
        example-1:
          webhook_type: TRANSACTIONS
          webhook_code: HISTORICAL_UPDATE
          item_id: wz666MBjYWTp2PDzzggYhM6oWWmBb
          error: null
          new_transactions: 231
          environment: production
    ProcessorHistoricalUpdateWebhook:
      title: ProcessorHistoricalUpdateWebhook
      description: |-
        This webhook is only sent to [Plaid processor partners](https://plaid.com/docs/auth/partnerships/).

        Fired when an Item's historical transaction pull is completed and Plaid has prepared as much historical transaction data as possible for the Item. Once this webhook has been fired, transaction data beyond the most recent 30 days can be fetched for the Item. If [Account Select v2](https://plaid.com/docs/link/customization/#account-select) is enabled, this webhook will also be fired if account selections for the Item are updated, with `new_transactions` set to the number of net new transactions pulled after the account selection update.

        This webhook is intended for use with `/processor/transactions/get`; if you are using the newer `/processor/transactions/sync` endpoint, this webhook will still be fired to maintain backwards compatibility, but it is recommended to listen for and respond to the `SYNC_UPDATES_AVAILABLE` webhook instead.
      type: object
      additionalProperties: true
      properties:
        webhook_type:
          type: string
          description: '`TRANSACTIONS`'
        webhook_code:
          type: string
          description: '`HISTORICAL_UPDATE`'
        error:
          $ref: '#/components/schemas/PlaidError'
        new_transactions:
          type: number
          description: The number of new, unfetched transactions available
        account_id:
          type: string
          description: The ID of the account.
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - new_transactions
      - account_id
      - environment
      x-examples:
        example-1:
          webhook_type: TRANSACTIONS
          webhook_code: HISTORICAL_UPDATE
          account_id: dVzbVMLjrxTnLjX4G66XUp5GLklm4oiZy88yK
          error: null
          new_transactions: 231
          environment: production
    InitialUpdateWebhook:
      title: InitialUpdateWebhook
      description: |-
        Fired when an Item's initial transaction pull is completed. Once this webhook has been fired, transaction data for the most recent 30 days can be fetched for the Item. If [Account Select v2](https://plaid.com/docs/link/customization/#account-select) is enabled, this webhook will also be fired if account selections for the Item are updated, with `new_transactions` set to the number of net new transactions pulled after the account selection update.

        This webhook is intended for use with `/transactions/get`; if you are using the newer `/transactions/sync` endpoint, this webhook will still be fired to maintain backwards compatibility, but it is recommended to listen for and respond to the `SYNC_UPDATES_AVAILABLE` webhook instead.
      type: object
      additionalProperties: true
      x-examples:
        example-1:
          webhook_type: TRANSACTIONS
          webhook_code: INITIAL_UPDATE
          item_id: wz666MBjYWTp2PDzzggYhM6oWWmBb
          error: null
          new_transactions: 19
          environment: production
      properties:
        webhook_type:
          type: string
          description: '`TRANSACTIONS`'
        webhook_code:
          type: string
          description: '`INITIAL_UPDATE`'
        error:
          type: string
          nullable: true
          description: The error code associated with the webhook.
        new_transactions:
          type: number
          description: The number of new, unfetched transactions available.
        item_id:
          $ref: '#/components/schemas/ItemId'
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - new_transactions
      - item_id
      - environment
    ProcessorInitialUpdateWebhook:
      title: ProcessorInitialUpdateWebhook
      description: |-
        This webhook is only sent to [Plaid processor partners](https://plaid.com/docs/auth/partnerships/).

        Fired when an Item's initial transaction pull is completed. Once this webhook has been fired, transaction data for the most recent 30 days can be fetched for the Item. If [Account Select v2](https://plaid.com/docs/link/customization/#account-select) is enabled, this webhook will also be fired if account selections for the Item are updated, with `new_transactions` set to the number of net new transactions pulled after the account selection update.

        This webhook is intended for use with `/processor/transactions/get`; if you are using the newer `/processor/transactions/sync` endpoint, this webhook will still be fired to maintain backwards compatibility, but it is recommended to listen for and respond to the `SYNC_UPDATES_AVAILABLE` webhook instead.
      type: object
      additionalProperties: true
      x-examples:
        example-1:
          webhook_type: TRANSACTIONS
          webhook_code: INITIAL_UPDATE
          account_id: dVzbVMLjrxTnLjX4G66XUp5GLklm4oiZy88yK
          error: null
          new_transactions: 19
          environment: production
      properties:
        webhook_type:
          type: string
          description: '`TRANSACTIONS`'
        webhook_code:
          type: string
          description: '`INITIAL_UPDATE`'
        error:
          type: string
          nullable: true
          description: The error code associated with the webhook.
        new_transactions:
          type: number
          description: The number of new, unfetched transactions available.
        account_id:
          type: string
          description: The ID of the account.
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - new_transactions
      - account_id
      - environment
    ProcessorTokenWebhookUpdate:
      title: ProcessorTokenWebhookUpdate
      description: |-
        This webhook is only sent to [Plaid processor partners](https://plaid.com/docs/auth/partnerships/).

        Fired when a processor updates the webhook URL for a processor token via `/processor/token/webhook/update`.
      type: object
      additionalProperties: true
      properties:
        webhook_type:
          type: string
          description: '`PROCESSOR_TOKEN`'
        webhook_code:
          type: string
          description: '`WEBHOOK_UPDATE_ACKNOWLEDGED`'
        error:
          $ref: '#/components/schemas/PlaidError'
        account_id:
          type: string
          description: The ID of the account.
        new_webhook_url:
          type: string
          description: The new webhook URL.
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - account_id
      - new_webhook_url
      - environment
      x-examples:
        example-1:
          webhook_type: PROCESSOR_TOKEN
          webhook_code: WEBHOOK_UPDATE_ACKNOWLEDGED
          account_id: dVzbVMLjrxTnLjX4G66XUp5GLklm4oiZy88yK
          new_webhook_url: https://www.example.com
          error: null
          environment: production
    PhoneNumber:
      title: PhoneNumber
      type: object
      additionalProperties: true
      description: A phone number
      properties:
        data:
          type: string
          description: The phone number.
        primary:
          type: boolean
          description: When `true`, identifies the phone number as the primary number on an account.
        type:
          type: string
          enum:
          - home
          - work
          - office
          - mobile
          - mobile1
          - other
          description: The type of phone number.
      required:
      - data
      - primary
      - type
    Email:
      title: Email
      type: object
      additionalProperties: true
      properties:
        data:
          type: string
          description: The email address.
        primary:
          type: boolean
          description: When `true`, identifies the email address as the primary email on an account.
        type:
          type: string
          enum:
          - primary
          - secondary
          - other
          description: The type of email account as described by the financial institution.
      required:
      - data
      - primary
      - type
      description: An object representing an email address
    Address:
      title: Address
      type: object
      additionalProperties: true
      description: A physical mailing address.
      properties:
        data:
          $ref: '#/components/schemas/AddressData'
        primary:
          type: boolean
          description: When `true`, identifies the address as the primary address on an account.
      required:
      - data
    AddressNullable:
      description: A physical mailing address.
      nullable: true
      allOf:
      - $ref: '#/components/schemas/Address'
      - type: object
        additionalProperties: true
    AddressDataNullable:
      description: Data about the components comprising an address.
      nullable: true
      allOf:
      - $ref: '#/components/schemas/AddressData'
      - type: object
        additionalProperties: true
    AddressDataNullableNoRequiredFields:
      description: Data about the components comprising an address.
      nullable: true
      allOf:
      - $ref: '#/components/schemas/AddressDataNotRequired'
      - type: object
        additionalProperties: true
    AddressData:
      title: AddressData
      type: object
      additionalProperties: true
      description: Data about the components comprising an address.
      properties:
        city:
          type: string
          description: The full city name
          nullable: true
        region:
          type: string
          description: |-
            The region or state. In API versions 2018-05-22 and earlier, this field is called `state`.
            Example: `"NC"`
          nullable: true
        street:
          type: string
          description: |-
            The full street address
            Example: `"564 Main Street, APT 15"`
        postal_code:
          type: string
          description: The postal code. In API versions 2018-05-22 and earlier, this field is called `zip`.
          nullable: true
        country:
          type: string
          description: The ISO 3166-1 alpha-2 country code
          nullable: true
      required:
      - city
      - region
      - street
      - postal_code
      - country
    AddressDataNotRequired:
      title: AddressData
      type: object
      additionalProperties: true
      description: Data about the components comprising an address.
      properties:
        city:
          type: string
          description: The full city name
          nullable: true
        region:
          type: string
          description: |-
            The region or state. In API versions 2018-05-22 and earlier, this field is called `state`.
            Example: `"NC"`
          nullable: true
        street:
          type: string
          description: |-
            The full street address
            Example: `"564 Main Street, APT 15"`
        postal_code:
          type: string
          description: The postal code. In API versions 2018-05-22 and earlier, this field is called `zip`.
          nullable: true
        country:
          type: string
          description: The ISO 3166-1 alpha-2 country code
          nullable: true
    ProcessorToken:
      title: ProcessorToken
      type: string
      description: 'The processor token obtained from the Plaid integration partner. Processor tokens are in the format: `processor-<environment>-<identifier>`'
    Owner:
      title: Owner
      type: object
      additionalProperties: true
      description: Data returned from the financial institution about the owner or owners of an account. Only the `names` array must be non-empty.
      properties:
        names:
          description: |-
            A list of names associated with the account by the financial institution. In the case of a joint account, Plaid will make a best effort to report the names of all account holders.

            If an Item contains multiple accounts with different owner names, some institutions will report all names associated with the Item in each account's `names` array.
          type: array
          items:
            type: string
        phone_numbers:
          type: array
          description: A list of phone numbers associated with the account by the financial institution. May be an empty array if no relevant information is returned from the financial institution.
          items:
            $ref: '#/components/schemas/PhoneNumber'
        emails:
          type: array
          description: A list of email addresses associated with the account by the financial institution. May be an empty array if no relevant information is returned from the financial institution.
          items:
            $ref: '#/components/schemas/Email'
        addresses:
          type: array
          description: Data about the various addresses associated with the account by the financial institution. May be an empty array if no relevant information is returned from the financial institution.
          items:
            $ref: '#/components/schemas/Address'
        document_id:
          type: string
          description: document_id is the id of the document that this identity belongs to
          nullable: true
          x-hidden-from-docs: true
      required:
      - names
      - phone_numbers
      - emails
      - addresses
    OwnerOverride:
      title: OwnerOverride
      type: object
      additionalProperties: true
      description: Data about the owner or owners of an account. Any fields not specified will be filled in with default Sandbox information.
      properties:
        names:
          description: A list of names associated with the account by the financial institution. These should always be the names of individuals, even for business accounts. Note that the same name data will be used for all accounts associated with an Item.
          type: array
          items:
            type: string
        phone_numbers:
          type: array
          description: A list of phone numbers associated with the account.
          items:
            $ref: '#/components/schemas/PhoneNumber'
        emails:
          type: array
          description: A list of email addresses associated with the account.
          items:
            $ref: '#/components/schemas/Email'
        addresses:
          type: array
          description: Data about the various addresses associated with the account.
          items:
            $ref: '#/components/schemas/Address'
      required:
      - names
      - phone_numbers
      - emails
      - addresses
    LiabilitiesObject:
      title: LiabilitiesObject
      type: object
      additionalProperties: true
      description: An object containing liability accounts
      properties:
        credit:
          type: array
          description: The credit accounts returned.
          nullable: true
          items:
            $ref: '#/components/schemas/CreditCardLiability'
        mortgage:
          description: The mortgage accounts returned.
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/MortgageLiability'
        student:
          description: The student loan accounts returned.
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/StudentLoan'
      required:
      - credit
      - mortgage
      - student
    StudentLoan:
      title: StudentLoan
      type: object
      additionalProperties: true
      description: Contains details about a student loan account
      properties:
        account_id:
          type: string
          description: The ID of the account that this liability belongs to.
          nullable: true
        account_number:
          type: string
          description: The account number of the loan. For some institutions, this may be a masked version of the number (e.g., the last 4 digits instead of the entire number).
          nullable: true
        disbursement_dates:
          description: The dates on which loaned funds were disbursed or will be disbursed. These are often in the past. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).
          type: array
          nullable: true
          items:
            type: string
            format: date
        expected_payoff_date:
          type: string
          format: date
          description: The date when the student loan is expected to be paid off. Availability for this field is limited. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).
          nullable: true
        guarantor:
          type: string
          description: The guarantor of the student loan.
          nullable: true
        interest_rate_percentage:
          description: The interest rate on the loan as a percentage.
          type: number
          format: double
        is_overdue:
          description: '`true` if a payment is currently overdue. Availability for this field is limited.'
          type: boolean
          nullable: true
        last_payment_amount:
          description: The amount of the last payment.
          type: number
          format: double
          nullable: true
        last_payment_date:
          type: string
          format: date
          description: The date of the last payment. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).
          nullable: true
        last_statement_issue_date:
          type: string
          format: date
          description: The date of the last statement. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).
          nullable: true
        loan_name:
          type: string
          description: The type of loan, e.g., "Consolidation Loans".
          nullable: true
        loan_status:
          $ref: '#/components/schemas/StudentLoanStatus'
        minimum_payment_amount:
          description: |-
            The minimum payment due for the next billing cycle. There are some exceptions:
            Some institutions require a minimum payment across all loans associated with an account number. Our API presents that same minimum payment amount on each loan. The institutions that do this are: Great Lakes ( `ins_116861`), Firstmark (`ins_116295`), Commonbond Firstmark Services (`ins_116950`), Nelnet (`ins_116528`), EdFinancial Services (`ins_116304`), Granite State (`ins_116308`), and Oklahoma Student Loan Authority (`ins_116945`).
            Firstmark (`ins_116295` ) and Navient (`ins_116248`) will display as $0 if there is an autopay program in effect.
          type: number
          format: double
          nullable: true
        next_payment_due_date:
          type: string
          format: date
          description: The due date for the next payment. The due date is `null` if a payment is not expected. A payment is not expected if `loan_status.type` is `deferment`, `in_school`, `consolidated`, `paid in full`, or `transferred`. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).
          nullable: true
        origination_date:
          type: string
          format: date
          description: |
            The date on which the loan was initially lent. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).
          nullable: true
        origination_principal_amount:
          description: The original principal balance of the loan.
          type: number
          format: double
          nullable: true
        outstanding_interest_amount:
          description: The total dollar amount of the accrued interest balance. For Sallie Mae ( `ins_116944`), this amount is included in the current balance of the loan, so this field will return as `null`.
          type: number
          format: double
          nullable: true
        payment_reference_number:
          type: string
          description: The relevant account number that should be used to reference this loan for payments. In the majority of cases, `payment_reference_number` will match `account_number,` but in some institutions, such as Great Lakes (`ins_116861`), it will be different.
          nullable: true
        pslf_status:
          $ref: '#/components/schemas/PSLFStatus'
        repayment_plan:
          $ref: '#/components/schemas/StudentRepaymentPlan'
        sequence_number:
          type: string
          description: The sequence number of the student loan. Heartland ECSI (`ins_116948`) does not make this field available.
          nullable: true
        servicer_address:
          $ref: '#/components/schemas/ServicerAddressData'
        ytd_interest_paid:
          description: The year to date (YTD) interest paid. Availability for this field is limited.
          type: number
          format: double
          nullable: true
        ytd_principal_paid:
          description: The year to date (YTD) principal paid. Availability for this field is limited.
          type: number
          format: double
          nullable: true
      required:
      - account_id
      - account_number
      - disbursement_dates
      - expected_payoff_date
      - guarantor
      - interest_rate_percentage
      - is_overdue
      - last_payment_amount
      - last_payment_date
      - last_statement_issue_date
      - loan_name
      - loan_status
      - minimum_payment_amount
      - next_payment_due_date
      - origination_date
      - origination_principal_amount
      - outstanding_interest_amount
      - payment_reference_number
      - pslf_status
      - repayment_plan
      - sequence_number
      - servicer_address
      - ytd_interest_paid
      - ytd_principal_paid
    CreditCardLiability:
      title: CreditCardLiability
      type: object
      additionalProperties: true
      description: An object representing a credit card account.
      properties:
        account_id:
          type: string
          description: The ID of the account that this liability belongs to.
          nullable: true
        aprs:
          type: array
          description: The various interest rates that apply to the account. APR information is not provided by all card issuers; if APR data is not available, this array will be empty.
          items:
            $ref: '#/components/schemas/APR'
        is_overdue:
          description: true if a payment is currently overdue. Availability for this field is limited.
          type: boolean
          nullable: true
        last_payment_amount:
          description: The amount of the last payment.
          type: number
          format: double
          nullable: true
        last_payment_date:
          type: string
          format: date
          nullable: true
          description: The date of the last payment. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD). Availability for this field is limited.
        last_statement_issue_date:
          type: string
          format: date
          description: The date of the last statement. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).
          nullable: true
        last_statement_balance:
          description: The total amount owed as of the last statement issued
          type: number
          format: double
          nullable: true
        minimum_payment_amount:
          description: The minimum payment due for the next billing cycle.
          type: number
          format: double
          nullable: true
        next_payment_due_date:
          type: string
          format: date
          description: The due date for the next payment. The due date is `null` if a payment is not expected. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).
          nullable: true
      required:
      - account_id
      - aprs
      - is_overdue
      - last_payment_amount
      - last_payment_date
      - last_statement_issue_date
      - last_statement_balance
      - minimum_payment_amount
      - next_payment_due_date
    MortgageLiability:
      title: MortgageLiability
      type: object
      additionalProperties: true
      description: Contains details about a mortgage account.
      properties:
        account_id:
          type: string
          description: The ID of the account that this liability belongs to.
        account_number:
          type: string
          description: The account number of the loan.
        current_late_fee:
          description: The current outstanding amount charged for late payment.
          type: number
          format: double
          nullable: true
        escrow_balance:
          type: number
          format: double
          description: Total amount held in escrow to pay taxes and insurance on behalf of the borrower.
          nullable: true
        has_pmi:
          type: boolean
          description: Indicates whether the borrower has private mortgage insurance in effect.
          nullable: true
        has_prepayment_penalty:
          description: Indicates whether the borrower will pay a penalty for early payoff of mortgage.
          type: boolean
          nullable: true
        interest_rate:
          $ref: '#/components/schemas/MortgageInterestRate'
        last_payment_amount:
          description: The amount of the last payment.
          type: number
          format: double
          nullable: true
        last_payment_date:
          type: string
          format: date
          description: The date of the last payment. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).
          nullable: true
        loan_type_description:
          description: Description of the type of loan, for example `conventional`, `fixed`, or `variable`. This field is provided directly from the loan servicer and does not have an enumerated set of possible values.
          type: string
          nullable: true
        loan_term:
          description: Full duration of mortgage as at origination (e.g. `10 year`).
          type: string
          nullable: true
        maturity_date:
          type: string
          format: date
          description: Original date on which mortgage is due in full. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).
          nullable: true
        next_monthly_payment:
          type: number
          format: double
          description: The amount of the next payment.
          nullable: true
        next_payment_due_date:
          description: The due date for the next payment. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).
          type: string
          format: date
          nullable: true
        origination_date:
          description: The date on which the loan was initially lent. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).
          type: string
          format: date
          nullable: true
        origination_principal_amount:
          type: number
          format: double
          description: The original principal balance of the mortgage.
          nullable: true
        past_due_amount:
          type: number
          format: double
          description: Amount of loan (principal + interest) past due for payment.
          nullable: true
        property_address:
          $ref: '#/components/schemas/MortgagePropertyAddress'
        ytd_interest_paid:
          description: The year to date (YTD) interest paid.
          type: number
          format: double
          nullable: true
        ytd_principal_paid:
          type: number
          format: double
          description: The YTD principal paid.
          nullable: true
      required:
      - account_id
      - account_number
      - current_late_fee
      - escrow_balance
      - has_pmi
      - has_prepayment_penalty
      - interest_rate
      - last_payment_amount
      - last_payment_date
      - loan_type_description
      - loan_term
      - maturity_date
      - next_monthly_payment
      - next_payment_due_date
      - origination_date
      - origination_principal_amount
      - past_due_amount
      - property_address
      - ytd_interest_paid
      - ytd_principal_paid
    MortgageInterestRate:
      title: MortgageInterestRate
      type: object
      additionalProperties: true
      description: Object containing metadata about the interest rate for the mortgage.
      properties:
        percentage:
          type: number
          format: double
          description: Percentage value (interest rate of current mortgage, not APR) of interest payable on a loan.
          nullable: true
        type:
          type: string
          description: The type of interest charged (fixed or variable).
          nullable: true
      required:
      - percentage
      - type
    MortgagePropertyAddress:
      title: MortgagePropertyAddress
      type: object
      additionalProperties: true
      description: Object containing fields describing property address.
      properties:
        city:
          type: string
          description: The city name.
          nullable: true
        country:
          type: string
          description: The ISO 3166-1 alpha-2 country code.
          nullable: true
        postal_code:
          type: string
          description: The five or nine digit postal code.
          nullable: true
        region:
          type: string
          description: The region or state (example "NC").
          nullable: true
        street:
          type: string
          description: The full street address (example "564 Main Street, Apt 15").
          nullable: true
      required:
      - city
      - country
      - postal_code
      - region
      - street
    StudentLoanStatus:
      title: StudentLoanStatus
      type: object
      additionalProperties: true
      description: An object representing the status of the student loan
      properties:
        end_date:
          type: string
          format: date
          description: |
            The date until which the loan will be in its current status. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).
          nullable: true
        type:
          type: string
          enum:
          - cancelled
          - charged off
          - claim
          - consolidated
          - deferment
          - delinquent
          - discharged
          - extension
          - forbearance
          - in grace
          - in military
          - in school
          - not fully disbursed
          - other
          - paid in full
          - refunded
          - repayment
          - transferred
          description: The status type of the student loan
          nullable: true
      required:
      - end_date
      - type
    StudentRepaymentPlan:
      title: StudentRepaymentPlan
      type: object
      additionalProperties: true
      description: An object representing the repayment plan for the student loan
      properties:
        description:
          type: string
          nullable: true
          description: The description of the repayment plan as provided by the servicer.
        type:
          type: string
          nullable: true
          enum:
          - extended graduated
          - extended standard
          - graduated
          - income-contingent repayment
          - income-based repayment
          - interest-only
          - other
          - pay as you earn
          - revised pay as you earn
          - standard
          - saving on a valuable education
          - null
          description: The type of the repayment plan.
      required:
      - description
      - type
    PSLFStatus:
      title: PSLFStatus
      type: object
      additionalProperties: true
      description: 'Information about the student''s eligibility in the Public Service Loan Forgiveness program. This is only returned if the institution is FedLoan (`ins_116527`). '
      properties:
        estimated_eligibility_date:
          type: string
          format: date
          description: The estimated date borrower will have completed 120 qualifying monthly payments. Returned in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).
          nullable: true
        payments_made:
          type: integer
          description: The number of qualifying payments that have been made.
          nullable: true
        payments_remaining:
          type: integer
          description: The number of qualifying payments remaining.
          nullable: true
      required:
      - estimated_eligibility_date
      - payments_made
      - payments_remaining
    ServicerAddressData:
      title: ServicerAddressData
      type: object
      additionalProperties: true
      description: The address of the student loan servicer. This is generally the remittance address to which payments should be sent.
      properties:
        city:
          type: string
          description: The full city name
          nullable: true
        region:
          type: string
          description: |-
            The region or state
            Example: `"NC"`
          nullable: true
        street:
          type: string
          description: |-
            The full street address
            Example: `"564 Main Street, APT 15"`
          nullable: true
        postal_code:
          type: string
          description: The postal code
          nullable: true
        country:
          type: string
          description: The ISO 3166-1 alpha-2 country code
          nullable: true
      required:
      - city
      - region
      - street
      - postal_code
      - country
    APR:
      title: APR
      type: object
      additionalProperties: true
      description: Information about the APR on the account.
      properties:
        apr_percentage:
          type: number
          format: double
          description: |
            Annual Percentage Rate applied.
        apr_type:
          type: string
          enum:
          - balance_transfer_apr
          - cash_apr
          - purchase_apr
          - special
          description: The type of balance to which the APR applies.
        balance_subject_to_apr:
          type: number
          format: double
          description: Amount of money that is subjected to the APR if a balance was carried beyond payment due date. How it is calculated can vary by card issuer. It is often calculated as an average daily balance.
          nullable: true
        interest_charge_amount:
          type: number
          format: double
          description: Amount of money charged due to interest from last statement.
          nullable: true
      required:
      - apr_percentage
      - apr_type
      - balance_subject_to_apr
      - interest_charge_amount
    AuthMetadata:
      title: AuthMetadata
      type: object
      additionalProperties: true
      description: Metadata that captures information about the Auth features of an institution.
      nullable: true
      properties:
        supported_methods:
          $ref: '#/components/schemas/AuthSupportedMethods'
      required:
      - supported_methods
    AuthSupportedMethods:
      title: AuthSupportedMethods
      type: object
      additionalProperties: true
      description: Metadata specifically related to which auth methods an institution supports.
      nullable: true
      properties:
        instant_auth:
          type: boolean
          description: Indicates if instant auth is supported.
        instant_match:
          type: boolean
          description: Indicates if instant match is supported.
        automated_micro_deposits:
          type: boolean
          description: Indicates if automated microdeposits are supported.
        instant_micro_deposits:
          type: boolean
          description: Indicates if instant microdeposits are supported.
      required:
      - instant_auth
      - instant_match
      - automated_micro_deposits
      - instant_micro_deposits
    PaymentInitiationMetadata:
      title: PaymentInitiationMetadata
      type: object
      additionalProperties: true
      description: Metadata that captures what specific payment configurations an institution supports when making Payment Initiation requests.
      nullable: true
      properties:
        supports_international_payments:
          type: boolean
          description: Indicates whether the institution supports payments from a different country.
        supports_sepa_instant:
          type: boolean
          description: Indicates whether the institution supports SEPA Instant payments.
        maximum_payment_amount:
          $ref: '#/components/schemas/PaymentInitiationMaximumPaymentAmount'
        supports_refund_details:
          type: boolean
          description: Indicates whether the institution supports returning refund details when initiating a payment.
        standing_order_metadata:
          $ref: '#/components/schemas/PaymentInitiationStandingOrderMetadata'
      required:
      - supports_international_payments
      - supports_sepa_instant
      - maximum_payment_amount
      - supports_refund_details
      - standing_order_metadata
    PaymentInitiationMaximumPaymentAmount:
      type: object
      description: |
        A mapping of currency to maximum payment amount (denominated in the smallest unit of currency) supported by the institution.

        Example: `{"GBP": "10000"}`
      additionalProperties:
        type: string
    PaymentInitiationStandingOrderMetadata:
      title: PaymentInitiationStandingOrderMetadata
      type: object
      additionalProperties: true
      description: Metadata specifically related to valid Payment Initiation standing order configurations for the institution.
      nullable: true
      properties:
        supports_standing_order_end_date:
          type: boolean
          description: Indicates whether the institution supports closed-ended standing orders by providing an end date.
        supports_standing_order_negative_execution_days:
          type: boolean
          description: This is only applicable to `MONTHLY` standing orders. Indicates whether the institution supports negative integers (-1 to -5) for setting up a `MONTHLY` standing order relative to the end of the month.
        valid_standing_order_intervals:
          type: array
          description: A list of the valid standing order intervals supported by the institution.
          items:
            $ref: '#/components/schemas/PaymentScheduleInterval'
      required:
      - supports_standing_order_end_date
      - supports_standing_order_negative_execution_days
      - valid_standing_order_intervals
    PaymentInitiationAddress:
      title: PaymentInitiationAddress
      type: object
      additionalProperties: true
      description: The optional address of the payment recipient's bank account. Required by most institutions outside of the UK.
      nullable: true
      properties:
        street:
          description: An array of length 1-2 representing the street address where the recipient is located. Maximum of 70 characters.
          type: array
          minItems: 1
          items:
            type: string
            minLength: 1
        city:
          type: string
          description: The city where the recipient is located. Maximum of 35 characters.
          minLength: 1
          maxLength: 35
        postal_code:
          type: string
          description: The postal code where the recipient is located. Maximum of 16 characters.
          minLength: 1
          maxLength: 16
        country:
          type: string
          description: The ISO 3166-1 alpha-2 country code where the recipient is located.
          minLength: 2
          maxLength: 2
      required:
      - street
      - city
      - postal_code
      - country
    ExternalPaymentScheduleBase:
      title: ExternalPaymentScheduleBase
      type: object
      additionalProperties: true
      description: The schedule that the payment will be executed on. If a schedule is provided, the payment is automatically set up as a standing order. If no schedule is specified, the payment will be executed only once.
      nullable: true
      properties:
        interval:
          $ref: '#/components/schemas/PaymentScheduleInterval'
        interval_execution_day:
          description: |-
            The day of the interval on which to schedule the payment.

            If the payment interval is weekly, `interval_execution_day` should be an integer from 1 (Monday) to 7 (Sunday).

            If the payment interval is monthly, `interval_execution_day` should be an integer indicating which day of the month to make the payment on. Integers from 1 to 28 can be used to make a payment on that day of the month. Negative integers from -1 to -5 can be used to make a payment relative to the end of the month. To make a payment on the last day of the month, use -1; to make the payment on the second-to-last day, use -2, and so on.
          type: integer
        start_date:
          format: date
          type: string
          description: |-
            A date in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD). Standing order payments will begin on the first `interval_execution_day` on or after the `start_date`.

            If the first `interval_execution_day` on or after the start date is also the same day that `/payment_initiation/payment/create` was called, the bank *may* make the first payment on that day, but it is not guaranteed to do so.
        end_date:
          format: date
          type: string
          description: |-
            A date in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD). Standing order payments will end on the last `interval_execution_day` on or before the `end_date`.
            If the only `interval_execution_day` between the start date and the end date (inclusive) is also the same day that `/payment_initiation/payment/create` was called, the bank *may* make a payment on that day, but it is not guaranteed to do so.
          nullable: true
        adjusted_start_date:
          format: date
          type: string
          description: The start date sent to the bank after adjusting for holidays or weekends.  Will be provided in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD). If the start date did not require adjustment, this field will be `null`.
          nullable: true
    ExternalPaymentScheduleRequest:
      title: ExternalPaymentScheduleRequest
      description: The schedule that the payment will be executed on. If a schedule is provided, the payment is automatically set up as a standing order. If no schedule is specified, the payment will be executed only once.
      allOf:
      - $ref: '#/components/schemas/ExternalPaymentScheduleBase'
      - type: object
      required:
      - start_date
      - interval
      - interval_execution_day
    PaymentScheduleInterval:
      type: string
      title: PaymentScheduleInterval
      enum:
      - WEEKLY
      - MONTHLY
      description: The frequency interval of the payment.
      minLength: 1
    PaymentScheme:
      type: string
      nullable: true
      enum:
      - null
      - LOCAL_DEFAULT
      - LOCAL_INSTANT
      - SEPA_CREDIT_TRANSFER
      - SEPA_CREDIT_TRANSFER_INSTANT
      description: |-
        Payment scheme. If not specified - the default in the region will be used (e.g. `SEPA_CREDIT_TRANSFER` for EU). Using unsupported values will result in a failed payment.

        `LOCAL_DEFAULT`: The default payment scheme for the selected market and currency will be used.

        `LOCAL_INSTANT`: The instant payment scheme for the selected market and currency will be used (if applicable). Fees may be applied by the institution. If the market does not support an Instant Scheme (e.g. Denmark), the default in the region will be used.

        `SEPA_CREDIT_TRANSFER`: The standard payment to a beneficiary within the SEPA area.

        `SEPA_CREDIT_TRANSFER_INSTANT`: Instant payment within the SEPA area. May involve additional fees and may not be available at some banks.
    WalletPaymentScheme:
      type: string
      nullable: true
      enum:
      - null
      - FASTER_PAYMENTS
      - SEPA_CREDIT_TRANSFER
      - SEPA_CREDIT_TRANSFER_INSTANT
      description: |-
        The payment scheme used to execute this transaction. This is present only for transaction types `PAYOUT` and `REFUND`.

        `FASTER_PAYMENTS`: The standard payment scheme within the UK.

        `SEPA_CREDIT_TRANSFER`: The standard payment to a beneficiary within the SEPA area.

        `SEPA_CREDIT_TRANSFER_INSTANT`: Instant payment to a beneficiary within the SEPA area.
    PaymentInitiationConsentScope:
      type: string
      title: PaymentInitiationConsentScope
      enum:
      - ME_TO_ME
      - EXTERNAL
      description: |-
        Payment consent scope. Defines possible directions for payments made with the given consent.

        `ME_TO_ME`: Allows moving money between accounts owned by the same user.

        `EXTERNAL`: Allows initiating payments from the user's account to third parties.
    ExternalPaymentInitiationConsentOptions:
      type: object
      title: ExternalPaymentInitiationConsentOptions
      description: Additional payment consent options
      nullable: true
      properties:
        request_refund_details:
          type: boolean
          nullable: true
          description: When `true`, Plaid will attempt to request refund details from the payee's financial institution.  Support varies between financial institutions and will not always be available.  If refund details could be retrieved, they will be available in the `/payment_initiation/payment/get` response.
        iban:
          type: string
          nullable: true
          minLength: 15
          maxLength: 34
          description: The International Bank Account Number (IBAN) for the payer's account. Where possible, the end user will be able to set up payment consent using only the specified bank account if provided.
        bacs:
          $ref: '#/components/schemas/PaymentInitiationOptionalRestrictionBacs'
    PaymentInitiationConsentConstraints:
      type: object
      title: PaymentInitiationConsentConstraints
      description: Limitations that will be applied to payments initiated using the payment consent.
      properties:
        valid_date_time:
          $ref: '#/components/schemas/PaymentConsentValidDateTime'
        max_payment_amount:
          $ref: '#/components/schemas/PaymentConsentMaxPaymentAmount'
        periodic_amounts:
          type: array
          description: A list of amount limitations per period of time.
          minItems: 1
          items:
            $ref: '#/components/schemas/PaymentConsentPeriodicAmount'
      required:
      - max_payment_amount
      - periodic_amounts
    PaymentConsentMaxPaymentAmount:
      description: Maximum amount of a single payment initiated using the payment consent.
      allOf:
      - $ref: '#/components/schemas/PaymentAmount'
    ConsentPaymentIdempotencyKey:
      title: ConsentPaymentIdempotencyKey
      type: string
      maxLength: 128
      minLength: 1
      description: |-
        A random key provided by the client, per unique consent payment. Maximum of 128 characters.

        The API supports idempotency for safely retrying requests without accidentally performing the same operation twice. If a request to execute a consent payment fails due to a network connection error, you can retry the request with the same idempotency key to guarantee that only a single payment is created. If the request was successfully processed, it will prevent any payment that uses the same idempotency key, and was received within 24 hours of the first request, from being processed.
    ExternalPaymentOptions:
      title: PaymentOptions
      description: Additional payment options
      type: object
      nullable: true
      properties:
        request_refund_details:
          type: boolean
          nullable: true
          description: When `true`, Plaid will attempt to request refund details from the payee's financial institution.  Support varies between financial institutions and will not always be available.  If refund details could be retrieved, they will be available in the `/payment_initiation/payment/get` response.
        iban:
          type: string
          nullable: true
          minLength: 15
          maxLength: 34
          description: The International Bank Account Number (IBAN) for the payer's account. Where possible, the end user will be able to send payments only from the specified bank account if provided.
        bacs:
          $ref: '#/components/schemas/PaymentInitiationOptionalRestrictionBacs'
        scheme:
          $ref: '#/components/schemas/PaymentScheme'
    ExternalPaymentRefundDetails:
      title: ExternalPaymentRefundDetails
      description: Details about external payment refund
      type: object
      nullable: true
      properties:
        name:
          type: string
          description: The name of the account holder.
        iban:
          type: string
          description: The International Bank Account Number (IBAN) for the account.
          nullable: true
        bacs:
          $ref: '#/components/schemas/RecipientBACSNullable'
      required:
      - name
      - iban
      - bacs
    ExternalPaymentScheduleGet:
      title: ExternalPaymentScheduleGet
      nullable: true
      description: The schedule that the payment will be executed on. If a schedule is provided, the payment is automatically set up as a standing order. If no schedule is specified, the payment will be executed only once.
      allOf:
      - $ref: '#/components/schemas/ExternalPaymentScheduleBase'
      - type: object
      required:
      - adjusted_start_date
      - end_date
      - interval
      - interval_execution_day
      - start_date
    Products:
      title: Products
      enum:
      - assets
      - auth
      - balance
      - identity
      - identity_match
      - investments
      - investments_auth
      - liabilities
      - payment_initiation
      - identity_verification
      - transactions
      - credit_details
      - income
      - income_verification
      - deposit_switch
      - standing_orders
      - transfer
      - employment
      - recurring_transactions
      - signal
      - statements
      description: A list of products that an institution can support. All Items must be initialized with at least one product. The Balance product is always available and does not need to be specified during initialization.
      type: string
    ProductStatus:
      title: ProductStatus
      type: object
      additionalProperties: true
      nullable: true
      description: A representation of the status health of a request type. Auth requests, Balance requests, Identity requests, Investments requests, Liabilities requests, Transactions updates, Investments updates, Liabilities updates, and Item logins each have their own status object.
      properties:
        status:
          type: string
          deprecated: true
          enum:
          - HEALTHY
          - DEGRADED
          - DOWN
          description: |-
            This field is deprecated in favor of the `breakdown` object, which provides more granular institution health data.

            `HEALTHY`: the majority of requests are successful
            `DEGRADED`: only some requests are successful
            `DOWN`: all requests are failing
        last_status_change:
          type: string
          format: date-time
          description: |
            [ISO 8601](https://wikipedia.org/wiki/ISO_8601) formatted timestamp of the last status change for the institution.
        breakdown:
          $ref: '#/components/schemas/ProductStatusBreakdown'
      required:
      - status
      - last_status_change
      - breakdown
    ProductStatusBreakdown:
      title: StatusBreakdown
      type: object
      additionalProperties: true
      description: A detailed breakdown of the institution's performance for a request type. The values for `success`, `error_plaid`, and `error_institution` sum to 1. The time range used for calculating the breakdown may range from the most recent few minutes to the past six hours. In general, smaller institutions will show status that was calculated over a longer period of time. For Investment updates, which are refreshed less frequently, the period assessed may be 24 hours or more. For more details, see [Institution status details](https://plaid.com/docs/account/activity/#institution-status-details).
      properties:
        success:
          description: The percentage of login attempts that are successful, expressed as a decimal.
          type: number
          format: double
        error_plaid:
          description: |
            The percentage of logins that are failing due to an internal Plaid issue, expressed as a decimal.
          type: number
          format: double
        error_institution:
          description: The percentage of logins that are failing due to an issue in the institution's system, expressed as a decimal.
          type: number
          format: double
        refresh_interval:
          type: string
          enum:
          - NORMAL
          - DELAYED
          - STOPPED
          description: The `refresh_interval` may be `DELAYED` or `STOPPED` even when the success rate is high. This value is only returned for Transactions status breakdowns.
      required:
      - success
      - error_plaid
      - error_institution
    UserCustomPassword:
      title: UserCustomPassword
      type: object
      additionalProperties: true
      description: Custom test accounts are configured with a JSON configuration object formulated according to the schema below. All top level fields are optional. Sending an empty object as a configuration will result in an account configured with random balances and transaction history.
      x-examples: {}
      properties:
        version:
          type: string
          description: The version of the password schema to use, possible values are 1 or 2. The default value is 2. You should only specify 1 if you know it is necessary for your test suite.
          nullable: true
        seed:
          type: string
          description: |-
            A seed, in the form of a string, that will be used to randomly generate account and transaction data, if this data is not specified using the `override_accounts` argument. If no seed is specified, the randomly generated data will be different each time.

            Note that transactions data is generated relative to the Item's creation date. Different Items created on different dates with the same seed for transactions data will have different dates for the transactions. The number of days between each transaction and the Item creation will remain constant. For example, an Item created on December 15 might show a transaction on December 14. An Item created on December 20, using the same seed, would show that same transaction occurring on December 19.
        override_accounts:
          type: array
          description: An array of account overrides to configure the accounts for the Item. By default, if no override is specified, transactions and account data will be randomly generated based on the account type and subtype, and other products will have fixed or empty data.
          items:
            $ref: '#/components/schemas/OverrideAccounts'
        mfa:
          $ref: '#/components/schemas/MFA'
        recaptcha:
          type: string
          description: You may trigger a reCAPTCHA in Plaid Link in the Sandbox environment by using the recaptcha field. Possible values are `good` or `bad`. A value of `good` will result in successful Item creation and `bad` will result in a `RECAPTCHA_BAD` error to simulate a failed reCAPTCHA. Both values require the reCAPTCHA to be manually solved within Plaid Link.
        force_error:
          type: string
          description: |-
            An error code to force on Item creation. Possible values are:

            `"INSTITUTION_NOT_RESPONDING"`
            `"INSTITUTION_NO_LONGER_SUPPORTED"`
            `"INVALID_CREDENTIALS"`
            `"INVALID_MFA"`
            `"ITEM_LOCKED"`
            `"ITEM_LOGIN_REQUIRED"`
            `"ITEM_NOT_SUPPORTED"`
            `"INVALID_LINK_TOKEN"`
            `"MFA_NOT_SUPPORTED"`
            `"NO_ACCOUNTS"`
            `"PLAID_ERROR"`
            `"USER_INPUT_TIMEOUT"`
            `"USER_SETUP_REQUIRED"`
      required:
      - seed
      - override_accounts
      - mfa
      - recaptcha
      - force_error
    MFA:
      title: MFA
      type: object
      additionalProperties: true
      properties:
        type:
          type: string
          description: |-
            Possible values are `device`, `selections`, or `questions`.

            If value is `device`, the MFA answer is `1234`.

            If value is `selections`, the MFA answer is always the first option.

            If value is `questions`, the MFA answer is  `answer_<i>_<j>` for the j-th question in the i-th round, starting from 0. For example, the answer to the first question in the second round is `answer_1_0`.
        question_rounds:
          type: number
          description: 'Number of rounds of questions. Required if value of `type` is `questions`. '
        questions_per_round:
          type: number
          description: Number of questions per round. Required if value of `type` is `questions`. If value of type is `selections`, default value is 2.
        selection_rounds:
          description: Number of rounds of selections, used if `type` is `selections`. Defaults to 1.
          type: number
        selections_per_question:
          type: number
          description: |
            Number of available answers per question, used if `type` is `selection`. Defaults to 2.
      required:
      - type
      - question_rounds
      - questions_per_round
      - selection_rounds
      - selections_per_question
      description: Specifies the multi-factor authentication settings to use with this test account
    OverrideAccounts:
      title: OverrideAccounts
      type: object
      additionalProperties: true
      description: Data to use to set values of test accounts. Some values cannot be specified in the schema and will instead will be calculated from other test data in order to achieve more consistent, realistic test data.
      properties:
        type:
          $ref: '#/components/schemas/OverrideAccountType'
        subtype:
          $ref: '#/components/schemas/AccountSubtype'
        starting_balance:
          type: number
          format: double
          description: |
            If provided, the account will start with this amount as the current balance.
        force_available_balance:
          type: number
          format: double
          description: If provided, the account will always have this amount as its  available balance, regardless of current balance or changes in transactions over time.
        currency:
          type: string
          description: ISO-4217 currency code. If provided, the account will be denominated in the given currency. Transactions will also be in this currency by default.
        meta:
          $ref: '#/components/schemas/Meta'
        numbers:
          $ref: '#/components/schemas/Numbers'
        transactions:
          description: Specify the list of transactions on the account.
          type: array
          items:
            $ref: '#/components/schemas/TransactionOverride'
        holdings:
          $ref: '#/components/schemas/HoldingsOverride'
        investment_transactions:
          $ref: '#/components/schemas/Investments_TransactionsOverride'
        identity:
          $ref: '#/components/schemas/OwnerOverride'
        liability:
          $ref: '#/components/schemas/LiabilityOverride'
        inflow_model:
          $ref: '#/components/schemas/InflowModel'
        income:
          $ref: '#/components/schemas/IncomeOverride'
      required:
      - type
      - subtype
      - starting_balance
      - force_available_balance
      - currency
      - meta
      - numbers
      - transactions
      - identity
      - liability
      - inflow_model
    Meta:
      title: Meta
      type: object
      additionalProperties: true
      description: Allows specifying the metadata of the test account
      properties:
        name:
          type: string
          description: The account's name
        official_name:
          type: string
          description: The account's official name
        limit:
          type: number
          format: double
          description: The account's limit
        mask:
          type: string
          description: The account's mask. Should be an empty string or a string of 2-4 alphanumeric characters. This allows you to model a mask which does not match the account number (such as with a virtual account number).
          pattern: ^$|^[A-Za-z0-9]{2,4}$
      required:
      - name
      - official_name
      - limit
      - mask
    Numbers:
      title: Numbers
      type: object
      additionalProperties: true
      description: Account and bank identifier number data used to configure the test account. All values are optional.
      properties:
        account:
          type: string
          description: Will be used for the account number.
        ach_routing:
          type: string
          description: Must be a valid ACH routing number.
        ach_wire_routing:
          type: string
          description: Must be a valid wire transfer routing number.
        eft_institution:
          type: string
          description: EFT institution number. Must be specified alongside `eft_branch`.
        eft_branch:
          type: string
          description: EFT branch number. Must be specified alongside `eft_institution`.
        international_bic:
          type: string
          description: Bank identifier code (BIC). Must be specified alongside `international_iban`.
        international_iban:
          type: string
          description: International bank account number (IBAN). If no account number is specified via `account`, will also be used as the account number by default. Must be specified alongside `international_bic`.
        bacs_sort_code:
          type: string
          description: BACS sort code
    TransactionOverride:
      title: TransactionOverride
      type: object
      additionalProperties: true
      description: Data to populate as test transaction data. If not specified, random transactions will be generated instead.
      properties:
        date_transacted:
          type: string
          format: date
          description: The date of the transaction, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) (YYYY-MM-DD) format. Transactions in Sandbox will move from pending to posted once their transaction date has been reached. If a `date_transacted` is not provided by the institution, a transaction date may be available in the [`authorized_date`](https://plaid.com/docs/api/products/transactions/#transactions-get-response-transactions-authorized-date) field.
        date_posted:
          type: string
          format: date
          description: The date the transaction posted, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) (YYYY-MM-DD) format. Posted dates in the past or present will result in posted transactions; posted dates in the future will result in pending transactions.
        amount:
          type: number
          format: double
          description: The transaction amount. Can be negative.
        description:
          type: string
          description: The transaction description.
        currency:
          type: string
          description: The ISO-4217 format currency code for the transaction.
      required:
      - date_transacted
      - date_posted
      - amount
      - description
    SecurityOverride:
      type: object
      title: SecurityOverride
      description: Specify the security associated with the holding or investment transaction. When inputting custom security data to the Sandbox, Plaid will perform post-data-retrieval normalization and enrichment. These processes may cause the data returned by the Sandbox to be slightly different from the data you input. An ISO-4217 currency code and a security identifier (`ticker_symbol`, `cusip`, `isin`, or `sedol`) are required.
      properties:
        isin:
          description: 12-character ISIN, a globally unique securities identifier. A verified CUSIP Global Services license is required to receive this data. This field will be null by default for new customers, and null for existing customers starting March 12, 2024. If you would like access to this field, please start the verification process [here](https://docs.google.com/forms/d/e/1FAIpQLSd9asHEYEfmf8fxJTHZTAfAzW4dugsnSu-HS2J51f1mxwd6Sw/viewform).
          type: string
        cusip:
          description: 9-character CUSIP, an identifier assigned to North American securities. A verified CUSIP Global Services license is required to receive this data. This field will be null by default for new customers, and null for existing customers starting March 12, 2024. If you would like access to this field, please start the verification process [here](https://docs.google.com/forms/d/e/1FAIpQLSd9asHEYEfmf8fxJTHZTAfAzW4dugsnSu-HS2J51f1mxwd6Sw/viewform).
          type: string
        sedol:
          description: 7-character SEDOL, an identifier assigned to securities in the UK.
          type: string
        name:
          description: A descriptive name for the security, suitable for display.
          type: string
        ticker_symbol:
          description: The security’s trading symbol for publicly traded securities, and otherwise a short identifier if available.
          type: string
        currency:
          description: Either a valid `iso_currency_code` or `unofficial_currency_code`
          type: string
    HoldingsOverride:
      type: object
      title: HoldingsOverride
      description: Specify the holdings on the account.
      properties:
        institution_price:
          description: The last price given by the institution for this security
          type: number
          format: double
        institution_price_as_of:
          description: The date at which `institution_price` was current. Must be formatted as an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) date.
          type: string
          format: date
        cost_basis:
          description: The total cost basis of the holding (e.g., the total amount spent to acquire all assets currently in the holding).
          type: number
          format: double
        quantity:
          description: The total quantity of the asset held, as reported by the financial institution.
          type: number
          format: double
        currency:
          description: Either a valid `iso_currency_code` or `unofficial_currency_code`
          type: string
        security:
          $ref: '#/components/schemas/SecurityOverride'
      required:
      - institution_price
      - quantity
      - currency
      - security
    Investments_TransactionsOverride:
      type: object
      description: Specify the list of investments transactions on the account.
      title: Investments_TransactionsOverride
      properties:
        date:
          description: Posting date for the transaction. Must be formatted as an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) date.
          type: string
          format: date
        name:
          description: The institution's description of the transaction.
          type: string
        quantity:
          description: The number of units of the security involved in this transaction. Must be positive if the type is a buy and negative if the type is a sell.
          type: number
          format: double
        price:
          description: The price of the security at which this transaction occurred.
          type: number
          format: double
        fees:
          description: The combined value of all fees applied to this transaction.
          type: number
          format: double
        type:
          description: |-
            The type of the investment transaction. Possible values are:
            `buy`: Buying an investment
            `sell`: Selling an investment
            `cash`: Activity that modifies a cash position
            `fee`: A fee on the account
            `transfer`: Activity that modifies a position, but not through buy/sell activity e.g. options exercise, portfolio transfer
          type: string
        currency:
          description: Either a valid `iso_currency_code` or `unofficial_currency_code`
          type: string
        security:
          $ref: '#/components/schemas/SecurityOverride'
      required:
      - date
      - name
      - quantity
      - price
      - type
      - currency
    LiabilityOverride:
      type: object
      additionalProperties: true
      title: LiabilityOverride
      properties:
        type:
          description: The type of the liability object, either `credit` or `student`. Mortgages are not currently supported in the custom Sandbox.
          type: string
        purchase_apr:
          description: The purchase APR percentage value. For simplicity, this is the only interest rate used to calculate interest charges. Can only be set if `type` is `credit`.
          type: number
          format: double
        cash_apr:
          type: number
          format: double
          description: The cash APR percentage value. Can only be set if `type` is `credit`.
        balance_transfer_apr:
          type: number
          format: double
          description: The balance transfer APR percentage value. Can only be set if `type` is `credit`.
        special_apr:
          type: number
          format: double
          description: The special APR percentage value. Can only be set if `type` is `credit`.
        last_payment_amount:
          type: number
          format: double
          description: Override the `last_payment_amount` field. Can only be set if `type` is `credit`.
        minimum_payment_amount:
          type: number
          format: double
          description: Override the `minimum_payment_amount` field. Can only be set if `type` is `credit` or `student`.
        is_overdue:
          type: boolean
          description: Override the `is_overdue` field
        origination_date:
          type: string
          format: date
          description: The date on which the loan was initially lent, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) (YYYY-MM-DD) format. Can only be set if `type` is `student`.
        principal:
          description: The original loan principal. Can only be set if `type` is `student`.
          type: number
          format: double
        nominal_apr:
          description: The interest rate on the loan as a percentage. Can only be set if `type` is `student`.
          type: number
          format: double
        interest_capitalization_grace_period_months:
          type: number
          description: If set, interest capitalization begins at the given number of months after loan origination. By default interest is never capitalized. Can only be set if `type` is `student`.
        repayment_model:
          $ref: '#/components/schemas/StudentLoanRepaymentModel'
        expected_payoff_date:
          type: string
          format: date
          description: Override the `expected_payoff_date` field. Can only be set if `type` is `student`.
        guarantor:
          type: string
          description: Override the `guarantor` field. Can only be set if `type` is `student`.
        is_federal:
          description: Override the `is_federal` field. Can only be set if `type` is `student`.
          type: boolean
        loan_name:
          type: string
          description: Override the `loan_name` field. Can only be set if `type` is `student`.
        loan_status:
          $ref: '#/components/schemas/StudentLoanStatus'
        payment_reference_number:
          type: string
          description: Override the `payment_reference_number` field. Can only be set if `type` is `student`.
        pslf_status:
          $ref: '#/components/schemas/PSLFStatus'
        repayment_plan_description:
          type: string
          description: Override the `repayment_plan.description` field. Can only be set if `type` is `student`.
        repayment_plan_type:
          description: 'Override the `repayment_plan.type` field. Can only be set if `type` is `student`. Possible values are: `"extended graduated"`, `"extended standard"`, `"graduated"`, `"income-contingent repayment"`, `"income-based repayment"`, `"interest only"`, `"other"`, `"pay as you earn"`, `"revised pay as you earn"`, `"standard"`, or `"saving on a valuable education"`.'
          type: string
        sequence_number:
          type: string
          description: Override the `sequence_number` field. Can only be set if `type` is `student`.
        servicer_address:
          $ref: '#/components/schemas/Address'
      required:
      - type
      - purchase_apr
      - cash_apr
      - balance_transfer_apr
      - special_apr
      - last_payment_amount
      - minimum_payment_amount
      - is_overdue
      - origination_date
      - principal
      - nominal_apr
      - interest_capitalization_grace_period_months
      - repayment_model
      - expected_payoff_date
      - guarantor
      - is_federal
      - loan_name
      - loan_status
      - payment_reference_number
      - pslf_status
      - repayment_plan_description
      - repayment_plan_type
      - sequence_number
      - servicer_address
      description: Used to configure Sandbox test data for the Liabilities product
    StudentLoanRepaymentModel:
      title: StudentLoanRepaymentModel
      type: object
      additionalProperties: true
      properties:
        type:
          type: string
          description: The only currently supported value for this field is `standard`.
        non_repayment_months:
          description: Configures the number of months before repayment starts.
          type: number
        repayment_months:
          description: Configures the number of months of repayments before the loan is paid off.
          type: number
      required:
      - type
      - non_repayment_months
      - repayment_months
      description: Student loan repayment information used to configure Sandbox test data for the Liabilities product
    InflowModel:
      title: InflowModel
      type: object
      additionalProperties: true
      description: The `inflow_model` allows you to model a test account that receives regular income or make regular payments on a loan. Any transactions generated by the `inflow_model` will appear in addition to randomly generated test data or transactions specified by `override_accounts`.
      properties:
        type:
          type: string
          description: |-
            Inflow model. One of the following:

            `none`: No income

            `monthly-income`: Income occurs once per month `monthly-balance-payment`: Pays off the balance on a liability account at the given statement day of month.

            `monthly-interest-only-payment`: Makes an interest-only payment on a liability account at the given statement day of month.

            Note that account types supported by Liabilities will accrue interest in the Sandbox. The types impacted are account type `credit` with subtype `credit` or `paypal`, and account type `loan` with subtype `student` or `mortgage`.
        income_amount:
          type: number
          format: double
          description: Amount of income per month. This value is required if `type` is `monthly-income`.
        payment_day_of_month:
          description: Number between 1 and 28, or `last` meaning the last day of the month. The day of the month on which the income transaction will appear. The name of the income transaction. This field is required if `type` is `monthly-income`, `monthly-balance-payment` or `monthly-interest-only-payment`.
          type: number
        transaction_name:
          type: string
          description: The name of the income transaction. This field is required if `type` is `monthly-income`, `monthly-balance-payment` or `monthly-interest-only-payment`.
        statement_day_of_month:
          description: Number between 1 and 28, or `last` meaning the last day of the month. The day of the month on which the balance is calculated for the next payment. The name of the income transaction. This field is required if `type` is `monthly-balance-payment` or `monthly-interest-only-payment`.
          type: string
      required:
      - type
      - income_amount
      - payment_day_of_month
      - transaction_name
      - statement_day_of_month
    IncomeOverride:
      title: IncomeOverride
      type: object
      description: Specify payroll data on the account.
      properties:
        paystubs:
          type: array
          description: A list of paystubs associated with the account.
          items:
            $ref: '#/components/schemas/PaystubOverride'
    PaystubOverride:
      title: PaystubOverride
      type: object
      description: An object representing data from a paystub.
      properties:
        employer:
          $ref: '#/components/schemas/PaystubOverrideEmployer'
        employee:
          $ref: '#/components/schemas/PaystubOverrideEmployee'
        income_breakdown:
          type: array
          items:
            $ref: '#/components/schemas/IncomeBreakdown'
        pay_period_details:
          $ref: '#/components/schemas/PaystubOverridePayPeriodDetails'
    PaystubOverrideEmployer:
      type: object
      description: The employer on the paystub.
      properties:
        name:
          type: string
          description: The name of the employer.
    PaystubOverrideEmployee:
      type: object
      description: The employee on the paystub.
      properties:
        name:
          type: string
          description: The name of the employee.
        address:
          $ref: '#/components/schemas/PaystubOverrideEmployeeAddress'
    PaystubOverrideEmployeeAddress:
      type: object
      description: The address of the employee.
      properties:
        city:
          type: string
          description: The full city name.
        region:
          type: string
          description: |-
            The region or state
            Example: `"NC"`
        street:
          type: string
          description: |-
            The full street address
            Example: `"564 Main Street, APT 15"`
        postal_code:
          type: string
          description: 5 digit postal code.
        country:
          type: string
          description: The country of the address.
    PaystubOverridePayPeriodDetails:
      title: PaystubOverridePayPeriodDetails
      type: object
      additionalProperties: true
      description: Details about the pay period.
      properties:
        check_amount:
          type: number
          format: double
          description: The amount of the paycheck.
          nullable: true
        distribution_breakdown:
          type: array
          items:
            $ref: '#/components/schemas/PaystubOverrideDistributionBreakdown'
        end_date:
          type: string
          format: date
          description: 'The pay period end date, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format: "yyyy-mm-dd".'
          nullable: true
        gross_earnings:
          type: number
          format: double
          description: Total earnings before tax/deductions.
          nullable: true
        pay_date:
          type: string
          format: date
          description: The date on which the paystub was issued, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format ("yyyy-mm-dd").
          nullable: true
        pay_frequency:
          $ref: '#/components/schemas/PayPeriodDetailsPayFrequency'
        pay_day:
          deprecated: true
          type: string
          format: date
          description: The date on which the paystub was issued, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format ("yyyy-mm-dd").
          nullable: true
        start_date:
          type: string
          format: date
          description: 'The pay period start date, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format: "yyyy-mm-dd".'
          nullable: true
    PaystubOverrideDistributionBreakdown:
      title: DistributionBreakdown
      type: object
      description: Information about the accounts that the payment was distributed to.
      additionalProperties: true
      properties:
        account_name:
          type: string
          description: Name of the account for the given distribution.
          nullable: true
        bank_name:
          type: string
          description: The name of the bank that the payment is being deposited to.
          nullable: true
        current_amount:
          type: number
          format: double
          description: The amount distributed to this account.
          nullable: true
        currency:
          type: string
          description: The ISO-4217 currency code of the net pay. Always `null` if `unofficial_currency_code` is non-null.
          nullable: true
        mask:
          type: string
          description: The last 2-4 alphanumeric characters of an account's official account number.
          nullable: true
        type:
          type: string
          description: Type of the account that the paystub was sent to (e.g. 'checking').
          nullable: true
    ItemId:
      title: ItemId
      type: string
      description: The `item_id` of the Item associated with this webhook, warning, or error
    UserId:
      title: UserId
      type: string
      description: The Plaid `user_id` of the User associated with this webhook, warning, or error.
    AutomaticallyVerifiedWebhook:
      title: AutomaticallyVerifiedWebhook
      type: object
      additionalProperties: true
      description: Fired when an Item is verified via automated micro-deposits. We recommend communicating to your users when this event is received to notify them that their account is verified and ready for use.
      properties:
        webhook_type:
          type: string
          description: '`AUTH`'
        webhook_code:
          type: string
          description: '`AUTOMATICALLY_VERIFIED`'
        account_id:
          type: string
          description: The `account_id` of the account associated with the webhook
        item_id:
          $ref: '#/components/schemas/ItemId'
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
        error:
          $ref: '#/components/schemas/PlaidError'
      required:
      - webhook_type
      - webhook_code
      - account_id
      - item_id
      - environment
      x-examples:
        example-1:
          webhook_type: AUTH
          webhook_code: AUTOMATICALLY_VERIFIED
          item_id: eVBnVMp7zdTJLkRNr33Rs6zr7KNJqBFL9DrE6
          account_id: dVzbVMLjrxTnLjX4G66XUp5GLklm4oiZy88yK
          environment: production
          error: null
    JWTHeader:
      title: JWTHeader
      type: object
      additionalProperties: true
      properties:
        id:
          type: string
      required:
      - id
      description: A JWT Header, used for webhook validation
    VerificationExpiredWebhook:
      title: VerificationExpiredWebhook
      type: object
      additionalProperties: true
      description: Fired when an Item was not verified via automated micro-deposits after seven days since the automated micro-deposit was made.
      x-examples:
        example-1:
          webhook_type: AUTH
          webhook_code: VERIFICATION_EXPIRED
          item_id: eVBnVMp7zdTJLkRNr33Rs6zr7KNJqBFL9DrE6
          account_id: BxBXxLj1m4HMXBm9WZZmCWVbPjX16EHwv99vp
          environment: production
          error: null
      properties:
        webhook_type:
          type: string
          description: '`AUTH`'
        webhook_code:
          type: string
          description: '`VERIFICATION_EXPIRED`'
        item_id:
          $ref: '#/components/schemas/ItemId'
        account_id:
          type: string
          description: The `account_id` of the account associated with the webhook
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
        error:
          $ref: '#/components/schemas/PlaidError'
      required:
      - webhook_type
      - webhook_code
      - item_id
      - account_id
      - environment
    WebhookUpdateAcknowledgedWebhook:
      title: WebhookUpdateAcknowledgedWebhook
      type: object
      additionalProperties: true
      description: Fired when an Item's webhook is updated. This will be sent to the newly specified webhook.
      x-examples:
        example-1:
          webhook_type: ITEM
          webhook_code: WEBHOOK_UPDATE_ACKNOWLEDGED
          item_id: wz666MBjYWTp2PDzzggYhM6oWWmBb
          error: null
          new_webhook_url: https://plaid.com/example/webhook
          environment: production
      properties:
        webhook_type:
          type: string
          description: '`ITEM`'
        webhook_code:
          type: string
          description: '`WEBHOOK_UPDATE_ACKNOWLEDGED`'
        item_id:
          $ref: '#/components/schemas/ItemId'
        new_webhook_url:
          type: string
          description: The new webhook URL
        error:
          $ref: '#/components/schemas/PlaidError'
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - item_id
      - new_webhook_url
      - environment
    PendingExpirationWebhook:
      title: PendingExpirationWebhook
      type: object
      additionalProperties: true
      description: Fired when an Item’s access consent is expiring in 7 days. Some Items have explicit expiration times and we try to relay this when possible to reduce service disruption. This can be resolved by having the user go through Link’s update mode.
      properties:
        webhook_type:
          type: string
          description: '`ITEM`'
        webhook_code:
          type: string
          description: '`PENDING_EXPIRATION`'
        item_id:
          $ref: '#/components/schemas/ItemId'
        consent_expiration_time:
          type: string
          format: date-time
          description: The date and time at which the Item's access consent will expire, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - item_id
      - consent_expiration_time
      - environment
      x-examples:
        example-1:
          webhook_type: ITEM
          webhook_code: PENDING_EXPIRATION
          item_id: wz666MBjYWTp2PDzzggYhM6oWWmBb
          consent_expiration_time: "2020-01-15T13:25:17.766Z"
          environment: production
    ItemErrorWebhook:
      title: ItemErrorWebhook
      type: object
      additionalProperties: true
      description: Fired when an error is encountered with an Item. The error can be resolved by having the user go through Link’s update mode.
      properties:
        webhook_type:
          type: string
          description: '`ITEM`'
        webhook_code:
          type: string
          description: '`ERROR`'
        item_id:
          $ref: '#/components/schemas/ItemId'
        error:
          $ref: '#/components/schemas/PlaidError'
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - item_id
      - error
      - environment
      x-examples:
        example-1:
          webhook_type: ITEM
          webhook_code: ERROR
          item_id: wz666MBjYWTp2PDzzggYhM6oWWmBb
          error:
            display_message: null
            error_code: ITEM_LOGIN_REQUIRED
            error_message: the login details of this item have changed (credentials, MFA, or required user action) and a user login is required to update this information. use Link's update mode to restore the item to a good state
            error_type: ITEM_ERROR
            status: 400
          environment: production
    ItemLoginRepairedWebhook:
      title: ItemLoginRepairedWebhook
      type: object
      additionalProperties: true
      description: Fired when an Item has exited the `ITEM_LOGIN_REQUIRED` state without the user having gone through the update mode flow in your app (this can happen if the user completed the update mode in a different app). If you have messaging that tells the user to complete the update mode flow, you should silence this messaging upon receiving the `LOGIN_REPAIRED` webhook.
      properties:
        webhook_type:
          type: string
          description: '`ITEM`'
        webhook_code:
          type: string
          description: '`LOGIN_REPAIRED`'
        item_id:
          $ref: '#/components/schemas/ItemId'
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - item_id
      - environment
      x-examples:
        example-1:
          webhook_type: ITEM
          webhook_code: LOGIN_REPAIRED
          item_id: wz666MBjYWTp2PDzzggYhM6oWWmBb
          environment: production
    ItemProductReadyWebhook:
      title: ItemProductReadyWebhook
      type: object
      additionalProperties: true
      description: Fired once Plaid calculates income from an Item.
      properties:
        webhook_type:
          type: string
          description: '`INCOME`'
        webhook_code:
          type: string
          description: '`PRODUCT_READY`'
        item_id:
          $ref: '#/components/schemas/ItemId'
        error:
          $ref: '#/components/schemas/PlaidError'
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - item_id
      - environment
      x-examples:
        example-1:
          webhook_type: INCOME
          webhook_code: PRODUCT_READY
          item_id: wz666MBjYWTp2PDzzggYhM6oWWmBb
          error: null
          environment: production
    ProductPermissionsRequiredAuthWebhook:
      title: ProductPermissionsRequiredAuthWebhook
      type: object
      additionalProperties: true
      description: Fired when an `ACCESS_NOT_GRANTED` error is hit for Auth. The error can be resolved by putting the user through update mode with `auth` in the `products` array, as well as through the limited beta for update mode Authentication product validations.
      properties:
        webhook_type:
          type: string
          description: '`AUTH`'
        webhook_code:
          type: string
          description: '`PRODUCT_PERMISSIONS_REQUIRED`'
        item_id:
          $ref: '#/components/schemas/ItemId'
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - item_id
      - environment
      x-examples:
        example-1:
          webhook_type: AUTH
          webhook_code: PRODUCT_PERMISSIONS_REQUIRED
          item_id: wz666MBjYWTp2PDzzggYhM6oWWmBb
          environment: production
    ProductPermissionsRequiredIdentityWebhook:
      title: ProductPermissionsRequiredIdentityWebhook
      type: object
      additionalProperties: true
      description: Fired when an `ACCESS_NOT_GRANTED` error is hit for Identity. The error can be resolved by putting the user through update mode with `identity` in the `products` array, as well as through the limited beta for update mode Identity product validations.
      properties:
        webhook_type:
          type: string
          description: '`IDENTITY`'
        webhook_code:
          type: string
          description: '`PRODUCT_PERMISSIONS_REQUIRED`'
        item_id:
          $ref: '#/components/schemas/ItemId'
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - item_id
      - environment
      x-examples:
        example-1:
          webhook_type: IDENTITY
          webhook_code: PRODUCT_PERMISSIONS_REQUIRED
          item_id: wz666MBjYWTp2PDzzggYhM6oWWmBb
          environment: production
    Recaptcha_RequiredError:
      title: Recaptcha_RequiredError
      type: object
      additionalProperties: true
      description: The request was flagged by Plaid's fraud system, and requires additional verification to ensure they are not a bot.
      x-examples:
        example-1:
          error_type: RECAPTCHA_ERROR
          error_code: RECAPTCHA_REQUIRED
          error_message: This request requires additional verification. Please resubmit the request after completing the challenge
          display_message: null
          http_code: 400
          request_id: HNTDNrA8F1shFEW
      properties:
        error_type:
          type: string
          description: RECAPTCHA_ERROR
        error_code:
          type: string
          description: RECAPTCHA_REQUIRED
        display_message:
          type: string
        http_code:
          type: string
          description: "400"
        link_user_experience:
          type: string
          description: Your user will be prompted to solve a Google reCAPTCHA challenge in the Link Recaptcha pane. If they solve the challenge successfully, the user's request is resubmitted and they are directed to the next Item creation step.
        common_causes:
          type: string
          description: Plaid's fraud system detects abusive traffic and considers a variety of parameters throughout Item creation requests. When a request is considered risky or possibly fraudulent, Link presents a reCAPTCHA for the user to solve.
        troubleshooting_steps:
          type: string
          description: |-
            Link will automatically guide your user through reCAPTCHA verification. As a general rule, we recommend instrumenting basic fraud monitoring to detect and protect your website from spam and abuse.

            If your user cannot verify their session, please submit a Support ticket with the following identifiers: `link_session_id` or `request_id`
      required:
      - error_type
      - error_code
      - display_message
      - http_code
      - link_user_experience
      - common_causes
      - troubleshooting_steps
    BankTransfersEventsUpdateWebhook:
      title: BankTransfersEventsUpdateWebhook
      type: object
      additionalProperties: true
      description: Fired when new bank transfer events are available. Receiving this webhook indicates you should fetch the new events from `/bank_transfer/event/sync`.
      x-examples:
        example-1:
          webhook_type: BANK_TRANSFERS
          webhook_code: BANK_TRANSFERS_EVENTS_UPDATE
          environment: production
      properties:
        webhook_type:
          type: string
          description: '`BANK_TRANSFERS`'
        webhook_code:
          type: string
          description: '`BANK_TRANSFERS_EVENTS_UPDATE`'
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - environment
    BankTransfersEventsUpdateWebhookForAuth:
      title: BankTransfersEventsUpdateWebhookForAuth
      type: object
      additionalProperties: true
      description: Fired when new ACH events are available. To begin receiving this webhook, you must first register your webhook listener endpoint via the [webhooks page in the Dashboard](https://dashboard.plaid.com/team/webhooks). The `BANK_TRANSFERS_EVENTS_UPDATE` webhook can be used to track the progress of ACH transfers used in [micro-deposit verification](/docs/auth/coverage/microdeposit-events/). Receiving this webhook indicates you should fetch the new events from `/bank_transfer/event/sync`. Note that [Transfer](https://plaid.com/docs/transfer) customers should use Transfer webhooks instead of using `BANK_TRANSFERS_EVENTS_UPDATE`; see [micro-deposit events documentation](https://plaid.com/docs/auth/coverage/microdeposit-events/) for more details.
      x-examples:
        example-1:
          webhook_type: BANK_TRANSFERS
          webhook_code: BANK_TRANSFERS_EVENTS_UPDATE
          environment: production
      properties:
        webhook_type:
          type: string
          description: '`BANK_TRANSFERS`'
        webhook_code:
          type: string
          description: '`BANK_TRANSFERS_EVENTS_UPDATE`'
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - environment
    TransferEventsUpdateWebhook:
      title: TransferEventsUpdateWebhook
      type: object
      additionalProperties: true
      description: Fired when new transfer events are available. Receiving this webhook indicates you should fetch the new events from `/transfer/event/sync`.
      x-examples:
        example-1:
          webhook_type: TRANSFER
          webhook_code: TRANSFER_EVENTS_UPDATE
          environment: production
      properties:
        webhook_type:
          type: string
          description: '`TRANSFER`'
        webhook_code:
          type: string
          description: '`TRANSFER_EVENTS_UPDATE`'
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - environment
    RecurringNewTransferWebhook:
      title: RecurringNewTransferWebhook
      type: object
      additionalProperties: true
      description: Fired when a new transfer of a recurring transfer is originated.
      x-examples:
        example-1:
          webhook_type: TRANSFER
          webhook_code: RECURRING_NEW_TRANSFER
          recurring_transfer_id: 460cbe92-2dcc-8eae-5ad6-b37d0ec90fd9
          transfer_id: 271ef220-dbf8-caeb-a7dc-a2b3e8a80963
          environment: production
      properties:
        webhook_type:
          type: string
          description: '`TRANSFER`'
        webhook_code:
          type: string
          description: '`RECURRING_NEW_TRANSFER`'
        recurring_transfer_id:
          $ref: '#/components/schemas/RecurringTransferID'
        transfer_id:
          $ref: '#/components/schemas/TransferID'
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - recurring_transfer_id
      - transfer_id
      - environment
    RecurringTransferSkippedWebhook:
      title: RecurringTransferSkippedWebhook
      type: object
      additionalProperties: true
      description: Fired when Plaid is unable to originate a new ACH transaction of the recurring transfer on the planned date.
      x-examples:
        example-1:
          webhook_type: TRANSFER
          webhook_code: RECURRING_TRANSFER_SKIPPED
          recurring_transfer_id: 460cbe92-2dcc-8eae-5ad6-b37d0ec90fd9
          authorization_decision: declined
          authorization_decision_rationale_code: NSF
          skipped_origination_date: "2022-11-30"
          environment: production
      properties:
        webhook_type:
          type: string
          description: '`TRANSFER`'
        webhook_code:
          type: string
          description: '`RECURRING_TRANSFER_SKIPPED`'
        recurring_transfer_id:
          $ref: '#/components/schemas/RecurringTransferID'
        authorization_decision:
          $ref: '#/components/schemas/TransferAuthorizationDecision'
        authorization_decision_rationale_code:
          $ref: '#/components/schemas/TransferAuthorizationDecisionRationaleCode'
        skipped_origination_date:
          type: string
          description: The planned date on which Plaid is unable to originate a new ACH transaction of the recurring transfer. This will be of the form YYYY-MM-DD.
          format: date
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - recurring_transfer_id
      - authorization_decision
      - skipped_origination_date
      - environment
    RecurringCancelledWebhook:
      title: RecurringCancelledWebhook
      type: object
      additionalProperties: true
      description: Fired when a recurring transfer is cancelled by Plaid.
      x-examples:
        example-1:
          webhook_type: TRANSFER
          webhook_code: RECURRING_CANCELLED
          recurring_transfer_id: 460cbe92-2dcc-8eae-5ad6-b37d0ec90fd9
          environment: production
      properties:
        webhook_type:
          type: string
          description: '`TRANSFER`'
        webhook_code:
          type: string
          description: '`RECURRING_CANCELLED`'
        recurring_transfer_id:
          $ref: '#/components/schemas/RecurringTransferID'
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - recurring_transfer_id
      - environment
    InvestmentsDefaultUpdateWebhook:
      title: InvestmentsDefaultUpdateWebhook
      type: object
      additionalProperties: true
      description: Fired when new transactions have been detected on an investment account.
      x-examples:
        example-1:
          webhook_type: INVESTMENTS_TRANSACTIONS
          webhook_code: DEFAULT_UPDATE
          item_id: wz666MBjYWTp2PDzzggYhM6oWWmBb
          error: null
          new_investments_transactions: 16
          canceled_investments_transactions: 0
          environment: production
      properties:
        webhook_type:
          type: string
          description: '`INVESTMENTS_TRANSACTIONS`'
        webhook_code:
          type: string
          description: '`DEFAULT_UPDATE`'
        item_id:
          $ref: '#/components/schemas/ItemId'
        error:
          $ref: '#/components/schemas/PlaidError'
        new_investments_transactions:
          type: number
          description: The number of new transactions reported since the last time this webhook was fired.
        canceled_investments_transactions:
          type: number
          description: The number of canceled transactions reported since the last time this webhook was fired.
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - item_id
      - new_investments_transactions
      - canceled_investments_transactions
      - environment
    InvestmentsHistoricalUpdateWebhook:
      title: InvestmentsHistoricalUpdateWebhook
      type: object
      additionalProperties: true
      description: Fired after an asynchronous extraction on an investments account.
      x-examples:
        example-1:
          webhook_type: INVESTMENTS_TRANSACTIONS
          webhook_code: HISTORICAL_UPDATE
          item_id: wz666MBjYWTp2PDzzggYhM6oWWmBb
          error: null
          new_investments_transactions: 16
          canceled_investments_transactions: 0
          environment: production
      properties:
        webhook_type:
          type: string
          description: '`INVESTMENTS_TRANSACTIONS`'
        webhook_code:
          type: string
          description: '`HISTORICAL_UPDATE`'
        item_id:
          $ref: '#/components/schemas/ItemId'
        error:
          $ref: '#/components/schemas/PlaidError'
        new_investments_transactions:
          type: number
          description: The number of new transactions reported since the last time this webhook was fired.
        canceled_investments_transactions:
          type: number
          description: The number of canceled transactions reported since the last time this webhook was fired.
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - item_id
      - new_investments_transactions
      - canceled_investments_transactions
      - environment
    HoldingsDefaultUpdateWebhook:
      title: HoldingsDefaultUpdateWebhook
      type: object
      additionalProperties: true
      description: Fired when new or updated holdings have been detected on an investment account. The webhook typically fires in response to any newly added holdings or price changes to existing holdings, most commonly after market close.
      x-examples:
        example-1:
          webhook_type: HOLDINGS
          webhook_code: DEFAULT_UPDATE
          item_id: wz666MBjYWTp2PDzzggYhM6oWWmBb
          error: null
          new_holdings: 19
          updated_holdings: 0
          environment: production
      properties:
        webhook_type:
          type: string
          description: '`HOLDINGS`'
        webhook_code:
          type: string
          description: '`DEFAULT_UPDATE`'
        item_id:
          $ref: '#/components/schemas/ItemId'
        error:
          $ref: '#/components/schemas/PlaidError'
        new_holdings:
          type: number
          description: The number of new holdings reported since the last time this webhook was fired.
        updated_holdings:
          type: number
          description: The number of updated holdings reported since the last time this webhook was fired.
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - item_id
      - new_holdings
      - updated_holdings
      - environment
    PartnerEndCustomerOAuthStatusUpdatedWebhook:
      title: PartnerEndCustomerOAuthStatusUpdatedWebhook
      type: object
      description: The webhook of type `PARTNER` and code `END_CUSTOMER_OAUTH_STATUS_UPDATED` will be fired when a partner's end customer has an update on their OAuth registration status with an institution.
      x-examples:
        example-1:
          webhook_type: PARTNER
          webhook_code: END_CUSTOMER_OAUTH_STATUS_UPDATED
          end_customer_client_id: 634758733ebb4f00134b85ea
          environment: production
          institution_id: ins_127989
          institution_name: Bank of America
          status: attention-required
      properties:
        webhook_type:
          type: string
          description: '`PARTNER`'
        webhook_code:
          type: string
          description: '`END_CUSTOMER_OAUTH_STATUS_UPDATED`'
        end_customer_client_id:
          type: string
          description: The client ID of the end customer
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
        institution_id:
          type: string
          description: The institution ID
        institution_name:
          type: string
          description: The institution name
        status:
          $ref: '#/components/schemas/PartnerEndCustomerOAuthStatusUpdatedValues'
      required:
      - webhook_type
      - webhook_code
      - end_customer_client_id
      - environment
      - institution_id
      - institution_name
      - status
    LiabilitiesDefaultUpdateWebhook:
      title: LiabilitiesDefaultUpdateWebhook
      type: object
      description: The webhook of type `LIABILITIES` and code `DEFAULT_UPDATE` will be fired when new or updated liabilities have been detected on a liabilities item.
      x-examples:
        example-1:
          webhook_type: LIABILITIES
          webhook_code: DEFAULT_UPDATE
          item_id: wz666MBjYWTp2PDzzggYhM6oWWmBb
          error: null
          account_ids_with_new_liabilities:
          - XMBvvyMGQ1UoLbKByoMqH3nXMj84ALSdE5B58
          - BxBXxLj1m4HMXBm9WZZmCWVbPjX16EHwv99vp
          account_ids_with_updated_liabilities:
            XMBvvyMGQ1UoLbKByoMqH3nXMj84ALSdE5B58:
            - past_amount_due
          environment: production
      properties:
        webhook_type:
          type: string
          description: '`LIABILITIES`'
        webhook_code:
          type: string
          description: '`DEFAULT_UPDATE`'
        item_id:
          $ref: '#/components/schemas/ItemId'
        error:
          $ref: '#/components/schemas/PlaidError'
        account_ids_with_new_liabilities:
          type: array
          description: An array of `account_id`'s for accounts that contain new liabilities.'
          items:
            type: string
        account_ids_with_updated_liabilities:
          $ref: '#/components/schemas/LiabilitiesAccountIdsWithUpdatedLiabilities'
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - item_id
      - error
      - account_ids_with_new_liabilities
      - account_ids_with_updated_liabilities
      - environment
    LiabilitiesAccountIdsWithUpdatedLiabilities:
      type: object
      additionalProperties:
        type: array
        items:
          type: string
      description: |
        An object with keys of `account_id`'s that are mapped to their respective liabilities fields that changed.

        Example: `{ "XMBvvyMGQ1UoLbKByoMqH3nXMj84ALSdE5B58": ["past_amount_due"] }`
    Cause:
      title: Cause
      type: object
      additionalProperties: true
      allOf:
      - $ref: '#/components/schemas/PlaidError'
      - type: object
        properties:
          item_id:
            $ref: '#/components/schemas/ItemId'
      required:
      - item_id
      - error_type
      - error_code
      - error_message
      - display_message
      description: An error object and associated `item_id` used to identify a specific Item and error when a batch operation operating on multiple Items has encountered an error in one of the Items.
    PaymentAmountCurrency:
      type: string
      enum:
      - GBP
      - EUR
      - PLN
      - SEK
      - DKK
      - NOK
      description: The ISO-4217 currency code of the payment. For standing orders and payment consents, `"GBP"` must be used. For Poland, Denmark, Sweden and Norway, only the local currency is currently supported.
      minLength: 3
      maxLength: 3
    PaymentAmount:
      title: PaymentAmount
      type: object
      properties:
        currency:
          $ref: '#/components/schemas/PaymentAmountCurrency'
        value:
          type: number
          format: double
          description: The amount of the payment. Must contain at most two digits of precision e.g. `1.23`. Minimum accepted value is `1`.
      required:
      - currency
      - value
      description: The amount and currency of a payment
    PaymentAmountNullable:
      title: PaymentAmount
      type: object
      nullable: true
      additionalProperties: true
      properties:
        currency:
          $ref: '#/components/schemas/PaymentAmountCurrency'
        value:
          type: number
          format: double
          minimum: 0.01
          description: The amount of the payment. Must contain at most two digits of precision e.g. `1.23`.
      required:
      - currency
      - value
      description: The amount and currency of a payment
    PaymentAmountToRefund:
      description: The amount and currency of a payment
      allOf:
      - $ref: '#/components/schemas/PaymentAmountNullable'
      - type: object
        description: An amount to refund the payment partially. If this amount is not specified, the payment is refunded fully for the remaining amount.
    PaymentAmountRefunded:
      description: The amount and currency of a payment
      allOf:
      - $ref: '#/components/schemas/PaymentAmountNullable'
      - type: object
        additionalProperties: true
        description: The amount that has been refunded already. Subtract this from the payment amount to calculate the amount still available to refund.
    PaymentConsentValidDateTime:
      type: object
      title: PaymentConsentValidDateTime
      description: Life span for the payment consent. After the `to` date the payment consent expires and can no longer be used for payment initiation.
      nullable: true
      properties:
        from:
          type: string
          format: date-time
          nullable: true
          description: The date and time from which the consent should be active, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.
        to:
          type: string
          format: date-time
          nullable: true
          description: The date and time at which the consent expires, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.
    PaymentConsentPeriodicAmount:
      type: object
      title: PaymentConsentPeriodicAmount
      description: Defines consent payments limitations per period.
      properties:
        amount:
          $ref: '#/components/schemas/PaymentConsentPeriodicAmountAmount'
        interval:
          $ref: '#/components/schemas/PaymentConsentPeriodicInterval'
        alignment:
          $ref: '#/components/schemas/PaymentConsentPeriodicAlignment'
      required:
      - amount
      - interval
      - alignment
    PaymentConsentPeriodicAmountAmount:
      description: Maximum cumulative amount for all payments in the specified interval.
      allOf:
      - $ref: '#/components/schemas/PaymentAmount'
    PaymentConsentPeriodicInterval:
      type: string
      description: Payment consent periodic interval.
      enum:
      - DAY
      - WEEK
      - MONTH
      - YEAR
    PaymentConsentPeriodicAlignment:
      type: string
      enum:
      - CALENDAR
      - CONSENT
      description: |-
        Where the payment consent period should start.

        `CALENDAR`: line up with a calendar.

        `CONSENT`: on the date of consent creation.
    StandaloneCurrencyCodeList:
      title: StandaloneCurrencyCodeList
      type: object
      additionalProperties: true
      description: The following currency codes are supported by Plaid.
      properties:
        iso_currency_code:
          description: Plaid supports all ISO 4217 currency codes.
          type: string
        unofficial_currency_code:
          $ref: '#/components/schemas/UnofficialCurrencyCodeList'
      required:
      - iso_currency_code
      - unofficial_currency_code
    UnofficialCurrencyCodeList:
      title: UnofficialCurrencyCodeList
      type: string
      description: List of unofficial currency codes
      properties:
        ADA:
          type: string
          description: Cardano
        BAT:
          type: string
          description: Basic Attention Token
        BCH:
          type: string
          description: Bitcoin Cash
        BNB:
          type: string
          description: Binance Coin
        BTC:
          type: string
          description: Bitcoin
        BTG:
          type: string
          description: Bitcoin Gold
        BSV:
          type: string
          description: Bitcoin Satoshi Vision
        CNH:
          type: string
          description: Chinese Yuan (offshore)
        DASH:
          type: string
          description: Dash
        DOGE:
          type: string
          description: Dogecoin
        ETC:
          type: string
          description: Ethereum Classic
        ETH:
          type: string
          description: Ethereum
        GBX:
          type: string
          description: Pence sterling, i.e. British penny
        LSK:
          type: string
          description: Lisk
        NEO:
          type: string
          description: Neo
        OMG:
          type: string
          description: OmiseGO
        QTUM:
          type: string
          description: Qtum
        USDT:
          type: string
          description: Tether
        XLM:
          type: string
          description: Stellar Lumen
        XMR:
          type: string
          description: Monero
        XRP:
          type: string
          description: Ripple
        ZEC:
          type: string
          description: Zcash
        ZRX:
          type: string
          description: 0x
      required:
      - ADA
      - BAT
      - BCH
      - BNB
      - BTC
      - BTG
      - CNH
      - DASH
      - DOGE
      - ETC
      - ETH
      - GBX
      - LSK
      - NEO
      - OMG
      - QTUM
      - USDT
      - XLM
      - XMR
      - XRP
      - ZEC
      - ZRX
    StandaloneAccountType:
      title: StandaloneAccountType
      description: The schema below describes the various `types` and corresponding `subtypes` that Plaid recognizes and reports for financial institution accounts.
      type: object
      additionalProperties: true
      properties:
        depository:
          $ref: '#/components/schemas/DepositoryAccount'
        credit:
          $ref: '#/components/schemas/CreditAccount'
        loan:
          $ref: '#/components/schemas/LoanAccount'
        investment:
          $ref: '#/components/schemas/InvestmentAccountSubtypeStandalone'
        other:
          type: string
          description: 'Other or unknown account type. Supported products for `other` accounts are: Balance, Transactions, Identity, and Assets.'
      required:
      - depository
      - credit
      - loan
      - investment
      - other
    DepositoryAccount:
      title: DepositoryAccount
      description: 'An account type holding cash, in which funds are deposited. Supported products for `depository` accounts are: Auth (`checking` and `savings` types only), Balance, Transactions, Identity, Payment Initiation, Assets, and Investments (`cash management` type only).'
      type: string
      properties:
        checking:
          type: string
          description: Checking account
        savings:
          type: string
          description: Savings account
        hsa:
          type: string
          description: Health Savings Account (US only) that can only hold cash
        cd:
          type: string
          description: Certificate of deposit account
        money market:
          type: string
          description: Money market account
        paypal:
          type: string
          description: PayPal depository account
        prepaid:
          type: string
          description: Prepaid debit card
        cash management:
          type: string
          description: A cash management account, typically a cash account at a brokerage
        ebt:
          type: string
          description: An Electronic Benefit Transfer (EBT) account, used by certain public assistance programs to distribute funds (US only)
      required:
      - checking
      - savings
      - hsa
      - cd
      - money market
      - paypal
      - prepaid
      - cash management
      - ebt
    CreditAccount:
      title: CreditAccount
      type: string
      description: 'A credit card type account. Supported products for `credit` accounts are: Balance, Transactions, Identity, and Liabilities.'
      properties:
        credit card:
          type: string
          description: Bank-issued credit card
        paypal:
          type: string
          description: PayPal-issued credit card
      required:
      - credit card
      - paypal
    LoanAccount:
      title: LoanAccount
      type: string
      description: 'A loan type account. Supported products for `loan` accounts are: Balance, Liabilities, and Transactions.'
      properties:
        auto:
          type: string
          description: Auto loan
        business:
          type: string
          description: Business loan
        commercial:
          type: string
          description: Commercial loan
        construction:
          type: string
          description: Construction loan
        consumer:
          type: string
          description: Consumer loan
        home equity:
          type: string
          description: Home Equity Line of Credit (HELOC)
        loan:
          type: string
          description: General loan
        mortgage:
          type: string
          description: Mortgage loan
        overdraft:
          type: string
          description: Pre-approved overdraft account, usually tied to a checking account
        line of credit:
          type: string
          description: Pre-approved line of credit
        student:
          type: string
          description: Student loan
        other:
          type: string
          description: Other loan type or unknown loan type
      required:
      - auto
      - business
      - commercial
      - construction
      - consumer
      - home equity
      - loan
      - mortgage
      - overdraft
      - line of credit
      - student
      - other
    InvestmentAccountSubtypeStandalone:
      title: InvestmentAccountSubtype
      type: string
      description: 'An investment account. Supported products for `investment` accounts are: Balance and Investments. In API versions 2018-05-22 and earlier, this type is called `brokerage`.'
      properties:
        "529":
          type: string
          description: |
            Tax-advantaged college savings and prepaid tuition 529 plans (US)
        401a:
          type: string
          description: Employer-sponsored money-purchase 401(a) retirement plan (US)
        401k:
          type: string
          description: Standard 401(k) retirement account (US)
        403B:
          type: string
          description: 403(b) retirement savings account for non-profits and schools (US)
        457b:
          type: string
          description: Tax-advantaged deferred-compensation 457(b) retirement plan for governments and non-profits (US)
        brokerage:
          type: string
          description: Standard brokerage account
        cash isa:
          type: string
          description: Individual Savings Account (ISA) that pays interest tax-free (UK)
        crypto exchange:
          type: string
          description: Standard cryptocurrency exchange account
        education savings account:
          type: string
          description: Tax-advantaged Coverdell Education Savings Account (ESA) (US)
        fixed annuity:
          type: string
          description: Fixed annuity
        gic:
          type: string
          description: Guaranteed Investment Certificate (Canada)
        health reimbursement arrangement:
          type: string
          description: Tax-advantaged Health Reimbursement Arrangement (HRA) benefit plan (US)
        hsa:
          type: string
          description: |
            Non-cash tax-advantaged medical Health Savings Account (HSA) (US)
        ira:
          type: string
          description: Traditional Individual Retirement Account (IRA) (US)
        isa:
          type: string
          description: Non-cash Individual Savings Account (ISA) (UK)
        keogh:
          type: string
          description: Keogh self-employed retirement plan (US)
        lif:
          type: string
          description: |
            Life Income Fund (LIF) retirement account (Canada)
        life insurance:
          type: string
          description: Life insurance account
        lira:
          type: string
          description: Locked-in Retirement Account (LIRA) (Canada)
        lrif:
          type: string
          description: Locked-in Retirement Income Fund (LRIF) (Canada)
        lrsp:
          type: string
          description: Locked-in Retirement Savings Plan (Canada)
        mutual fund:
          type: string
          description: Mutual fund account
        non-custodial wallet:
          type: string
          description: A cryptocurrency wallet where the user controls the private key
        non-taxable brokerage account:
          type: string
          description: A non-taxable brokerage account that is not covered by a more specific subtype
        other:
          type: string
          description: An account whose type could not be determined
        other annuity:
          type: string
          description: An annuity account not covered by other subtypes
        other insurance:
          type: string
          description: An insurance account not covered by other subtypes
        pension:
          type: string
          description: Standard pension account
        prif:
          type: string
          description: Prescribed Registered Retirement Income Fund (Canada)
        profit sharing plan:
          type: string
          description: Plan that gives employees share of company profits
        qshr:
          type: string
          description: Qualifying share account
        rdsp:
          type: string
          description: Registered Disability Savings Plan (RSDP) (Canada)
        resp:
          type: string
          description: Registered Education Savings Plan (Canada)
        retirement:
          type: string
          description: Retirement account not covered by other subtypes
        rlif:
          type: string
          description: Restricted Life Income Fund (RLIF) (Canada)
        roth:
          type: string
          description: Roth IRA (US)
        roth 401k:
          type: string
          description: Employer-sponsored Roth 401(k) plan (US)
        rrif:
          type: string
          description: Registered Retirement Income Fund (RRIF) (Canada)
        rrsp:
          type: string
          description: Registered Retirement Savings Plan (Canadian, similar to US 401(k))
        sarsep:
          type: string
          description: Salary Reduction Simplified Employee Pension Plan (SARSEP), discontinued retirement plan (US)
        sep ira:
          type: string
          description: Simplified Employee Pension IRA (SEP IRA), retirement plan for small businesses and self-employed (US)
        simple ira:
          type: string
          description: Savings Incentive Match Plan for Employees IRA, retirement plan for small businesses (US)
        sipp:
          type: string
          description: Self-Invested Personal Pension (SIPP) (UK)
        stock plan:
          type: string
          description: Standard stock plan account
        tfsa:
          type: string
          description: Tax-Free Savings Account (TFSA), a retirement plan similar to a Roth IRA (Canada)
        trust:
          type: string
          description: Account representing funds or assets held by a trustee for the benefit of a beneficiary. Includes both revocable and irrevocable trusts.
        ugma:
          type: string
          description: '''Uniform Gift to Minors Act'' (brokerage account for minors, US)'
        utma:
          type: string
          description: |
            'Uniform Transfers to Minors Act' (brokerage account for minors, US)
        variable annuity:
          type: string
          description: Tax-deferred capital accumulation annuity contract
      required:
      - "529"
      - 401a
      - 401k
      - 403B
      - 457b
      - brokerage
      - cash isa
      - crypto exchange
      - education savings account
      - fixed annuity
      - gic
      - health reimbursement arrangement
      - hsa
      - ira
      - isa
      - keogh
      - lif
      - life insurance
      - lira
      - lrif
      - lrsp
      - mutual fund
      - non-custodial wallet
      - non-taxable brokerage account
      - other
      - other annuity
      - other insurance
      - pension
      - prif
      - profit sharing plan
      - qshr
      - rdsp
      - resp
      - retirement
      - rlif
      - roth
      - roth 401k
      - rrif
      - rrsp
      - sarsep
      - sep ira
      - simple ira
      - sipp
      - stock plan
      - tfsa
      - trust
      - ugma
      - utma
      - variable annuity
    PaymentStatusUpdateWebhook:
      title: PaymentStatusUpdateWebhook
      type: object
      additionalProperties: true
      description: Fired when the status of a payment has changed.
      x-examples:
        example-1:
          webhook_type: PAYMENT_INITIATION
          webhook_code: PAYMENT_STATUS_UPDATE
          payment_id: payment-id-production-2ba30780-d549-4335-b1fe-c2a938aa39d2
          new_payment_status: PAYMENT_STATUS_INITIATED
          old_payment_status: PAYMENT_STATUS_PROCESSING
          original_reference: Account Funding 99744
          adjusted_reference: Account Funding 99
          original_start_date: "2017-09-14"
          adjusted_start_date: "2017-09-15"
          timestamp: "2017-09-14T14:42:19.350Z"
          environment: production
      properties:
        webhook_type:
          type: string
          description: '`PAYMENT_INITIATION`'
        webhook_code:
          type: string
          description: '`PAYMENT_STATUS_UPDATE`'
        payment_id:
          type: string
          description: The `payment_id` for the payment being updated
        transaction_id:
          type: string
          description: The transaction ID that this payment is associated with, if any. This is present only when a payment was initiated using virtual accounts.
          nullable: true
        new_payment_status:
          $ref: '#/components/schemas/PaymentInitiationPaymentStatus'
        old_payment_status:
          $ref: '#/components/schemas/PaymentInitiationPaymentStatus'
        original_reference:
          type: string
          description: The original value of the reference when creating the payment.
          nullable: true
        adjusted_reference:
          type: string
          description: The value of the reference sent to the bank after adjustment to pass bank validation rules.
          nullable: true
        original_start_date:
          format: date
          type: string
          description: The original value of the `start_date` provided during the creation of a standing order. If the payment is not a standing order, this field will be `null`.
          nullable: true
        adjusted_start_date:
          format: date
          type: string
          description: The start date sent to the bank after adjusting for holidays or weekends.  Will be provided in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD). If the start date did not require adjustment, or if the payment is not a standing order, this field will be `null`.
          nullable: true
        timestamp:
          type: string
          format: date-time
          description: The timestamp of the update, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format, e.g. `"2017-09-14T14:42:19.350Z"`
        error:
          $ref: '#/components/schemas/PlaidError'
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - payment_id
      - new_payment_status
      - old_payment_status
      - original_reference
      - original_start_date
      - adjusted_start_date
      - timestamp
      - environment
    WalletTransactionStatusUpdateWebhook:
      title: WalletTransactionStatusUpdateWebhook
      type: object
      additionalProperties: true
      description: Fired when the status of a wallet transaction has changed.
      x-examples:
        example-1:
          webhook_type: WALLET
          webhook_code: WALLET_TRANSACTION_STATUS_UPDATE
          transaction_id: wallet-transaction-id-production-2ba30780-d549-4335-b1fe-c2a938aa39d2
          payment_id: payment-id-production-feca8a7a-5591-4aef-9297-f3062bb735d3
          wallet_id: wallet-id-production-53e58b32-fc1c-46fe-bbd6-e584b27a88
          new_status: SETTLED
          old_status: INITIATED
          timestamp: "2017-09-14T14:42:19.350Z"
          environment: production
      properties:
        webhook_type:
          type: string
          description: '`WALLET`'
        webhook_code:
          type: string
          description: '`WALLET_TRANSACTION_STATUS_UPDATE`'
        transaction_id:
          type: string
          description: The `transaction_id` for the wallet transaction being updated
        payment_id:
          type: string
          description: The `payment_id` associated with the transaction. This will be present in case of `REFUND` and `PIS_PAY_IN`.
          nullable: true
        wallet_id:
          type: string
          description: The EMI (E-Money Institution) wallet that this payment is associated with. This wallet is used as an intermediary account to enable Plaid to reconcile the settlement of funds for Payment Initiation requests.
        new_status:
          $ref: '#/components/schemas/WalletTransactionStatus'
        old_status:
          $ref: '#/components/schemas/WalletTransactionStatus'
        timestamp:
          type: string
          format: date-time
          description: The timestamp of the update, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format, e.g. `"2017-09-14T14:42:19.350Z"`
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - transaction_id
      - new_status
      - old_status
      - timestamp
      - environment
    Holding:
      title: Holding
      type: object
      additionalProperties: true
      description: A securities holding at an institution.
      properties:
        account_id:
          type: string
          description: The Plaid `account_id` associated with the holding.
        security_id:
          type: string
          description: The Plaid `security_id` associated with the holding. Security data is not specific to a user's account; any user who held the same security at the same financial institution at the same time would have identical security data. The `security_id` for the same security will typically be the same across different institutions, but this is not guaranteed. The `security_id` does not typically change, but may change if inherent details of the security change due to a corporate action, for example, in the event of a ticker symbol change or CUSIP change.
        institution_price:
          type: number
          format: double
          description: The last price given by the institution for this security.
        institution_price_as_of:
          type: string
          format: date
          description: The date at which `institution_price` was current.
          nullable: true
        institution_price_datetime:
          type: string
          format: date-time
          description: |
            Date and time at which `institution_price` was current, in ISO 8601 format (YYYY-MM-DDTHH:mm:ssZ).

            This field is returned for select financial institutions and comes as provided by the institution. It may contain default time values (such as 00:00:00).
          nullable: true
        institution_value:
          type: number
          format: double
          description: The value of the holding, as reported by the institution.
        cost_basis:
          type: number
          format: double
          description: The total cost basis of the holding (e.g., the total amount spent to acquire all assets currently in the holding).
          nullable: true
        quantity:
          description: The total quantity of the asset held, as reported by the financial institution. If the security is an option, `quantity` will reflect the total number of options (typically the number of contracts multiplied by 100), not the number of contracts.
          type: number
          format: double
        iso_currency_code:
          type: string
          description: The ISO-4217 currency code of the holding. Always `null` if `unofficial_currency_code` is non-`null`.
          nullable: true
        unofficial_currency_code:
          type: string
          description: |
            The unofficial currency code associated with the holding. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.

            See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
          nullable: true
      required:
      - account_id
      - security_id
      - institution_price
      - institution_value
      - cost_basis
      - quantity
      - iso_currency_code
      - unofficial_currency_code
    Security:
      title: Security
      type: object
      additionalProperties: true
      description: Contains details about a security
      properties:
        security_id:
          type: string
          description: A unique, Plaid-specific identifier for the security, used to associate securities with holdings. Like all Plaid identifiers, the `security_id` is case sensitive. The `security_id` may change if inherent details of the security change due to a corporate action, for example, in the event of a ticker symbol change or CUSIP change.
        isin:
          type: string
          nullable: true
          description: 12-character ISIN, a globally unique securities identifier. A verified CUSIP Global Services license is required to receive this data. This field will be null by default for new customers, and null for existing customers starting March 12, 2024. If you would like access to this field, please start the verification process [here](https://docs.google.com/forms/d/e/1FAIpQLSd9asHEYEfmf8fxJTHZTAfAzW4dugsnSu-HS2J51f1mxwd6Sw/viewform).
        cusip:
          nullable: true
          type: string
          description: 9-character CUSIP, an identifier assigned to North American securities. A verified CUSIP Global Services license is required to receive this data. This field will be null by default for new customers, and null for existing customers starting March 12, 2024. If you would like access to this field, please start the verification process [here](https://docs.google.com/forms/d/e/1FAIpQLSd9asHEYEfmf8fxJTHZTAfAzW4dugsnSu-HS2J51f1mxwd6Sw/viewform).
        sedol:
          nullable: true
          type: string
          description: 7-character SEDOL, an identifier assigned to securities in the UK.
        institution_security_id:
          nullable: true
          type: string
          description: An identifier given to the security by the institution
        institution_id:
          nullable: true
          type: string
          description: If `institution_security_id` is present, this field indicates the Plaid `institution_id` of the institution to whom the identifier belongs.
        proxy_security_id:
          nullable: true
          type: string
          description: In certain cases, Plaid will provide the ID of another security whose performance resembles this security, typically when the original security has low volume, or when a private security can be modeled with a publicly traded security.
        name:
          nullable: true
          type: string
          description: A descriptive name for the security, suitable for display.
        ticker_symbol:
          type: string
          nullable: true
          description: The security’s trading symbol for publicly traded securities, and otherwise a short identifier if available.
        is_cash_equivalent:
          nullable: true
          type: boolean
          description: Indicates that a security is a highly liquid asset and can be treated like cash.
        type:
          nullable: true
          type: string
          description: |-
            The security type of the holding. Valid security types are:

            `cash`: Cash, currency, and money market funds

            `cryptocurrency`: Digital or virtual currencies

            `derivative`: Options, warrants, and other derivative instruments

            `equity`: Domestic and foreign equities

            `etf`: Multi-asset exchange-traded investment funds

            `fixed income`: Bonds and certificates of deposit (CDs)

            `loan`: Loans and loan receivables

            `mutual fund`: Open- and closed-end vehicles pooling funds of multiple investors

            `other`: Unknown or other investment types
        close_price:
          type: number
          format: double
          nullable: true
          description: |
            Price of the security at the close of the previous trading session. Null for non-public securities.

            If the security is a foreign currency this field will be updated daily and will be priced in USD.

            If the security is a cryptocurrency, this field will be updated multiple times a day. As crypto prices can fluctuate quickly and data may become stale sooner than other asset classes, refer to `update_datetime` with the time when the price was last updated.
        close_price_as_of:
          type: string
          nullable: true
          format: date
          description: Date for which `close_price` is accurate. Always `null` if `close_price` is `null`.
        update_datetime:
          type: string
          nullable: true
          format: date-time
          description: Date and time at which `close_price` is accurate, in ISO 8601 format (YYYY-MM-DDTHH:mm:ssZ). Always `null` if `close_price` is `null`.
        iso_currency_code:
          type: string
          nullable: true
          description: The ISO-4217 currency code of the price given. Always `null` if `unofficial_currency_code` is non-`null`.
        unofficial_currency_code:
          nullable: true
          type: string
          description: |-
            The unofficial currency code associated with the security. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.

            See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
        market_identifier_code:
          nullable: true
          type: string
          description: The ISO-10383 Market Identifier Code of the exchange or market in which the security is being traded.
        option_contract:
          $ref: '#/components/schemas/OptionContract'
      required:
      - cusip
      - sedol
      - isin
      - institution_security_id
      - institution_id
      - proxy_security_id
      - name
      - ticker_symbol
      - is_cash_equivalent
      - close_price
      - close_price_as_of
      - iso_currency_code
      - unofficial_currency_code
      - security_id
      - type
      - market_identifier_code
      - option_contract
    InvestmentTransactionType:
      type: string
      enum:
      - buy
      - sell
      - cancel
      - cash
      - fee
      - transfer
      description: |-
        Value is one of the following:
        `buy`: Buying an investment
        `sell`: Selling an investment
        `cancel`: A cancellation of a pending transaction
        `cash`: Activity that modifies a cash position
        `fee`: A fee on the account
        `transfer`: Activity which modifies a position, but not through buy/sell activity e.g. options exercise, portfolio transfer

        For descriptions of possible transaction types and subtypes, see the [Investment transaction types schema](https://plaid.com/docs/api/accounts/#investment-transaction-types-schema).
    InvestmentTransactionSubtype:
      type: string
      description: For descriptions of possible transaction types and subtypes, see the [Investment transaction types schema](https://plaid.com/docs/api/accounts/#investment-transaction-types-schema).
      enum:
      - account fee
      - adjustment
      - assignment
      - buy
      - buy to cover
      - contribution
      - deposit
      - distribution
      - dividend
      - dividend reinvestment
      - exercise
      - expire
      - fund fee
      - interest
      - interest receivable
      - interest reinvestment
      - legal fee
      - loan payment
      - long-term capital gain
      - long-term capital gain reinvestment
      - management fee
      - margin expense
      - merger
      - miscellaneous fee
      - non-qualified dividend
      - non-resident tax
      - pending credit
      - pending debit
      - qualified dividend
      - rebalance
      - return of principal
      - request
      - sell
      - sell short
      - send
      - short-term capital gain
      - short-term capital gain reinvestment
      - spin off
      - split
      - stock distribution
      - tax
      - tax withheld
      - trade
      - transfer
      - transfer fee
      - trust fee
      - unqualified gain
      - withdrawal
    OptionContract:
      title: OptionContract
      type: object
      additionalProperties: true
      nullable: true
      description: |-
        Details about the option security.

        For the Sandbox environment, this data is currently only available if the item is using a custom configuration object, and the `ticker` field of the custom security follows the [OCC Option Symbol](https://en.wikipedia.org/wiki/Option_symbol#The_OCC_Option_Symbol) standard with no spaces.
      properties:
        contract_type:
          type: string
          description: |-
            The type of this option contract. It is one of:

            `put`: for Put option contracts

            `call`: for Call option contracts
        expiration_date:
          type: string
          format: date
          description: The expiration date for this option contract, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.
        strike_price:
          type: number
          format: double
          description: The strike price for this option contract, per share of security.
        underlying_security_ticker:
          type: string
          description: The ticker of the underlying security for this option contract.
      required:
      - contract_type
      - expiration_date
      - strike_price
      - underlying_security_ticker
    InvestmentTransaction:
      title: InvestmentTransaction
      type: object
      additionalProperties: true
      description: A transaction within an investment account.
      properties:
        investment_transaction_id:
          type: string
          description: The ID of the Investment transaction, unique across all Plaid transactions. Like all Plaid identifiers, the `investment_transaction_id` is case sensitive.
        cancel_transaction_id:
          type: string
          deprecated: true
          description: A legacy field formerly used internally by Plaid to identify certain canceled transactions.
          nullable: true
        account_id:
          type: string
          description: The `account_id` of the account against which this transaction posted.
        security_id:
          type: string
          description: The `security_id` to which this transaction is related.
          nullable: true
        date:
          type: string
          format: date
          description: The [ISO 8601](https://wikipedia.org/wiki/ISO_8601) posting date for the transaction.
        name:
          type: string
          description: The institution’s description of the transaction.
        quantity:
          type: number
          format: double
          description: The number of units of the security involved in this transaction. Positive for buy transactions; negative for sell transactions.
        amount:
          description: The complete value of the transaction. Positive values when cash is debited, e.g. purchases of stock; negative values when cash is credited, e.g. sales of stock. Treatment remains the same for cash-only movements unassociated with securities.
          type: number
          format: double
        price:
          description: The price of the security at which this transaction occurred.
          type: number
          format: double
        fees:
          type: number
          format: double
          description: The combined value of all fees applied to this transaction
          nullable: true
        type:
          $ref: '#/components/schemas/InvestmentTransactionType'
        subtype:
          $ref: '#/components/schemas/InvestmentTransactionSubtype'
        iso_currency_code:
          type: string
          description: The ISO-4217 currency code of the transaction. Always `null` if `unofficial_currency_code` is non-`null`.
          nullable: true
        unofficial_currency_code:
          type: string
          description: |-
            The unofficial currency code associated with the holding. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.

            See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
          nullable: true
      required:
      - investment_transaction_id
      - account_id
      - security_id
      - date
      - name
      - quantity
      - amount
      - price
      - fees
      - type
      - subtype
      - iso_currency_code
      - unofficial_currency_code
    StandaloneInvestmentTransactionType:
      title: StandaloneInvestmentTransactionType
      type: object
      additionalProperties: true
      description: Valid values for investment transaction types and subtypes. Note that transactions representing inflow of cash will appear as negative amounts, outflow of cash will appear as positive amounts.
      properties:
        buy:
          $ref: '#/components/schemas/StandaloneInvestmentTransactionBuyType'
        sell:
          $ref: '#/components/schemas/StandaloneInvestmentTransactionSellType'
        cancel:
          type: string
          description: A cancellation of a pending transaction
        cash:
          $ref: '#/components/schemas/StandaloneInvestmentTransactionCashType'
        fee:
          $ref: '#/components/schemas/StandaloneInvestmentTransactionFeeType'
        transfer:
          $ref: '#/components/schemas/StandaloneInvestmentTransactionTransferType'
      required:
      - buy
      - sell
      - cancel
      - cash
      - fee
      - transfer
    StandaloneInvestmentTransactionBuyType:
      title: BuyType
      description: Buying an investment
      type: string
      properties:
        assignment:
          type: string
          description: Assignment of short option holding
        contribution:
          type: string
          description: Inflow of assets into a tax-advantaged account
        buy:
          type: string
          description: Purchase to open or increase a position
        buy to cover:
          type: string
          description: Purchase to close a short position
        dividend reinvestment:
          type: string
          description: Purchase using proceeds from a cash dividend
        interest reinvestment:
          type: string
          description: Purchase using proceeds from a cash interest payment
        long-term capital gain reinvestment:
          type: string
          description: Purchase using long-term capital gain cash proceeds
        short-term capital gain reinvestment:
          type: string
          description: Purchase using short-term capital gain cash proceeds
    StandaloneInvestmentTransactionCashType:
      title: CashType
      description: Activity that modifies a cash position
      type: string
      properties:
        account fee:
          type: string
          description: Fees paid for account maintenance
        contribution:
          type: string
          description: Inflow of assets into a tax-advantaged account
        deposit:
          type: string
          description: Inflow of cash into an account
        dividend:
          type: string
          description: Inflow of cash from a dividend
        stock distribution:
          type: string
          description: Inflow of stock from a distribution
        interest:
          type: string
          description: Inflow of cash from interest
        legal fee:
          type: string
          description: Fees paid for legal charges or services
        long-term capital gain:
          type: string
          description: Long-term capital gain received as cash
        management fee:
          type: string
          description: Fees paid for investment management of a mutual fund or other pooled investment vehicle
        margin expense:
          type: string
          description: Fees paid for maintaining margin debt
        non-qualified dividend:
          type: string
          description: Inflow of cash from a non-qualified dividend
        non-resident tax:
          type: string
          description: Taxes paid on behalf of the investor for non-residency in investment jurisdiction
        pending credit:
          type: string
          description: Pending inflow of cash
        pending debit:
          type: string
          description: Pending outflow of cash
        qualified dividend:
          type: string
          description: Inflow of cash from a qualified dividend
        short-term capital gain:
          type: string
          description: Short-term capital gain received as cash
        tax:
          type: string
          description: Taxes paid on behalf of the investor
        tax withheld:
          type: string
          description: Taxes withheld on behalf of the customer
        transfer fee:
          type: string
          description: Fees incurred for transfer of a holding or account
        trust fee:
          type: string
          description: Fees related to administration of a trust account
        unqualified gain:
          type: string
          description: Unqualified capital gain received as cash
        withdrawal:
          type: string
          description: Outflow of cash from an account
    StandaloneInvestmentTransactionFeeType:
      title: FeeType
      description: Fees on the account, e.g. commission, bookkeeping, options-related.
      type: string
      properties:
        account fee:
          type: string
          description: Fees paid for account maintenance
        adjustment:
          type: string
          description: Increase or decrease in quantity of item
        dividend:
          type: string
          description: Inflow of cash from a dividend
        interest:
          type: string
          description: Inflow of cash from interest
        interest receivable:
          type: string
          description: Inflow of cash from interest receivable
        long-term capital gain:
          type: string
          description: Long-term capital gain received as cash
        legal fee:
          type: string
          description: Fees paid for legal charges or services
        management fee:
          type: string
          description: Fees paid for investment management of a mutual fund or other pooled investment vehicle
        margin expense:
          type: string
          description: Fees paid for maintaining margin debt
        non-qualified dividend:
          type: string
          description: Inflow of cash from a non-qualified dividend
        non-resident tax:
          type: string
          description: Taxes paid on behalf of the investor for non-residency in investment jurisdiction
        qualified dividend:
          type: string
          description: Inflow of cash from a qualified dividend
        return of principal:
          type: string
          description: Repayment of loan principal
        short-term capital gain:
          type: string
          description: Short-term capital gain received as cash
        stock distribution:
          type: string
          description: Inflow of stock from a distribution
        tax:
          type: string
          description: Taxes paid on behalf of the investor
        tax withheld:
          type: string
          description: Taxes withheld on behalf of the customer
        transfer fee:
          type: string
          description: Fees incurred for transfer of a holding or account
        trust fee:
          type: string
          description: Fees related to administration of a trust account
        unqualified gain:
          type: string
          description: Unqualified capital gain received as cash
    StandaloneInvestmentTransactionSellType:
      title: SellType
      description: Selling an investment
      type: string
      properties:
        distribution:
          type: string
          description: Outflow of assets from a tax-advantaged account
        exercise:
          type: string
          description: Exercise of an option or warrant contract
        sell:
          type: string
          description: Sell to close or decrease an existing holding
        sell short:
          type: string
          description: Sell to open a short position
    StandaloneInvestmentTransactionTransferType:
      title: TransferType
      description: Activity that modifies a position, but not through buy/sell activity e.g. options exercise, portfolio transfer
      type: string
      properties:
        assignment:
          type: string
          description: Assignment of short option holding
        adjustment:
          type: string
          description: Increase or decrease in quantity of item
        exercise:
          type: string
          description: Exercise of an option or warrant contract
        expire:
          type: string
          description: Expiration of an option or warrant contract
        merger:
          type: string
          description: Stock exchanged at a pre-defined ratio as part of a merger between companies
        request:
          type: string
          description: Request fiat or cryptocurrency to an address or email
        send:
          type: string
          description: Inflow or outflow of fiat or cryptocurrency to an address or email
        spin off:
          type: string
          description: Inflow of stock from spin-off transaction of an existing holding
        split:
          type: string
          description: Inflow of stock from a forward split of an existing holding
        trade:
          type: string
          description: Trade of one cryptocurrency for another
        transfer:
          type: string
          description: Movement of assets into or out of an account
    AccountSubtypes:
      title: AccountSubtypes
      type: array
      description: 'An array of account subtypes to display in Link. If not specified, all account subtypes will be shown. For a full list of valid types and subtypes, see the [Account schema](https://plaid.com/docs/api/accounts#account-type-schema). '
      items:
        $ref: '#/components/schemas/AccountSubtype'
    UserPermissionRevokedWebhook:
      title: UserPermissionRevokedWebhook
      type: object
      additionalProperties: true
      description: The `USER_PERMISSION_REVOKED` webhook may be fired when an end user has used either the [my.plaid.com portal](https://my.plaid.com) or the financial institution’s OAuth consent portal to revoke the permission that they previously granted to access an Item. This webhook is not guaranteed to always be fired upon consent revocation, since some institutions’ consent portals do not trigger this webhook. Once access to an Item has been revoked, it cannot be restored. If the user subsequently returns to your application, a new Item must be created for the user.
      x-examples:
        example-1:
          webhook_type: ITEM
          webhook_code: USER_PERMISSION_REVOKED
          error:
            error_code: USER_PERMISSION_REVOKED
            error_message: the holder of this account has revoked their permission for your application to access it
            error_type: ITEM_ERROR
            status: 400
          item_id: gAXlMgVEw5uEGoQnnXZ6tn9E7Mn3LBc4PJVKZ
          environment: production
      properties:
        webhook_type:
          type: string
          description: '`ITEM`'
        webhook_code:
          type: string
          description: '`USER_PERMISSION_REVOKED`'
        item_id:
          $ref: '#/components/schemas/ItemId'
        error:
          $ref: '#/components/schemas/PlaidError'
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - item_id
      - environment
    DepositSwitchGetRequest:
      title: DepositSwitchGetRequest
      description: DepositSwitchGetRequest defines the request schema for `/deposit_switch/get`
      type: object
      x-examples: {}
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        deposit_switch_id:
          type: string
          description: The ID of the deposit switch
      required:
      - deposit_switch_id
    DepositSwitchGetResponse:
      title: DepositSwitchGetResponse
      type: object
      additionalProperties: true
      description: DepositSwitchGetResponse defines the response schema for `/deposit_switch/get`
      properties:
        deposit_switch_id:
          type: string
          description: The ID of the deposit switch.
        target_account_id:
          type: string
          nullable: true
          description: The ID of the bank account the direct deposit was switched to.
        target_item_id:
          type: string
          nullable: true
          description: The ID of the Item the direct deposit was switched to.
        state:
          type: string
          enum:
          - initialized
          - processing
          - completed
          - error
          description: |2-

            The state, or status, of the deposit switch.

            - `initialized` – The deposit switch has been initialized with the user entering the information required to submit the deposit switch request.

            - `processing` – The deposit switch request has been submitted and is being processed.

            - `completed` – The user's employer has fulfilled the deposit switch request.

            - `error` – There was an error processing the deposit switch request.
        switch_method:
          nullable: true
          type: string
          enum:
          - instant
          - mail
          - pdf
          - null
          description: |-
            The method used to make the deposit switch.

            - `instant` – User instantly switched their direct deposit to a new or existing bank account by connecting their payroll or employer account.

            - `mail` – User requested that Plaid contact their employer by mail to make the direct deposit switch.

            - `pdf` – User generated a PDF or email to be sent to their employer with the information necessary to make the deposit switch.'
        account_has_multiple_allocations:
          nullable: true
          type: boolean
          description: When `true`, user’s direct deposit goes to multiple banks. When false, user’s direct deposit only goes to the target account. Always `null` if the deposit switch has not been completed.
        is_allocated_remainder:
          nullable: true
          type: boolean
          description: When `true`, the target account is allocated the remainder of direct deposit after all other allocations have been deducted. When `false`, user’s direct deposit is allocated as a percent or amount. Always `null` if the deposit switch has not been completed.
        percent_allocated:
          type: number
          format: double
          nullable: true
          description: The percentage of direct deposit allocated to the target account. Always `null` if the target account is not allocated a percentage or if the deposit switch has not been completed or if `is_allocated_remainder` is true.
        amount_allocated:
          type: number
          format: double
          nullable: true
          description: The dollar amount of direct deposit allocated to the target account. Always `null` if the target account is not allocated an amount or if the deposit switch has not been completed.
        employer_name:
          type: string
          nullable: true
          description: The name of the employer selected by the user. If the user did not select an employer, the value returned is `null`.
        employer_id:
          type: string
          nullable: true
          description: The ID of the employer selected by the user. If the user did not select an employer, the value returned is `null`.
        institution_name:
          type: string
          nullable: true
          description: The name of the institution selected by the user. If the user did not select an institution, the value returned is `null`.
        institution_id:
          type: string
          nullable: true
          description: The ID of the institution selected by the user. If the user did not select an institution, the value returned is `null`.
        date_created:
          description: |
            [ISO 8601](https://wikipedia.org/wiki/ISO_8601) date the deposit switch was created.
          type: string
          format: date
        date_completed:
          type: string
          format: date
          nullable: true
          description: |
            [ISO 8601](https://wikipedia.org/wiki/ISO_8601) date the deposit switch was completed. Always `null` if the deposit switch has not been completed.
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - deposit_switch_id
      - target_account_id
      - target_item_id
      - state
      - account_has_multiple_allocations
      - is_allocated_remainder
      - percent_allocated
      - amount_allocated
      - date_created
      - date_completed
      - request_id
    DepositSwitchStateUpdateWebhook:
      title: DepositSwitchStateUpdateWebhook
      type: object
      description: Fired when the status of a deposit switch request has changed.
      x-examples:
        example-1:
          webhook_type: DEPOSIT_SWITCH
          webhook_code: SWITCH_STATE_UPDATE
          state: completed
          deposit_switch_id: f6f5132f-853b-421c-8c41-d24f93ebc39f
          environment: production
      properties:
        webhook_type:
          type: string
          description: '`"DEPOSIT_SWITCH"`'
        webhook_code:
          type: string
          description: '`"SWITCH_STATE_UPDATE"`'
        state:
          type: string
          description: |2-

            The state, or status, of the deposit switch.

            `initialized`: The deposit switch has been initialized with the user entering the information required to submit the deposit switch request.

            `processing`: The deposit switch request has been submitted and is being processed.

            `completed`: The user's employer has fulfilled and completed the deposit switch request.

            `error`: There was an error processing the deposit switch request.

            For more information, see the [Deposit Switch API reference](/docs/deposit-switch/reference#deposit_switchget).
        deposit_switch_id:
          type: string
          description: The ID of the deposit switch.
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
    FallbackAuthMicrodepositAutoVerifiedWebhook:
      title: FallbackAuthMicrodepositAutoVerifiedWebhook
      type: object
      description: Fires when an account is automatically verified using micro-deposits
      additionalProperties: true
      properties:
        webhook_type:
          type: string
          description: '`AUTH`'
        webhook_code:
          type: string
          description: '`AUTOMATICALLY_VERIFIED`'
        error:
          type: string
          nullable: true
          description: The error code associated with the webhook.
        account_id:
          type: string
          description: The external account ID associated with the micro-deposit
        item_id:
          $ref: '#/components/schemas/ItemId'
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - account_id
      - item_id
      - environment
    FallbackAuthMicrodepositVerificationExpiredWebhook:
      title: FallbackAuthMicrodepositVerificationExpiredWebhook
      type: object
      description: Fires when an account has an expired verification when using micro-deposits
      additionalProperties: true
      properties:
        webhook_type:
          type: string
          description: '`AUTH`'
        webhook_code:
          type: string
          description: '`VERIFICATION_EXPIRED`'
        error:
          type: string
          nullable: true
          description: The error code associated with the webhook.
        account_id:
          type: string
          description: The external account ID associated with the micro-deposit
        item_id:
          $ref: '#/components/schemas/ItemId'
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - account_id
      - item_id
      - environment
    TransferGetRequest:
      title: TransferGetRequest
      type: object
      description: Defines the request schema for `/transfer/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        transfer_id:
          $ref: '#/components/schemas/TransferID'
        originator_client_id:
          deprecated: true
          x-hidden-from-docs: true
          type: string
          nullable: true
          description: The Plaid client ID of the transfer originator. Should only be present if `client_id` is a third-party sender (TPS).
      required:
      - transfer_id
    TransferRecurringGetRequest:
      title: TransferRecurringGetRequest
      type: object
      description: Defines the request schema for `/transfer/recurring/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        recurring_transfer_id:
          $ref: '#/components/schemas/RecurringTransferID'
      required:
      - recurring_transfer_id
    BankTransferGetRequest:
      title: BankTransferGetRequest
      type: object
      description: Defines the request schema for `/bank_transfer/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        bank_transfer_id:
          $ref: '#/components/schemas/BankTransferID'
      required:
      - bank_transfer_id
    TransferGetResponse:
      title: TransferGetResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/transfer/get`
      properties:
        transfer:
          $ref: '#/components/schemas/Transfer'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - transfer
      - request_id
    TransferRecurringGetResponse:
      title: TransferRecurringGetResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/transfer/recurring/get`
      properties:
        recurring_transfer:
          $ref: '#/components/schemas/RecurringTransfer'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - recurring_transfer
      - request_id
    BankTransferGetResponse:
      title: BankTransferGetResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/bank_transfer/get`
      properties:
        bank_transfer:
          $ref: '#/components/schemas/BankTransfer'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - bank_transfer
      - request_id
    TransferID:
      type: string
      title: TransferID
      description: Plaid’s unique identifier for a transfer.
    RecurringTransferID:
      type: string
      title: RecurringTransferID
      description: Plaid’s unique identifier for a recurring transfer.
    TransferTestClockID:
      type: string
      title: TransferTestClockID
      description: Plaid’s unique identifier for a test clock.
    TransferSweepID:
      type: string
      title: TransferSweepID
      description: Plaid’s unique identifier for a sweep.
    TransferSweepIDNullable:
      type: string
      title: TransferSweepID
      description: Plaid’s unique identifier for a sweep.
      nullable: true
    TransferRefundID:
      type: string
      title: TransferRefundID
      description: Plaid’s unique identifier for a refund.
    TransferIDForRefund:
      type: string
      title: TransferID
      description: The ID of the transfer to refund.
    TransferAuthorizationID:
      type: string
      title: TransferAuthorizationID
      description: Plaid’s unique identifier for a transfer authorization.
    BankTransferID:
      type: string
      title: BankTransferID
      description: Plaid’s unique identifier for a bank transfer.
    TransferExpectedSweepSettlementScheduleItem:
      title: TransferExpectedSweepSettlementScheduleItem
      type: object
      additionalProperties: true
      description: Defines an expected sweep date and amount.
      properties:
        sweep_settlement_date:
          type: string
          description: The settlement date of a sweep for this transfer.
          format: date
        swept_settled_amount:
          type: string
          description: The accumulated amount that has been swept by `sweep_settlement_date`.
      required:
      - sweep_settlement_date
      - swept_settled_amount
    Transfer:
      title: Transfer
      type: object
      additionalProperties: true
      description: Represents a transfer within the Transfers API.
      properties:
        id:
          $ref: '#/components/schemas/TransferID'
        authorization_id:
          $ref: '#/components/schemas/TransferAuthorizationID'
        ach_class:
          $ref: '#/components/schemas/ACHClass'
        account_id:
          type: string
          description: The Plaid `account_id` corresponding to the end-user account that will be debited or credited.
        funding_account_id:
          $ref: '#/components/schemas/TransferFundingAccountIDResponseNullable'
        type:
          $ref: '#/components/schemas/TransferType'
        user:
          $ref: '#/components/schemas/TransferUserInResponse'
        amount:
          $ref: '#/components/schemas/TransferAmount'
        description:
          type: string
          description: The description of the transfer.
        created:
          type: string
          format: date-time
          description: The datetime when this transfer was created. This will be of the form `2006-01-02T15:04:05Z`
        status:
          $ref: '#/components/schemas/TransferStatus'
        sweep_status:
          $ref: '#/components/schemas/TransferSweepStatus'
        network:
          $ref: '#/components/schemas/TransferNetwork'
        cancellable:
          type: boolean
          description: When `true`, you can still cancel this transfer.
        failure_reason:
          $ref: '#/components/schemas/TransferFailure'
        metadata:
          $ref: '#/components/schemas/TransferMetadata'
        origination_account_id:
          type: string
          description: Plaid’s unique identifier for the origination account that was used for this transfer.
          deprecated: true
          x-hidden-from-docs: true
        guarantee_decision:
          $ref: '#/components/schemas/TransferAuthorizationGuaranteeDecision'
        guarantee_decision_rationale:
          $ref: '#/components/schemas/TransferAuthorizationGuaranteeDecisionRationale'
        iso_currency_code:
          type: string
          description: The currency of the transfer amount, e.g. "USD"
        standard_return_window:
          type: string
          description: 'The date 3 business days from settlement date indicating the following ACH returns can no longer happen: R01, R02, R03, R29. This will be of the form YYYY-MM-DD.'
          format: date
          nullable: true
        unauthorized_return_window:
          type: string
          description: 'The date 61 business days from settlement date indicating the following ACH returns can no longer happen: R05, R07, R10, R11, R51, R33, R37, R38, R51, R52, R53. This will be of the form YYYY-MM-DD.'
          format: date
          nullable: true
        expected_settlement_date:
          type: string
          description: The expected date when the full amount of the transfer settles at the consumers’ account, if the transfer is credit; or at the customer's business checking account, if the transfer is debit. Only set for ACH transfers and is null for non-ACH transfers. Only set for ACH transfers. This will be of the form YYYY-MM-DD.
          format: date
          nullable: true
        originator_client_id:
          type: string
          nullable: true
          description: The Plaid client ID that is the originator of this transfer. Only present if created on behalf of another client as a [Platform customer](https://plaid.com/docs/transfer/application/#originators-vs-platforms).
        refunds:
          type: array
          description: A list of refunds associated with this transfer.
          items:
            $ref: '#/components/schemas/TransferRefund'
        recurring_transfer_id:
          type: string
          description: The id of the recurring transfer if this transfer belongs to a recurring transfer.
          nullable: true
        expected_sweep_settlement_schedule:
          type: array
          description: The expected sweep settlement schedule of this transfer, assuming this transfer is not `returned`. Only applies to ACH debit transfers.
          items:
            $ref: '#/components/schemas/TransferExpectedSweepSettlementScheduleItem'
        credit_funds_source:
          deprecated: true
          allOf:
          - $ref: '#/components/schemas/TransferCreditFundsSource'
        facilitator_fee:
          $ref: '#/components/schemas/TransferFacilitatorFee'
        network_trace_id:
          $ref: '#/components/schemas/TransferNetworkTraceID'
      required:
      - id
      - authorization_id
      - type
      - user
      - amount
      - description
      - created
      - status
      - network
      - cancellable
      - failure_reason
      - metadata
      - origination_account_id
      - guarantee_decision
      - guarantee_decision_rationale
      - iso_currency_code
      - standard_return_window
      - unauthorized_return_window
      - expected_settlement_date
      - originator_client_id
      - refunds
      - recurring_transfer_id
      - funding_account_id
      - credit_funds_source
    RecurringTransfer:
      title: RecurringTransfer
      type: object
      additionalProperties: true
      description: Represents a recurring transfer within the Transfers API.
      properties:
        recurring_transfer_id:
          $ref: '#/components/schemas/RecurringTransferID'
        created:
          type: string
          format: date-time
          description: The datetime when this transfer was created. This will be of the form `2006-01-02T15:04:05Z`
        next_origination_date:
          type: string
          format: date
          nullable: true
          description: |-
            A date in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).

            The next transfer origination date after bank holiday adjustment.
        test_clock_id:
          type: string
          description: Plaid’s unique identifier for a test clock.
          nullable: true
        type:
          $ref: '#/components/schemas/TransferType'
        amount:
          $ref: '#/components/schemas/TransferAmount'
        status:
          $ref: '#/components/schemas/TransferRecurringStatus'
        ach_class:
          $ref: '#/components/schemas/ACHClass'
        network:
          $ref: '#/components/schemas/TransferNetwork'
        origination_account_id:
          type: string
          description: Plaid’s unique identifier for the origination account that was used for this transfer.
          deprecated: true
          x-hidden-from-docs: true
        account_id:
          type: string
          description: The Plaid `account_id` corresponding to the end-user account that will be debited or credited.
        funding_account_id:
          $ref: '#/components/schemas/TransferFundingAccountIDResponse'
        iso_currency_code:
          type: string
          description: The currency of the transfer amount, e.g. "USD"
        description:
          type: string
          description: The description of the recurring transfer.
        transfer_ids:
          type: array
          items:
            $ref: '#/components/schemas/TransferID'
        user:
          $ref: '#/components/schemas/TransferUserInResponse'
        schedule:
          $ref: '#/components/schemas/TransferRecurringSchedule'
      required:
      - recurring_transfer_id
      - created
      - next_origination_date
      - type
      - amount
      - status
      - network
      - iso_currency_code
      - origination_account_id
      - funding_account_id
      - account_id
      - user
      - schedule
      - description
      - transfer_ids
    RecurringTransferNullable:
      title: RecurringTransferNullable
      type: object
      additionalProperties: true
      description: Represents a recurring transfer within the Transfers API.
      allOf:
      - $ref: '#/components/schemas/RecurringTransfer'
      - type: object
        nullable: true
    TransferTestClock:
      title: TransferTestClock
      type: object
      additionalProperties: true
      description: Defines the test clock for a transfer.
      properties:
        test_clock_id:
          $ref: '#/components/schemas/TransferTestClockID'
        virtual_time:
          $ref: '#/components/schemas/VirtualTime'
      required:
      - test_clock_id
      - virtual_time
    VirtualTime:
      type: string
      title: VirtualTime
      format: date-time
      description: The virtual timestamp on the test clock. This will be of the form `2006-01-02T15:04:05Z`.
    BankTransfer:
      title: BankTransfer
      type: object
      additionalProperties: true
      description: Represents a bank transfer within the Bank Transfers API.
      properties:
        id:
          $ref: '#/components/schemas/BankTransferID'
        ach_class:
          $ref: '#/components/schemas/ACHClass'
        account_id:
          type: string
          description: The account ID that should be credited/debited for this bank transfer.
        type:
          $ref: '#/components/schemas/BankTransferType'
        user:
          $ref: '#/components/schemas/BankTransferUser'
        amount:
          $ref: '#/components/schemas/BankTransferAmount'
        iso_currency_code:
          type: string
          description: The currency of the transfer amount, e.g. "USD"
        description:
          type: string
          description: The description of the transfer.
        created:
          type: string
          format: date-time
          description: The datetime when this bank transfer was created. This will be of the form `2006-01-02T15:04:05Z`
        status:
          $ref: '#/components/schemas/BankTransferStatus'
        network:
          $ref: '#/components/schemas/BankTransferNetwork'
        cancellable:
          type: boolean
          description: When `true`, you can still cancel this bank transfer.
        failure_reason:
          $ref: '#/components/schemas/BankTransferFailure'
        custom_tag:
          type: string
          description: A string containing the custom tag provided by the client in the create request. Will be null if not provided.
          nullable: true
        metadata:
          $ref: '#/components/schemas/BankTransferMetadata'
        origination_account_id:
          type: string
          description: Plaid’s unique identifier for the origination account that was used for this transfer.
        direction:
          $ref: '#/components/schemas/BankTransferDirection'
      required:
      - id
      - ach_class
      - account_id
      - type
      - user
      - amount
      - iso_currency_code
      - description
      - created
      - status
      - network
      - cancellable
      - failure_reason
      - custom_tag
      - metadata
      - origination_account_id
      - direction
    DetailedOriginator:
      type: object
      title: Originator
      additionalProperties: true
      description: Originator and their status.
      properties:
        client_id:
          type: string
          description: Originator’s client ID.
        transfer_diligence_status:
          $ref: '#/components/schemas/TransferDiligenceStatus'
        company_name:
          type: string
          description: The company name of the end customer.
      required:
      - client_id
      - transfer_diligence_status
      - company_name
    Originator:
      type: object
      title: Originator
      additionalProperties: true
      description: Originator and their status.
      properties:
        client_id:
          type: string
          description: Originator’s client ID.
        transfer_diligence_status:
          $ref: '#/components/schemas/TransferDiligenceStatus'
      required:
      - client_id
      - transfer_diligence_status
    ACHClass:
      type: string
      title: ACHClass
      enum:
      - ccd
      - ppd
      - tel
      - web
      description: |-
        Specifies the use case of the transfer. Required for transfers on an ACH network.

        `"ccd"` - Corporate Credit or Debit - fund transfer between two corporate bank accounts

        `"ppd"` - Prearranged Payment or Deposit - the transfer is part of a pre-existing relationship with a consumer, e.g. bill payment

        `"tel"` - Telephone-Initiated Entry

        `"web"` - Internet-Initiated Entry - debits from a consumer’s account where their authorization is obtained over the Internet
    TransferCreditFundsSource:
      type: string
      title: TransferCreditFundsSource
      nullable: true
      enum:
      - sweep
      - prefunded_rtp_credits
      - prefunded_ach_credits
      - null
      description: |-
        This field is now deprecated. You may ignore it for transfers created on and after 12/01/2023.

        Specifies the source of funds for the transfer. Only valid for `credit` transfers, and defaults to `sweep` if not specified. This field is not specified for `debit` transfers.

        `sweep` - Sweep funds from your funding account
        `prefunded_rtp_credits` - Use your prefunded RTP credit balance with Plaid
        `prefunded_ach_credits` - Use your prefunded ACH credit balance with Plaid
    TransferAmount:
      title: TransferAmount
      type: string
      description: The amount of the transfer (decimal string with two digits of precision e.g. "10.00"). When calling `/transfer/authorization/create`, specify the maximum amount to authorize. When calling `/transfer/create`, specify the exact amount of the transfer, up to a maximum of the amount authorized. If this field is left blank when calling `/transfer/create`, the maximum amount authorized in the `authorization_id` will be sent.
    TransferSweepAmount:
      title: TransferSweepAmount
      type: string
      description: A signed amount of how much was `swept` or `return_swept` for this transfer (decimal string with two digits of precision e.g. "-5.50").
      nullable: true
    TransferRefundAmount:
      title: TransferRefundAmount
      type: string
      description: The amount of the refund (decimal string with two digits of precision e.g. "10.00").
    TransferFacilitatorFee:
      title: TransferFacilitatorFee
      type: string
      description: The amount to deduct from `transfer.amount` and distribute to the platform’s Ledger balance as a facilitator fee (decimal string with two digits of precision e.g. "10.00"). The remainder will go to the end-customer’s Ledger balance. This must be less than or equal to the `transfer.amount`.
    TransferNetworkTraceID:
      title: TransferNetworkTraceID
      type: string
      description: |-
        The trace identifier for the transfer based on its network. This will only be set after the transfer has posted.

        For `ach` or `same-day-ach` transfers, this is the ACH trace number. Currently, the field will remain null for transfers on other rails.
      nullable: true
    TransferIntentGetFailureReason:
      title: TransferIntentGetFailureReason
      type: object
      nullable: true
      additionalProperties: true
      description: The reason for a failed transfer intent. Returned only if the transfer intent status is `failed`. Null otherwise.
      properties:
        error_type:
          type: string
          description: A broad categorization of the error.
        error_code:
          type: string
          description: A code representing the reason for a failed transfer intent (i.e., an API error or the authorization being declined).
        error_message:
          type: string
          description: A human-readable description of the code associated with a failed transfer intent.
    TransferIntentCreateMode:
      title: TransferIntentCreateMode
      type: string
      enum:
      - PAYMENT
      - DISBURSEMENT
      description: |-
        The direction of the flow of transfer funds.

        `PAYMENT`: Transfers funds from an end user's account to your business account.

        `DISBURSEMENT`: Transfers funds from your business account to an end user's account.
    BankTransferAmount:
      title: BankTransferAmount
      type: string
      description: The amount of the bank transfer (decimal string with two digits of precision e.g. "10.00").
    TransferCreateIdempotencyKey:
      title: TransferCreateIdempotencyKey
      type: string
      deprecated: true
      x-hidden-from-docs: true
      maxLength: 50
      description: |-
        Deprecated. `authorization_id` is now used as idempotency instead.

        A random key provided by the client, per unique transfer. Maximum of 50 characters.

        The API supports idempotency for safely retrying requests without accidentally performing the same operation twice. For example, if a request to create a transfer fails due to a network connection error, you can retry the request with the same idempotency key to guarantee that only a single transfer is created.
    TransferAuthorizationIdempotencyKey:
      title: TransferAuthorizationIdempotencyKey
      type: string
      nullable: true
      maxLength: 50
      description: |-
        A random key provided by the client, per unique authorization, which expires after 48 hours. Maximum of 50 characters.

        The API supports idempotency for safely retrying requests without accidentally performing the same operation twice. For example, if a request to create an authorization fails due to a network connection error, you can retry the request with the same idempotency key to guarantee that only a single authorization is created.

        This idempotency key expires after 48 hours, after which the same key can be reused. Failure to provide this key may result in duplicate charges.
    TransferRecurringIdempotencyKey:
      title: TransferRecurringIdempotencyKey
      type: string
      maxLength: 50
      description: |-
        A random key provided by the client, per unique recurring transfer. Maximum of 50 characters.

        The API supports idempotency for safely retrying requests without accidentally performing the same operation twice. For example, if a request to create a recurring fails due to a network connection error, you can retry the request with the same idempotency key to guarantee that only a single recurring transfer is created.
    TransferRefundIdempotencyKey:
      title: TransferRefundIdempotencyKey
      type: string
      maxLength: 50
      description: |-
        A random key provided by the client, per unique refund. Maximum of 50 characters.

        The API supports idempotency for safely retrying requests without accidentally performing the same operation twice. For example, if a request to create a refund fails due to a network connection error, you can retry the request with the same idempotency key to guarantee that only a single refund is created.
    LedgerDepositIdempotencyKey:
      title: LedgerDepositIdempotencyKey
      type: string
      maxLength: 50
      description: |-
        A unique key provided by the client, per unique ledger deposit. Maximum of 50 characters.

        The API supports idempotency for safely retrying the request without accidentally performing the same operation twice. For example, if a request to create a ledger deposit fails due to a network connection error, you can retry the request with the same idempotency key to guarantee that only a single deposit is created.
    LedgerDistributeIdempotencyKey:
      title: LedgerDistributeIdempotencyKey
      type: string
      maxLength: 50
      description: |-
        A unique key provided by the client, per unique ledger distribute. Maximum of 50 characters.

        The API supports idempotency for safely retrying the request without accidentally performing the same operation twice. For example, if a request to create a ledger distribute fails due to a network connection error, you can retry the request with the same idempotency key to guarantee that only a single distribute is created.
    LedgerWithdrawIdempotencyKey:
      title: LedgerWithdrawIdempotencyKey
      type: string
      maxLength: 50
      description: |-
        A unique key provided by the client, per unique ledger withdraw. Maximum of 50 characters.

        The API supports idempotency for safely retrying the request without accidentally performing the same operation twice. For example, if a request to create a ledger withdraw fails due to a network connection error, you can retry the request with the same idempotency key to guarantee that only a single withdraw is created.
    BankTransferIdempotencyKey:
      title: BankTransferIdempotencyKey
      type: string
      maxLength: 50
      description: |-
        A random key provided by the client, per unique bank transfer. Maximum of 50 characters.

        The API supports idempotency for safely retrying requests without accidentally performing the same operation twice. For example, if a request to create a bank transfer fails due to a network connection error, you can retry the request with the same idempotency key to guarantee that only a single bank transfer is created.
    TransferAuthorizationUserInRequest:
      title: TransferAuthorizationUserInRequest
      type: object
      description: The legal name and other information for the account holder. The `user.legal_name` field is required. Other fields are not currently used and are present to support planned future functionality.
      properties:
        legal_name:
          type: string
          description: The user's legal name. If the user is a business, provide the business name.
        phone_number:
          type: string
          description: The user's phone number.
        email_address:
          type: string
          description: The user's email address.
        address:
          $ref: '#/components/schemas/TransferUserAddressInRequest'
      required:
      - legal_name
    TransferUserInRequest:
      title: TransferUserInRequest
      type: object
      description: The legal name and other information for the account holder.
      properties:
        legal_name:
          type: string
          description: The user's legal name.
        phone_number:
          type: string
          description: The user's phone number.
        email_address:
          type: string
          description: The user's email address.
        address:
          $ref: '#/components/schemas/TransferUserAddressInRequest'
      required:
      - legal_name
    TransferUserInRequestDeprecated:
      title: TransferUserInRequestDeprecated
      type: object
      description: The legal name and other information for the account holder.
      deprecated: true
      nullable: true
      x-hidden-from-docs: true
      properties:
        legal_name:
          type: string
          description: The user's legal name.
        phone_number:
          type: string
          description: The user's phone number.
        email_address:
          type: string
          description: The user's email address.
        address:
          $ref: '#/components/schemas/TransferUserAddressInRequest'
    TransferUserInResponse:
      title: TransferUserInResponse
      type: object
      additionalProperties: true
      description: The legal name and other information for the account holder.
      properties:
        legal_name:
          type: string
          description: The user's legal name.
        phone_number:
          type: string
          description: The user's phone number.
          nullable: true
        email_address:
          type: string
          description: The user's email address.
          nullable: true
        address:
          $ref: '#/components/schemas/TransferUserAddressInResponse'
      required:
      - legal_name
      - phone_number
      - email_address
      - address
    TransferUserAddressInRequest:
      title: TransferUserAddressInRequest
      type: object
      description: The address associated with the account holder.
      properties:
        street:
          type: string
          description: The street number and name (i.e., "100 Market St.").
        city:
          type: string
          description: Ex. "San Francisco"
        region:
          type: string
          description: The state or province (e.g., "CA").
        postal_code:
          type: string
          description: The postal code (e.g., "94103").
        country:
          type: string
          description: A two-letter country code (e.g., "US").
    TransferUserAddressInResponse:
      title: TransferUserAddressInResponse
      type: object
      nullable: true
      additionalProperties: true
      description: The address associated with the account holder.
      properties:
        street:
          type: string
          description: The street number and name (i.e., "100 Market St.").
          nullable: true
        city:
          type: string
          description: Ex. "San Francisco"
          nullable: true
        region:
          type: string
          description: The state or province (e.g., "CA").
          nullable: true
        postal_code:
          type: string
          description: The postal code (e.g., "94103").
          nullable: true
        country:
          type: string
          description: A two-letter country code (e.g., "US").
          nullable: true
      required:
      - street
      - city
      - region
      - postal_code
      - country
    BankTransferUser:
      title: BankTransferUser
      type: object
      additionalProperties: true
      description: The legal name and other information for the account holder.
      properties:
        legal_name:
          type: string
          description: The account holder’s full legal name. If the transfer `ach_class` is `ccd`, this should be the business name of the account holder.
        email_address:
          type: string
          description: The account holder’s email.
          nullable: true
        routing_number:
          type: string
          description: The account holder's routing number. This field is only used in response data. Do not provide this field when making requests.
          readOnly: true
      required:
      - legal_name
    TransferAuthorizationDecisionRationaleCode:
      type: string
      description: |-
        A code representing the rationale for approving or declining the proposed transfer.

        If the `rationale_code` is `null`, the transfer passed the authorization check.

        Any non-`null` value for an `approved` transfer indicates that the the authorization check could not be run and that you should perform your own risk assessment on the transfer. The code will indicate why the check could not be run. Possible values for an `approved` transfer are:

        `MANUALLY_VERIFIED_ITEM` – Item created via same-day micro deposits, limited information available.

        `ITEM_LOGIN_REQUIRED` – Unable to collect the account information due to Item staleness. Can be resolved by using Link in [update mode](https://www.plaid.com/docs/link/update-mode).

        `MIGRATED_ACCOUNT_ITEM` - Item created via `/transfer/account_migration` endpoint, limited information available.

        `ERROR` – Unable to collect the account information due to an unspecified error.

        The following codes indicate that the authorization decision was `declined`:

        `NSF` – Transaction likely to result in a return due to insufficient funds.

        `RISK` - Transaction is high-risk.

        `TRANSFER_LIMIT_REACHED` - One or several transfer limits are reached, e.g. monthly transfer limit.
      enum:
      - NSF
      - RISK
      - TRANSFER_LIMIT_REACHED
      - MANUALLY_VERIFIED_ITEM
      - ITEM_LOGIN_REQUIRED
      - PAYMENT_PROFILE_LOGIN_REQUIRED
      - ERROR
      - MIGRATED_ACCOUNT_ITEM
      - null
    TransferAuthorizationDecisionRationale:
      title: TransferAuthorizationDecisionRationale
      type: object
      nullable: true
      additionalProperties: true
      description: The rationale for Plaid's decision regarding a proposed transfer. It is always set for `declined` decisions, and may or may not be null for `approved` decisions.
      properties:
        code:
          $ref: '#/components/schemas/TransferAuthorizationDecisionRationaleCode'
        description:
          type: string
          description: A human-readable description of the code associated with a transfer approval or transfer decline.
      required:
      - code
      - description
    TransferAuthorizationGuaranteeDecision:
      type: string
      nullable: true
      x-hidden-from-docs: true
      description: Indicates whether the transfer is guaranteed by Plaid (Guarantee customers only). This field will contain either `GUARANTEED` or `NOT_GUARANTEED` indicating whether Plaid will guarantee the transfer. If the transfer is not guaranteed, additional information will be provided in the `guarantee_decision_rationale` field. Refer to the `code` field in `guarantee_decision_rationale` for details.
      enum:
      - GUARANTEED
      - NOT_GUARANTEED
      - null
    TransferAuthorizationGuaranteeDecisionRationaleCode:
      type: string
      x-hidden-from-docs: true
      description: |-
        A code representing the reason Plaid declined to guarantee this transfer:

        `RETURN_BANK`: The risk of a bank-initiated return (for example, an R01/NSF) is too high to guarantee this transfer.

        `RETURN_CUSTOMER`: The risk of a customer-initiated return (for example, a R10/Unauthorized) is too high to guarantee this transfer.

        `GUARANTEE_LIMIT_REACHED`: This transfer is low-risk, but Guarantee has exhausted an internal limit on the number or rate of guarantees that applies to this transfer.

        `RISK_ESTIMATE_UNAVAILABLE`: A risk estimate is unavailable for this Item.

        `REQUIRED_PARAM_MISSING`: Required fields are missing.
      enum:
      - RETURN_BANK
      - RETURN_CUSTOMER
      - GUARANTEE_LIMIT_REACHED
      - RISK_ESTIMATE_UNAVAILABLE
      - REQUIRED_PARAM_MISSING
    TransferAuthorizationGuaranteeDecisionRationale:
      title: TransferAuthorizationGuaranteeDecisionRationale
      type: object
      nullable: true
      additionalProperties: true
      x-hidden-from-docs: true
      description: The rationale for Plaid's decision to not guarantee a transfer. Will be `null` unless `guarantee_decision` is `NOT_GUARANTEED`.
      properties:
        code:
          $ref: '#/components/schemas/TransferAuthorizationGuaranteeDecisionRationaleCode'
        description:
          type: string
          description: A human-readable description of why the transfer cannot be guaranteed.
      required:
      - code
      - description
    TransferAuthorizationProposedTransfer:
      title: TransferAuthorizationProposedTransfer
      type: object
      additionalProperties: true
      description: Details regarding the proposed transfer.
      properties:
        ach_class:
          $ref: '#/components/schemas/ACHClass'
        account_id:
          type: string
          description: The Plaid `account_id` for the account that will be debited or credited.
        funding_account_id:
          $ref: '#/components/schemas/TransferFundingAccountIDResponseNullable'
        type:
          $ref: '#/components/schemas/TransferType'
        user:
          $ref: '#/components/schemas/TransferUserInResponse'
        amount:
          $ref: '#/components/schemas/TransferAmount'
        network:
          type: string
          description: The network or rails used for the transfer.
        origination_account_id:
          type: string
          description: Plaid's unique identifier for the origination account that was used for this transfer.
          deprecated: true
          x-hidden-from-docs: true
        iso_currency_code:
          type: string
          description: The currency of the transfer amount. The default value is "USD".
        originator_client_id:
          type: string
          nullable: true
          description: The Plaid client ID that is the originator of this transfer. Only present if created on behalf of another client as a [Platform customer](https://plaid.com/docs/transfer/application/#originators-vs-platforms).
        credit_funds_source:
          deprecated: true
          allOf:
          - $ref: '#/components/schemas/TransferCreditFundsSource'
      required:
      - type
      - user
      - amount
      - network
      - origination_account_id
      - iso_currency_code
      - originator_client_id
      - funding_account_id
      - credit_funds_source
    TransferAuthorizationDevice:
      title: TransferAuthorizationDevice
      type: object
      additionalProperties: true
      description: Information about the device being used to initiate the authorization. These fields are not currently incorporated into the risk check.
      properties:
        ip_address:
          type: string
          description: The IP address of the device being used to initiate the authorization.
        user_agent:
          type: string
          description: The user agent of the device being used to initiate the authorization.
    TransferDevice:
      title: TransferDevice
      type: object
      additionalProperties: true
      description: Information about the device being used to initiate the authorization.
      properties:
        ip_address:
          type: string
          description: The IP address of the device being used to initiate the authorization.
        user_agent:
          type: string
          description: The user agent of the device being used to initiate the authorization.
      required:
      - ip_address
      - user_agent
    TransferRecurringSchedule:
      title: TransferRecurringSchedule
      type: object
      description: The schedule that the recurring transfer will be executed on.
      properties:
        interval_unit:
          $ref: '#/components/schemas/TransferScheduleIntervalUnit'
        interval_count:
          $ref: '#/components/schemas/TransferScheduleIntervalCount'
        interval_execution_day:
          description: |-
            The day of the interval on which to schedule the transfer.

            If the `interval_unit` is `week`, `interval_execution_day` should be an integer from 1 (Monday) to 5 (Friday).

            If the `interval_unit` is `month`, `interval_execution_day` should be an integer indicating which day of the month to make the transfer on. Integers from 1 to 28 can be used to make a transfer on that day of the month. Negative integers from -1 to -5 can be used to make a transfer relative to the end of the month. To make a transfer on the last day of the month, use -1; to make the transfer on the second-to-last day, use -2, and so on.

            The transfer will be originated on the next available banking day if the designated day is a non banking day.
          type: integer
        start_date:
          format: date
          type: string
          description: |-
            A date in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD). The recurring transfer will begin on the first `interval_execution_day` on or after the `start_date`.

            If the first `interval_execution_day` on or after the start date is also the same day that `/transfer/recurring/create` was called, the bank *may* make the first payment on that day, but it is not guaranteed to do so.
        end_date:
          format: date
          type: string
          description: |-
            A date in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD). The recurring transfer will end on the last `interval_execution_day` on or before the `end_date`.
            If the `interval_execution_day` between the start date and the end date (inclusive) is also the same day that `/transfer/recurring/create` was called, the bank *may* make a payment on that day, but it is not guaranteed to do so.
          nullable: true
      required:
      - interval_unit
      - interval_count
      - interval_execution_day
      - start_date
    TransferScheduleIntervalUnit:
      type: string
      title: TransferScheduleIntervalUnit
      enum:
      - week
      - month
      description: The unit of the recurring interval.
      minLength: 1
    TransferScheduleIntervalCount:
      type: integer
      title: TransferScheduleIntervalCount
      description: |-
        The number of recurring `interval_units` between originations. The recurring interval (before holiday adjustment) is calculated by multiplying `interval_unit` and `interval_count`.
        For example, to schedule a recurring transfer which originates once every two weeks, set `interval_unit` = `week` and `interval_count` = 2.
    TransferMetadata:
      type: object
      additionalProperties:
        type: string
      title: TransferMetadata
      nullable: true
      maxProperties: 50
      description: |
        The Metadata object is a mapping of client-provided string fields to any string value. The following limitations apply:
        The JSON values must be Strings (no nested JSON objects allowed)
        Only ASCII characters may be used
        Maximum of 50 key/value pairs
        Maximum key length of 40 characters
        Maximum value length of 500 characters
    BankTransferMetadata:
      type: object
      additionalProperties:
        type: string
      title: BankTransferMetadata
      nullable: true
      maxProperties: 50
      description: |
        The Metadata object is a mapping of client-provided string fields to any string value. The following limitations apply:
        The JSON values must be Strings (no nested JSON objects allowed)
        Only ASCII characters may be used
        Maximum of 50 key/value pairs
        Maximum key length of 40 characters
        Maximum value length of 500 characters
    TransferType:
      type: string
      title: TransferType
      description: The type of transfer. This will be either `debit` or `credit`.  A `debit` indicates a transfer of money into the origination account; a `credit` indicates a transfer of money out of the origination account.
      enum:
      - debit
      - credit
    OmittableTransferType:
      type: string
      title: OmittableTransferType
      description: The type of transfer. Valid values are `debit` or `credit`.  A `debit` indicates a transfer of money into the origination account; a `credit` indicates a transfer of money out of the origination account. This field is omitted for Plaid Ledger Sweep events.
      enum:
      - debit
      - credit
    BankTransferType:
      type: string
      title: BankTransferType
      description: The type of bank transfer. This will be either `debit` or `credit`.  A `debit` indicates a transfer of money into the origination account; a `credit` indicates a transfer of money out of the origination account.
      enum:
      - debit
      - credit
    TransferDiligenceStatus:
      type: string
      title: TransferDiligenceStatus
      description: Originator’s diligence status.
      enum:
      - not_submitted
      - submitted
      - under_review
      - approved
      - denied
    TransferStatus:
      type: string
      title: TransferStatus
      description: |-
        The status of the transfer.

        `pending`: A new transfer was created; it is in the pending state.
        `posted`: The transfer has been successfully submitted to the payment network.
        `settled`: Credits are available to be withdrawn or debits have been deducted from the Plaid linked account.
        `cancelled`: The transfer was cancelled by the client.
        `failed`: The transfer failed, no funds were moved.
        `returned`: A posted transfer was returned.
      enum:
      - pending
      - posted
      - settled
      - cancelled
      - failed
      - returned
    TransferRecurringStatus:
      type: string
      title: TransferRecurringStatus
      description: |-
        The status of the recurring transfer.

        `active`: The recurring transfer is currently active.
        `cancelled`: The recurring transfer was cancelled by the client or Plaid.
        `expired`: The recurring transfer has completed all originations according to its recurring schedule.
      enum:
      - active
      - cancelled
      - expired
    TransferSweepStatus:
      type: string
      nullable: true
      title: TransferSweepStatus
      description: |-
        The status of the sweep for the transfer.

        `unswept`: The transfer hasn't been swept yet.
        `swept`: The transfer was swept to the sweep account.
        `swept_settled`: Credits are available to be withdrawn or debits have been deducted from the customer’s business checking account.
        `return_swept`: The transfer was returned, funds were pulled back or pushed back to the sweep account.
        `null`: The transfer will never be swept (e.g. if the transfer is cancelled or returned before being swept)
      enum:
      - null
      - unswept
      - swept
      - swept_settled
      - return_swept
    TransferRefundStatus:
      type: string
      title: TransferRefundStatus
      description: |-
        The status of the refund.

        `pending`: A new refund was created; it is in the pending state.
        `posted`: The refund has been successfully submitted to the payment network.
        `settled`: Credits have been refunded to the Plaid linked account.
        `cancelled`: The refund was cancelled by the client.
        `failed`: The refund has failed.
        `returned`: The refund was returned.
      enum:
      - pending
      - posted
      - cancelled
      - failed
      - settled
      - returned
    BankTransferStatus:
      type: string
      title: BankTransferStatus
      description: The status of the transfer.
      enum:
      - pending
      - posted
      - cancelled
      - failed
      - reversed
    TransferIntentCreateNetwork:
      type: string
      title: TransferIntentCreateNetwork
      description: |-
        The network or rails used for the transfer. Defaults to `same-day-ach`.

        For transfers submitted as `ach`, the next-day cutoff is 5:30 PM Eastern Time.

        For transfers submitted as `same-day-ach`, the same-day cutoff is 3:30 PM Eastern Time. If the transfer is submitted after this cutoff but before the next-day cutoff, it will be sent over next-day rails and will not incur same-day charges; this will apply to both legs of the transfer if applicable.
      enum:
      - ach
      - same-day-ach
      default: same-day-ach
    TransferNetwork:
      type: string
      title: TransferNetwork
      description: |-
        The network or rails used for the transfer.

        For transfers submitted as `ach`, the next-day cutoff is 5:30 PM Eastern Time.

        For transfers submitted as `same-day-ach`, the same-day cutoff is 3:30 PM Eastern Time. If the transfer is submitted after this cutoff but before the next-day cutoff, it will be sent over next-day rails and will not incur same-day charges; this will apply to both legs of the transfer if applicable.

        For transfers submitted as `rtp`,  Plaid will automatically route between Real Time Payment rail by TCH or FedNow rails as necessary. If a transfer is submitted as `rtp` and the counterparty account is not eligible for RTP, the `/transfer/authorization/create` request will fail with an `INVALID_FIELD` error code. To pre-check to determine whether a counterparty account can support RTP, call `/transfer/capabilities/get` before calling `/transfer/authorization/create`.
      enum:
      - ach
      - same-day-ach
      - rtp
    TransferACHNetwork:
      type: string
      title: TransferACHNetwork
      description: |-
        The ACH networks used for the funds flow.

        For requests submitted as either `ach` or `same-day-ach` the cutoff for same-day is 3:30 PM Eastern Time and the cutoff for next-day transfers is 5:30 PM Eastern Time. It is recommended to submit a request at least 15 minutes before the cutoff time in order to ensure that it will be processed before the cutoff. Any request that is indicated as `same-day-ach` and that misses the same-day cutoff, but is submitted in time for the next-day cutoff, will be sent over next-day rails and will not incur same-day charges.
      enum:
      - ach
      - same-day-ach
    BankTransferNetwork:
      type: string
      title: BankTransferNetwork
      description: The network or rails used for the transfer. Valid options are `ach`, `same-day-ach`, or `wire`.
      enum:
      - ach
      - same-day-ach
      - wire
    TransferFailure:
      title: TransferFailure
      type: object
      additionalProperties: true
      nullable: true
      description: The failure reason if the event type for a transfer is `"failed"` or `"returned"`. Null value otherwise.
      properties:
        ach_return_code:
          type: string
          nullable: true
          description: The ACH return code, e.g. `R01`.  A return code will be provided if and only if the transfer status is `returned`. For a full listing of ACH return codes, see [Transfer errors](https://plaid.com/docs/errors/transfer/#ach-return-codes).
        description:
          type: string
          description: A human-readable description of the reason for the failure or reversal.
    BankTransferFailure:
      title: BankTransferFailure
      type: object
      additionalProperties: true
      nullable: true
      description: The failure reason if the type of this transfer is `"failed"` or `"reversed"`. Null value otherwise.
      properties:
        ach_return_code:
          type: string
          nullable: true
          description: The ACH return code, e.g. `R01`.  A return code will be provided if and only if the transfer status is `reversed`. For a full listing of ACH return codes, see [Bank Transfers errors](https://plaid.com/docs/errors/bank-transfers/#ach-return-codes).
        description:
          type: string
          description: A human-readable description of the reason for the failure or reversal.
    TransferAuthorizationCreateRequest:
      title: TransferAuthorizationCreateRequest
      type: object
      description: Defines the request schema for `/transfer/authorization/create`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        access_token:
          $ref: '#/components/schemas/TransferAccessToken'
        account_id:
          $ref: '#/components/schemas/TransferAccountID'
        funding_account_id:
          $ref: '#/components/schemas/TransferMigratedFundingAccountIDRequest'
        payment_profile_token:
          $ref: '#/components/schemas/TransferPaymentProfileToken'
        type:
          $ref: '#/components/schemas/TransferType'
        network:
          $ref: '#/components/schemas/TransferNetwork'
        amount:
          $ref: '#/components/schemas/TransferAmount'
        ach_class:
          $ref: '#/components/schemas/ACHClass'
        user:
          $ref: '#/components/schemas/TransferAuthorizationUserInRequest'
        device:
          $ref: '#/components/schemas/TransferAuthorizationDevice'
        origination_account_id:
          type: string
          description: Plaid's unique identifier for the origination account for this authorization. If not specified, the default account will be used.
          deprecated: true
          x-hidden-from-docs: true
        iso_currency_code:
          type: string
          description: The currency of the transfer amount. The default value is "USD".
        idempotency_key:
          $ref: '#/components/schemas/TransferAuthorizationIdempotencyKey'
        user_present:
          type: boolean
          nullable: true
          description: If the end user is initiating the specific transfer themselves via an interactive UI, this should be `true`; for automatic recurring payments where the end user is not actually initiating each individual transfer, it should be `false`. This field is not currently used and is present to support planned future functionality.
        with_guarantee:
          type: boolean
          nullable: true
          default: true
          x-hidden-from-docs: true
          description: If set to `false`, Plaid will not offer a `guarantee_decision` for this request (Guarantee customers only).
        beacon_session_id:
          x-hidden-from-docs: true
          type: string
          nullable: true
          description: The unique identifier returned by Plaid's [beacon](https://plaid.com/docs/transfer/guarantee/#using-a-beacon) when it is run on your webpage.
        originator_client_id:
          type: string
          nullable: true
          description: The Plaid client ID that is the originator of this transfer. Only needed if creating transfers on behalf of another client as a [Platform customer](https://plaid.com/docs/transfer/application/#originators-vs-platforms).
        credit_funds_source:
          x-hidden-from-docs: true
          deprecated: true
          allOf:
          - $ref: '#/components/schemas/TransferCreditFundsSource'
        test_clock_id:
          type: string
          description: Plaid’s unique identifier for a test clock. This field may only be used when using `sandbox` environment. If provided, the `authorization` is created at the `virtual_time` on the provided test clock.
          nullable: true
      required:
      - type
      - network
      - amount
      - user
      - access_token
      - account_id
    TransferCapabilitiesGetRequest:
      title: TransferCapabilitiesGetRequest
      type: object
      description: Defines the request schema for `/transfer/capabilities/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        access_token:
          $ref: '#/components/schemas/TransferAccessToken'
        account_id:
          $ref: '#/components/schemas/TransferAccountID'
        payment_profile_token:
          $ref: '#/components/schemas/PaymentProfileToken'
      required:
      - access_token
      - account_id
    TransferConfigurationGetRequest:
      title: TransferConfigurationGetRequest
      type: object
      description: Defines the request schema for `/transfer/configuration/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        originator_client_id:
          type: string
          nullable: true
          description: The Plaid client ID of the transfer originator. Should only be present if `client_id` is a [Platform customer](https://plaid.com/docs/transfer/application/#originators-vs-platforms).
    TransferMetricsGetRequest:
      title: TransferMetricsGetRequest
      type: object
      description: Defines the request schema for `/transfer/metrics/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        originator_client_id:
          type: string
          nullable: true
          description: The Plaid client ID of the transfer originator. Should only be present if `client_id` is a [Platform customer](https://plaid.com/docs/transfer/application/#originators-vs-platforms).
    TransferCreateRequest:
      title: TransferCreateRequest
      type: object
      description: Defines the request schema for `/transfer/create`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        idempotency_key:
          $ref: '#/components/schemas/TransferCreateIdempotencyKey'
        access_token:
          $ref: '#/components/schemas/TransferAccessToken'
        account_id:
          $ref: '#/components/schemas/TransferAccountID'
        authorization_id:
          type: string
          description: Plaid’s unique identifier for a transfer authorization. This parameter also serves the purpose of acting as an idempotency identifier.
        type:
          x-hidden-from-docs: true
          deprecated: true
          allOf:
          - $ref: '#/components/schemas/TransferType'
        network:
          x-hidden-from-docs: true
          deprecated: true
          allOf:
          - $ref: '#/components/schemas/TransferNetwork'
        amount:
          $ref: '#/components/schemas/TransferAmount'
        description:
          type: string
          description: The transfer description. Maximum of 15 characters. If reprocessing a returned transfer, please note that the `description` field must be `"Retry 1"` or `"Retry 2"` to indicate that it's a retry of a previously returned transfer. You may retry a transfer up to 2 times, within 180 days of creating the original transfer. Only transfers that were returned with code `R01` or `R09` may be retried. For a full listing of ACH return codes, see [Transfer errors](https://plaid.com/docs/errors/transfer/#ach-return-codes).
          maxLength: 15
        ach_class:
          x-hidden-from-docs: true
          deprecated: true
          allOf:
          - $ref: '#/components/schemas/ACHClass'
        user:
          $ref: '#/components/schemas/TransferUserInRequestDeprecated'
        metadata:
          $ref: '#/components/schemas/TransferMetadata'
        origination_account_id:
          type: string
          x-hidden-from-docs: true
          deprecated: true
          nullable: true
          description: Plaid’s unique identifier for the origination account for this transfer. If you have more than one origination account, this value must be specified. Otherwise, this field should be left blank.
        iso_currency_code:
          type: string
          x-hidden-from-docs: true
          deprecated: true
          description: The currency of the transfer amount. The default value is "USD".
        test_clock_id:
          type: string
          description: Plaid’s unique identifier for a test clock. This field may only be used when using `sandbox` environment. If provided, the `transfer` is created at the `virtual_time` on the provided `test_clock`.
          nullable: true
        facilitator_fee:
          $ref: '#/components/schemas/TransferFacilitatorFee'
      required:
      - access_token
      - account_id
      - authorization_id
      - description
    TransferRecurringCreateRequest:
      title: TransferRecurringCreateRequest
      type: object
      description: Defines the request schema for `/transfer/recurring/create`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        access_token:
          $ref: '#/components/schemas/TransferAccessToken'
        idempotency_key:
          $ref: '#/components/schemas/TransferRecurringIdempotencyKey'
        account_id:
          $ref: '#/components/schemas/TransferAccountID'
        funding_account_id:
          type: string
          description: Specify the account used to fund the transfer. Customers can find a list of `funding_account_id`s in the Accounts page of your Plaid Dashboard, under the "Account ID" column. If this field is left blank, it will default to the default `funding_account_id` specified during onboarding.
          nullable: true
          deprecated: true
          x-hidden-from-docs: true
        type:
          $ref: '#/components/schemas/TransferType'
        network:
          $ref: '#/components/schemas/TransferNetwork'
        ach_class:
          $ref: '#/components/schemas/ACHClass'
        amount:
          $ref: '#/components/schemas/TransferAmount'
        user_present:
          type: boolean
          nullable: true
          description: If the end user is initiating the specific transfer themselves via an interactive UI, this should be `true`; for automatic recurring payments where the end user is not actually initiating each individual transfer, it should be `false`.
        iso_currency_code:
          type: string
          x-hidden-from-docs: true
          deprecated: true
          description: The currency of the transfer amount. The default value is "USD".
        description:
          type: string
          description: The description of the recurring transfer.
        test_clock_id:
          type: string
          description: Plaid’s unique identifier for a test clock. This field may only be used when using `sandbox` environment. If provided, the created `recurring_transfer` is associated with the `test_clock`. New originations are automatically generated when the associated `test_clock` advances.
          nullable: true
        schedule:
          $ref: '#/components/schemas/TransferRecurringSchedule'
        user:
          $ref: '#/components/schemas/TransferUserInRequest'
        device:
          $ref: '#/components/schemas/TransferDevice'
      required:
      - access_token
      - idempotency_key
      - account_id
      - type
      - network
      - amount
      - user
      - schedule
      - description
    BankTransferCreateRequest:
      title: BankTransferCreateRequest
      type: object
      description: Defines the request schema for `/bank_transfer/create`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        idempotency_key:
          $ref: '#/components/schemas/BankTransferIdempotencyKey'
        access_token:
          $ref: '#/components/schemas/BankTransferAccessToken'
        account_id:
          type: string
          description: The Plaid `account_id` for the account that will be debited or credited.
        type:
          $ref: '#/components/schemas/BankTransferType'
        network:
          $ref: '#/components/schemas/BankTransferNetwork'
        amount:
          $ref: '#/components/schemas/BankTransferAmount'
        iso_currency_code:
          type: string
          description: The currency of the transfer amount – should be set to "USD".
        description:
          type: string
          description: The transfer description. Maximum of 10 characters.
          maxLength: 10
        ach_class:
          $ref: '#/components/schemas/ACHClass'
        user:
          $ref: '#/components/schemas/BankTransferUser'
        custom_tag:
          type: string
          maxLength: 100
          nullable: true
          description: An arbitrary string provided by the client for storage with the bank transfer. May be up to 100 characters.
        metadata:
          $ref: '#/components/schemas/BankTransferMetadata'
        origination_account_id:
          type: string
          nullable: true
          description: Plaid’s unique identifier for the origination account for this transfer. If you have more than one origination account, this value must be specified. Otherwise, this field should be left blank.
      required:
      - idempotency_key
      - access_token
      - account_id
      - type
      - network
      - amount
      - iso_currency_code
      - description
      - user
    TransferAuthorizationCreateResponse:
      title: TransferAuthorizationCreateResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/transfer/authorization/create`
      properties:
        authorization:
          $ref: '#/components/schemas/TransferAuthorization'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - authorization
      - request_id
    TransferCapabilitiesGetResponse:
      title: TransferCapabilitiesGetResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/transfer/capabilities/get`
      properties:
        institution_supported_networks:
          $ref: '#/components/schemas/InstitutionSupportedNetworks'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - institution_supported_networks
      - request_id
    TransferConfigurationGetResponse:
      title: TransferConfigurationGetResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/transfer/configuration/get`
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
        max_single_transfer_amount:
          type: string
          description: The max limit of dollar amount of a single transfer (decimal string with two digits of precision e.g. "10.00").
          deprecated: true
          x-hidden-from-docs: true
        max_single_transfer_credit_amount:
          type: string
          description: The max limit of dollar amount of a single credit transfer (decimal string with two digits of precision e.g. "10.00").
        max_single_transfer_debit_amount:
          type: string
          description: The max limit of dollar amount of a single debit transfer (decimal string with two digits of precision e.g. "10.00").
        max_daily_credit_amount:
          type: string
          description: The max limit of sum of dollar amount of credit transfers in last 24 hours (decimal string with two digits of precision e.g. "10.00").
        max_daily_debit_amount:
          type: string
          description: The max limit of sum of dollar amount of debit transfers in last 24 hours (decimal string with two digits of precision e.g. "10.00").
        max_monthly_amount:
          type: string
          description: The max limit of sum of dollar amount of credit and debit transfers in one calendar month (decimal string with two digits of precision e.g. "10.00").
          deprecated: true
          x-hidden-from-docs: true
        max_monthly_credit_amount:
          type: string
          description: The max limit of sum of dollar amount of credit transfers in one calendar month (decimal string with two digits of precision e.g. "10.00").
        max_monthly_debit_amount:
          type: string
          description: The max limit of sum of dollar amount of debit transfers in one calendar month (decimal string with two digits of precision e.g. "10.00").
        iso_currency_code:
          type: string
          description: The currency of the dollar amount, e.g. "USD".
      required:
      - request_id
      - max_single_transfer_amount
      - max_single_transfer_credit_amount
      - max_single_transfer_debit_amount
      - max_daily_credit_amount
      - max_daily_debit_amount
      - max_monthly_amount
      - max_monthly_credit_amount
      - max_monthly_debit_amount
      - iso_currency_code
    TransferMetricsGetResponse:
      title: TransferMetricsGetResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/transfer/metrics/get`
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
        daily_debit_transfer_volume:
          type: string
          description: Sum of dollar amount of debit transfers in last 24 hours (decimal string with two digits of precision e.g. "10.00").
        daily_credit_transfer_volume:
          type: string
          description: Sum of dollar amount of credit transfers in last 24 hours (decimal string with two digits of precision e.g. "10.00").
        monthly_transfer_volume:
          type: string
          description: Sum of dollar amount of credit and debit transfers in current calendar month (decimal string with two digits of precision e.g. "10.00").
          deprecated: true
          x-hidden-from-docs: true
        monthly_debit_transfer_volume:
          type: string
          description: Sum of dollar amount of debit transfers in current calendar month (decimal string with two digits of precision e.g. "10.00").
        monthly_credit_transfer_volume:
          type: string
          description: Sum of dollar amount of credit transfers in current calendar month (decimal string with two digits of precision e.g. "10.00").
        iso_currency_code:
          type: string
          description: The currency of the dollar amount, e.g. "USD".
      required:
      - request_id
      - daily_debit_transfer_volume
      - daily_credit_transfer_volume
      - monthly_transfer_volume
      - monthly_debit_transfer_volume
      - monthly_credit_transfer_volume
      - iso_currency_code
    TransferAuthorizationDecision:
      type: string
      description: |2-

        A decision regarding the proposed transfer.

        `approved` – The proposed transfer has received the end user's consent and has been approved for processing by Plaid. The `decision_rationale` field is set if Plaid was unable to fetch the account information. You may proceed with the transfer, but further review is recommended (i.e., use Link in update to re-authenticate your user when `decision_rationale.code` is `ITEM_LOGIN_REQUIRED`). Refer to the `code` field in the `decision_rationale` object for details.

        `declined` – Plaid reviewed the proposed transfer and declined processing. Refer to the `code` field in the `decision_rationale` object for details.
      enum:
      - approved
      - declined
    TransferAuthorization:
      title: TransferAuthorization
      type: object
      additionalProperties: true
      description: Contains the authorization decision for a proposed transfer.
      properties:
        id:
          $ref: '#/components/schemas/TransferAuthorizationID'
        created:
          type: string
          format: date-time
          description: The datetime representing when the authorization was created, in the format `2006-01-02T15:04:05Z`.
        decision:
          $ref: '#/components/schemas/TransferAuthorizationDecision'
        decision_rationale:
          $ref: '#/components/schemas/TransferAuthorizationDecisionRationale'
        guarantee_decision:
          $ref: '#/components/schemas/TransferAuthorizationGuaranteeDecision'
        guarantee_decision_rationale:
          $ref: '#/components/schemas/TransferAuthorizationGuaranteeDecisionRationale'
        payment_risk:
          $ref: '#/components/schemas/TransferAuthorizationPaymentRisk'
        proposed_transfer:
          $ref: '#/components/schemas/TransferAuthorizationProposedTransfer'
      required:
      - id
      - created
      - decision
      - decision_rationale
      - guarantee_decision
      - guarantee_decision_rationale
      - proposed_transfer
      - payment_risk
    InstitutionSupportedNetworks:
      title: InstitutionSupportedNetworks
      type: object
      additionalProperties: true
      description: Contains the RTP network and types supported by the linked Item's institution.
      properties:
        rtp:
          $ref: '#/components/schemas/TransferCapabilitiesGetRTP'
      required:
      - rtp
    TransferCapabilitiesGetRTP:
      title: TransferCapabilitiesGetRTP
      type: object
      additionalProperties: true
      description: Contains the supported service types in RTP
      properties:
        credit:
          type: boolean
          default: false
          nullable: false
          description: When `true`, the linked Item's institution supports RTP credit transfer.
    TransferCreateResponse:
      title: TransferCreateResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/transfer/create`
      properties:
        transfer:
          $ref: '#/components/schemas/Transfer'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - transfer
      - request_id
    TransferRecurringCreateResponse:
      title: TransferRecurringCreateResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/transfer/recurring/create`
      properties:
        recurring_transfer:
          $ref: '#/components/schemas/RecurringTransferNullable'
        decision:
          $ref: '#/components/schemas/TransferAuthorizationDecision'
        decision_rationale:
          $ref: '#/components/schemas/TransferAuthorizationDecisionRationale'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - decision
      - request_id
    BankTransferCreateResponse:
      title: BankTransferCreateResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/bank_transfer/create`
      properties:
        bank_transfer:
          $ref: '#/components/schemas/BankTransfer'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - bank_transfer
      - request_id
    TransferListRequest:
      title: TransferListRequest
      type: object
      description: Defines the request schema for `/transfer/list`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        start_date:
          type: string
          format: date-time
          nullable: true
          description: The start datetime of transfers to list. This should be in RFC 3339 format (i.e. `2019-12-06T22:35:49Z`)
        end_date:
          type: string
          format: date-time
          nullable: true
          description: The end datetime of transfers to list. This should be in RFC 3339 format (i.e. `2019-12-06T22:35:49Z`)
        count:
          type: integer
          minimum: 1
          maximum: 25
          default: 25
          description: The maximum number of transfers to return.
        offset:
          type: integer
          default: 0
          minimum: 0
          description: The number of transfers to skip before returning results.
        origination_account_id:
          type: string
          nullable: true
          description: Filter transfers to only those originated through the specified origination account.
          deprecated: true
          x-hidden-from-docs: true
        originator_client_id:
          type: string
          nullable: true
          description: Filter transfers to only those with the specified originator client.
        funding_account_id:
          type: string
          nullable: true
          description: Filter transfers to only those with the specified `funding_account_id`.
    TransferRecurringListRequest:
      title: TransferRecurringListRequest
      type: object
      description: Defines the request schema for `/transfer/recurring/list`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        start_time:
          type: string
          format: date-time
          nullable: true
          description: The start datetime of recurring transfers to list. This should be in RFC 3339 format (i.e. `2019-12-06T22:35:49Z`)
        end_time:
          type: string
          format: date-time
          nullable: true
          description: The end datetime of recurring transfers to list. This should be in RFC 3339 format (i.e. `2019-12-06T22:35:49Z`)
        count:
          type: integer
          minimum: 1
          maximum: 25
          default: 25
          description: The maximum number of recurring transfers to return.
        offset:
          type: integer
          default: 0
          minimum: 0
          description: The number of recurring transfers to skip before returning results.
        funding_account_id:
          type: string
          nullable: true
          description: Filter recurring transfers to only those with the specified `funding_account_id`.
    BankTransferListRequest:
      title: BankTransferListRequest
      type: object
      description: Defines the request schema for `/bank_transfer/list`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        start_date:
          type: string
          format: date-time
          nullable: true
          description: The start datetime of bank transfers to list. This should be in RFC 3339 format (i.e. `2019-12-06T22:35:49Z`)
        end_date:
          type: string
          format: date-time
          nullable: true
          description: The end datetime of bank transfers to list. This should be in RFC 3339 format (i.e. `2019-12-06T22:35:49Z`)
        count:
          type: integer
          minimum: 1
          maximum: 25
          default: 25
          description: The maximum number of bank transfers to return.
        offset:
          type: integer
          default: 0
          minimum: 0
          description: The number of bank transfers to skip before returning results.
        origination_account_id:
          type: string
          nullable: true
          description: Filter bank transfers to only those originated through the specified origination account.
        direction:
          $ref: '#/components/schemas/BankTransferDirection'
    TransferListResponse:
      title: TransferListResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/transfer/list`
      properties:
        transfers:
          type: array
          items:
            $ref: '#/components/schemas/Transfer'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - transfers
      - request_id
    TransferRecurringListResponse:
      title: TransferRecurringListResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/transfer/recurring/list`
      properties:
        recurring_transfers:
          type: array
          items:
            $ref: '#/components/schemas/RecurringTransfer'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - recurring_transfers
      - request_id
    BankTransferListResponse:
      title: BankTransferListResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/bank_transfer/list`
      properties:
        bank_transfers:
          type: array
          items:
            $ref: '#/components/schemas/BankTransfer'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - bank_transfers
      - request_id
    BankTransferDirection:
      type: string
      nullable: true
      title: BankTransferDirection
      description: 'Indicates the direction of the transfer: `outbound` for API-initiated transfers, or `inbound` for payments received by the FBO account.'
      enum:
      - outbound
      - inbound
      - null
    TransferCancelRequest:
      title: TransferCancelRequest
      type: object
      description: Defines the request schema for `/transfer/cancel`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        transfer_id:
          $ref: '#/components/schemas/TransferID'
        originator_client_id:
          deprecated: true
          x-hidden-from-docs: true
          type: string
          nullable: true
          description: The Plaid client ID of the transfer originator. Should only be present if `client_id` is a third-party sender (TPS).
      required:
      - transfer_id
    TransferRecurringCancelRequest:
      title: TransferRecurringCancelRequest
      type: object
      description: Defines the request schema for `/transfer/recurring/cancel`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        recurring_transfer_id:
          $ref: '#/components/schemas/RecurringTransferID'
      required:
      - recurring_transfer_id
    BankTransferCancelRequest:
      title: BankTransferCancelRequest
      type: object
      description: Defines the request schema for `/bank_transfer/cancel`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        bank_transfer_id:
          $ref: '#/components/schemas/BankTransferID'
      required:
      - bank_transfer_id
    TransferCancelResponse:
      title: TransferCancelResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/transfer/cancel`
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - request_id
    TransferRecurringCancelResponse:
      title: TransferRecurringCancelResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/transfer/recurring/cancel`
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - request_id
    BankTransferCancelResponse:
      title: BankTransferCancelResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/bank_transfer/cancel`
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - request_id
    TransferEventListTransferType:
      type: string
      nullable: true
      title: TransferType
      description: The type of transfer. This will be either `debit` or `credit`.  A `debit` indicates a transfer of money into your origination account; a `credit` indicates a transfer of money out of your origination account.
      enum:
      - debit
      - credit
      - null
    TransferEventListRequest:
      title: TransferEventListRequest
      type: object
      description: Defines the request schema for `/transfer/event/list`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        start_date:
          type: string
          format: date-time
          description: The start datetime of transfers to list. This should be in RFC 3339 format (i.e. `2019-12-06T22:35:49Z`)
          nullable: true
        end_date:
          type: string
          format: date-time
          description: The end datetime of transfers to list. This should be in RFC 3339 format (i.e. `2019-12-06T22:35:49Z`)
          nullable: true
        transfer_id:
          type: string
          title: TransferID
          description: Plaid’s unique identifier for a transfer.
          nullable: true
        account_id:
          type: string
          description: The account ID to get events for all transactions to/from an account.
          nullable: true
        transfer_type:
          $ref: '#/components/schemas/TransferEventListTransferType'
        event_types:
          type: array
          description: Filter events by event type.
          items:
            $ref: '#/components/schemas/TransferEventType'
        sweep_id:
          type: string
          description: Plaid’s unique identifier for a sweep.
        count:
          type: integer
          description: The maximum number of transfer events to return. If the number of events matching the above parameters is greater than `count`, the most recent events will be returned.
          default: 25
          maximum: 25
          minimum: 1
          nullable: true
        offset:
          type: integer
          default: 0
          minimum: 0
          description: The offset into the list of transfer events. When `count`=25 and `offset`=0, the first 25 events will be returned. When `count`=25 and `offset`=25, the next 25 events will be returned.
          nullable: true
        origination_account_id:
          type: string
          description: The origination account ID to get events for transfers from a specific origination account.
          deprecated: true
          x-hidden-from-docs: true
          nullable: true
        originator_client_id:
          type: string
          nullable: true
          description: Filter transfer events to only those with the specified originator client.
        funding_account_id:
          type: string
          nullable: true
          description: Filter transfer events to only those with the specified `funding_account_id`.
    BankTransferEventListBankTransferType:
      type: string
      nullable: true
      title: BankTransferType
      description: The type of bank transfer. This will be either `debit` or `credit`.  A `debit` indicates a transfer of money into your origination account; a `credit` indicates a transfer of money out of your origination account.
      enum:
      - debit
      - credit
      - null
    BankTransferEventListDirection:
      type: string
      title: BankTransferDirection
      description: |-
        Indicates the direction of the transfer: `outbound`: for API-initiated transfers
        `inbound`: for payments received by the FBO account.
      enum:
      - inbound
      - outbound
      - null
      nullable: true
    BankTransferEventListRequest:
      title: BankTransferEventListRequest
      type: object
      description: Defines the request schema for `/bank_transfer/event/list`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        start_date:
          type: string
          format: date-time
          description: The start datetime of bank transfers to list. This should be in RFC 3339 format (i.e. `2019-12-06T22:35:49Z`)
          nullable: true
        end_date:
          type: string
          format: date-time
          description: The end datetime of bank transfers to list. This should be in RFC 3339 format (i.e. `2019-12-06T22:35:49Z`)
          nullable: true
        bank_transfer_id:
          type: string
          title: BankTransferID
          description: Plaid’s unique identifier for a bank transfer.
          nullable: true
        account_id:
          type: string
          description: The account ID to get events for all transactions to/from an account.
          nullable: true
        bank_transfer_type:
          $ref: '#/components/schemas/BankTransferEventListBankTransferType'
        event_types:
          type: array
          description: Filter events by event type.
          items:
            $ref: '#/components/schemas/BankTransferEventType'
        count:
          type: integer
          description: The maximum number of bank transfer events to return. If the number of events matching the above parameters is greater than `count`, the most recent events will be returned.
          default: 25
          maximum: 25
          minimum: 1
          nullable: true
        offset:
          type: integer
          default: 0
          minimum: 0
          description: The offset into the list of bank transfer events. When `count`=25 and `offset`=0, the first 25 events will be returned. When `count`=25 and `offset`=25, the next 25 bank transfer events will be returned.
          nullable: true
        origination_account_id:
          type: string
          description: The origination account ID to get events for transfers from a specific origination account.
          nullable: true
        direction:
          $ref: '#/components/schemas/BankTransferEventListDirection'
    TransferEventType:
      type: string
      title: TransferEventType
      description: |-
        The type of event that this transfer represents. Event types with prefix `sweep` represents events for Plaid Ledger sweeps.

        `pending`: A new transfer was created; it is in the pending state.

        `cancelled`: The transfer was cancelled by the client.

        `failed`: The transfer failed, no funds were moved.

        `posted`: The transfer has been successfully submitted to the payment network.

        `settled`: Credits are available to be withdrawn or debits have been deducted from the Plaid linked account.

        `returned`: A posted transfer was returned.

        `swept`: The transfer was swept to / from the sweep account.

        `swept_settled`: Credits are available to be withdrawn or debits have been deducted from the customer’s business checking account.

        `return_swept`: Due to the transfer being returned, funds were pulled from or pushed back to the sweep account.

        `sweep.pending`: A new ledger sweep was created; it is in the pending state.

        `sweep.posted`: The ledger sweep has been successfully submitted to the payment network.

        `sweep.settled`: The transaction has settled in the funding account. This means that funds withdrawn from Plaid Ledger balance have reached the funding account, or funds to be deposited into the Plaid Ledger Balance have been pulled, and the hold period has begun.

        `sweep.returned`: A posted ledger sweep was returned.

        `sweep.failed`: The ledger sweep failed, no funds were moved.

        `refund.pending`: A new refund was created; it is in the pending state.

        `refund.cancelled`: The refund was cancelled.

        `refund.failed`: The refund failed, no funds were moved.

        `refund.posted`: The refund has been successfully submitted to the payment network.

        `refund.settled`: The refund transaction has settled in the Plaid linked account.

        `refund.returned`: A posted refund was returned.

        `refund.swept`: The refund was swept from the sweep account.

        `refund.return_swept`: Due to the refund being returned, funds were pushed back to the sweep account.
      enum:
      - pending
      - cancelled
      - failed
      - posted
      - settled
      - returned
      - swept
      - swept_settled
      - return_swept
      - sweep.pending
      - sweep.posted
      - sweep.settled
      - sweep.returned
      - sweep.failed
    TransferLedgerSweepSimulateEventType:
      type: string
      title: TransferLedgerSweepSimulateEventType
      description: |
        The asynchronous event to be simulated. May be: `posted`, `settled`, `failed`, or `returned`.

        An error will be returned if the event type is incompatible with the current ledger sweep status. Compatible status --> event type transitions include:

        `sweep.pending` --> `sweep.posted`

        `sweep.pending` --> `sweep.failed`

        `sweep.posted` --> `sweep.settled`

        `sweep.posted` --> `sweep.returned`

        `sweep.settled` --> `sweep.returned`
      enum:
      - sweep.posted
      - sweep.settled
      - sweep.returned
      - sweep.failed
    BankTransferEventType:
      type: string
      title: BankTransferEventType
      description: |-
        The type of event that this bank transfer represents.

        `pending`: A new transfer was created; it is in the pending state.

        `cancelled`: The transfer was cancelled by the client.

        `failed`: The transfer failed, no funds were moved.

        `posted`: The transfer has been successfully submitted to the payment network.

        `reversed`: A posted transfer was reversed.
      enum:
      - pending
      - cancelled
      - failed
      - posted
      - reversed
    TransferEvent:
      title: TransferEvent
      type: object
      additionalProperties: true
      description: Represents an event in the Transfers API.
      properties:
        event_id:
          type: integer
          description: Plaid’s unique identifier for this event. IDs are sequential unsigned 64-bit integers.
          minimum: 0
        timestamp:
          type: string
          format: date-time
          description: The datetime when this event occurred. This will be of the form `2006-01-02T15:04:05Z`.
        event_type:
          $ref: '#/components/schemas/TransferEventType'
        account_id:
          type: string
          description: The account ID associated with the transfer. This field is omitted for Plaid Ledger Sweep events.
        funding_account_id:
          $ref: '#/components/schemas/TransferFundingAccountIDResponseNullable'
        transfer_id:
          type: string
          description: Plaid’s unique identifier for a transfer. This field is `null` for Plaid Ledger Sweep events.
        origination_account_id:
          type: string
          description: The ID of the origination account that this balance belongs to.
          nullable: true
          deprecated: true
          x-hidden-from-docs: true
        transfer_type:
          $ref: '#/components/schemas/OmittableTransferType'
        transfer_amount:
          title: TransferAmount
          type: string
          description: The amount of the transfer (decimal string with two digits of precision e.g. "10.00"). This field is omitted for Plaid Ledger Sweep events.
        failure_reason:
          $ref: '#/components/schemas/TransferFailure'
        sweep_id:
          $ref: '#/components/schemas/TransferSweepIDNullable'
        sweep_amount:
          $ref: '#/components/schemas/TransferSweepAmount'
        refund_id:
          type: string
          nullable: true
          description: Plaid’s unique identifier for a refund. A non-null value indicates the event is for the associated refund of the transfer.
        originator_client_id:
          type: string
          nullable: true
          description: The Plaid client ID that is the originator of the transfer that this event applies to. Only present if the transfer was created on behalf of another client as a third-party sender (TPS).
      required:
      - event_id
      - timestamp
      - event_type
      - transfer_id
      - origination_account_id
      - failure_reason
      - sweep_id
      - sweep_amount
      - refund_id
      - originator_client_id
      - funding_account_id
    BankTransferEvent:
      title: BankTransferEvent
      type: object
      additionalProperties: true
      description: Represents an event in the Bank Transfers API.
      properties:
        event_id:
          type: integer
          description: Plaid’s unique identifier for this event. IDs are sequential unsigned 64-bit integers.
          minimum: 0
        timestamp:
          type: string
          format: date-time
          description: The datetime when this event occurred. This will be of the form `2006-01-02T15:04:05Z`.
        event_type:
          $ref: '#/components/schemas/BankTransferEventType'
        account_id:
          type: string
          description: The account ID associated with the bank transfer.
        bank_transfer_id:
          $ref: '#/components/schemas/BankTransferID'
        origination_account_id:
          type: string
          description: The ID of the origination account that this balance belongs to.
          nullable: true
        bank_transfer_type:
          $ref: '#/components/schemas/BankTransferType'
        bank_transfer_amount:
          type: string
          description: The bank transfer amount.
        bank_transfer_iso_currency_code:
          type: string
          description: The currency of the bank transfer amount.
        failure_reason:
          $ref: '#/components/schemas/BankTransferFailure'
        direction:
          $ref: '#/components/schemas/BankTransferDirection'
      required:
      - event_id
      - timestamp
      - event_type
      - account_id
      - bank_transfer_id
      - origination_account_id
      - bank_transfer_type
      - bank_transfer_amount
      - bank_transfer_iso_currency_code
      - failure_reason
      - direction
    TransferEventListResponse:
      title: TransferEventListResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/transfer/event/list`
      properties:
        transfer_events:
          type: array
          items:
            $ref: '#/components/schemas/TransferEvent'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - transfer_events
      - request_id
    BankTransferEventListResponse:
      title: BankTransferEventListResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/bank_transfer/event/list`
      properties:
        bank_transfer_events:
          type: array
          items:
            $ref: '#/components/schemas/BankTransferEvent'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - bank_transfer_events
      - request_id
    BankTransferEventSyncRequest:
      title: BankTransferEventSyncRequest
      type: object
      description: Defines the request schema for `/bank_transfer/event/sync`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        after_id:
          type: integer
          description: The latest (largest) `event_id` fetched via the sync endpoint, or 0 initially.
          minimum: 0
        count:
          type: integer
          default: 25
          minimum: 1
          maximum: 25
          description: The maximum number of bank transfer events to return.
          nullable: true
      required:
      - after_id
    TransferEventSyncRequest:
      title: TransferEventSyncRequest
      type: object
      description: Defines the request schema for `/transfer/event/sync`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        after_id:
          type: integer
          description: The latest (largest) `event_id` fetched via the sync endpoint, or 0 initially.
          minimum: 0
        count:
          type: integer
          default: 25
          minimum: 1
          maximum: 25
          description: The maximum number of transfer events to return.
          nullable: true
      required:
      - after_id
    BankTransferEventSyncResponse:
      title: BankTransferEventSyncResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/bank_transfer/event/sync`
      properties:
        bank_transfer_events:
          type: array
          items:
            $ref: '#/components/schemas/BankTransferEvent'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - bank_transfer_events
      - request_id
    TransferEventSyncResponse:
      title: TransferEventSyncResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/transfer/event/sync`
      properties:
        transfer_events:
          type: array
          items:
            $ref: '#/components/schemas/TransferEvent'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - transfer_events
      - request_id
    BankTransferSweepGetRequest:
      title: BankTransferSweepGetRequest
      type: object
      description: Defines the request schema for `/bank_transfer/sweep/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        sweep_id:
          type: string
          description: Identifier of the sweep.
      required:
      - sweep_id
    TransferSweepGetRequest:
      title: TransferSweepGetRequest
      type: object
      description: Defines the request schema for `/transfer/sweep/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        sweep_id:
          type: string
          description: Plaid's unique identifier for the sweep (UUID) or a shortened form consisting of the first 8 characters of the identifier (8-digit hexadecimal string).
      required:
      - sweep_id
    BankTransferSweepGetResponse:
      title: BankTransferSweepGetResponse
      type: object
      additionalProperties: true
      description: BankTransferSweepGetResponse defines the response schema for `/bank_transfer/sweep/get`
      properties:
        sweep:
          $ref: '#/components/schemas/BankTransferSweep'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - sweep
      - request_id
    TransferSweepGetResponse:
      title: TransferSweepGetResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/transfer/sweep/get`
      properties:
        sweep:
          $ref: '#/components/schemas/TransferSweep'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - sweep
      - request_id
    BankTransferSweepListRequest:
      title: BankTransferSweepListRequest
      type: object
      description: BankTransferSweepListRequest defines the request schema for `/bank_transfer/sweep/list`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        origination_account_id:
          type: string
          description: If multiple origination accounts are available, `origination_account_id` must be used to specify the account that the sweeps belong to.
          nullable: true
        start_time:
          type: string
          format: date-time
          description: The start datetime of sweeps to return (RFC 3339 format).
          nullable: true
        end_time:
          type: string
          format: date-time
          description: The end datetime of sweeps to return (RFC 3339 format).
          nullable: true
        count:
          type: integer
          minimum: 1
          maximum: 25
          default: 25
          description: The maximum number of sweeps to return.
          nullable: true
    SweepStatus:
      title: SweepStatus
      type: string
      enum:
      - pending
      - posted
      - settled
      - returned
      - failed
      - null
      nullable: true
      description: |-
        The status of a sweep transfer

        `"pending"` - The sweep is currently pending
        `"posted"` - The sweep has been posted
        `"settled"` - The sweep has settled
        `"returned"` - The sweep has been returned
        `"failed"` - The sweep has failed
    SweepTrigger:
      title: SweepTrigger
      type: string
      enum:
      - manual
      - incoming
      - balance_threshold
      - automatic_aggregate
      nullable: true
      description: |-
        The trigger of the sweep

        `"manual"` - The sweep is created manually by the customer
        `"incoming"` - The sweep is created by incoming funds flow (e.g. Incoming Wire)
        `"balance_threshold"` - The sweep is created by balance threshold setting
        `"automatic_aggregate"` - The sweep is created by the Plaid automatic aggregation process. These funds did not pass through the Plaid Ledger balance.
    SweepDescription:
      title: SweepDescription
      type: string
      maxLength: 10
      nullable: true
      description: The description of the deposit that will be passed to the receiving bank (up to 10 characters). Note that banks utilize this field differently, and may or may not show it on the bank statement.
    TransferSweepListRequest:
      title: TransferSweepListRequest
      type: object
      description: Defines the request schema for `/transfer/sweep/list`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        start_date:
          type: string
          format: date-time
          description: The start datetime of sweeps to return (RFC 3339 format).
          nullable: true
        end_date:
          type: string
          format: date-time
          description: The end datetime of sweeps to return (RFC 3339 format).
          nullable: true
        count:
          type: integer
          minimum: 1
          maximum: 25
          default: 25
          description: The maximum number of sweeps to return.
          nullable: true
        offset:
          type: integer
          default: 0
          minimum: 0
          description: The number of sweeps to skip before returning results.
        amount:
          type: string
          nullable: true
          description: Filter sweeps to only those with the specified amount.
        status:
          $ref: '#/components/schemas/SweepStatus'
        originator_client_id:
          type: string
          nullable: true
          description: Filter sweeps to only those with the specified originator client.
        funding_account_id:
          type: string
          nullable: true
          description: Filter sweeps to only those with the specified `funding_account_id`.
        transfer_id:
          type: string
          nullable: true
          description: Filter sweeps to only those with the included `transfer_id`.
        trigger:
          $ref: '#/components/schemas/SweepTrigger'
    TransferSweepListResponse:
      title: TransferSweepListResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/transfer/sweep/list`
      properties:
        sweeps:
          type: array
          items:
            $ref: '#/components/schemas/TransferSweep'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - sweeps
      - request_id
    BankTransferSweepListResponse:
      title: BankTransferSweepListResponse
      type: object
      additionalProperties: true
      description: BankTransferSweepListResponse defines the response schema for `/bank_transfer/sweep/list`
      properties:
        sweeps:
          type: array
          items:
            $ref: '#/components/schemas/BankTransferSweep'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - sweeps
      - request_id
    BankTransferSweep:
      title: BankTransferSweep
      type: object
      additionalProperties: true
      description: BankTransferSweep describes a sweep transfer.
      properties:
        id:
          type: string
          description: Identifier of the sweep.
        created_at:
          type: string
          description: The datetime when the sweep occurred, in RFC 3339 format.
          format: date-time
        amount:
          type: string
          description: The amount of the sweep.
        iso_currency_code:
          type: string
          description: The currency of the sweep, e.g. "USD".
      required:
      - id
      - created_at
      - amount
      - iso_currency_code
    TransferSweep:
      title: TransferSweep
      type: object
      additionalProperties: true
      description: |-
        Describes a sweep of funds to / from the sweep account.

        A sweep is associated with many sweep events (events of type `swept` or `return_swept`) which can be retrieved by invoking the `/transfer/event/list` endpoint with the corresponding `sweep_id`.

        `swept` events occur when the transfer amount is credited or debited from your sweep account, depending on the `type` of the transfer. `return_swept` events occur when a transfer is returned and Plaid undoes the credit or debit.

        The total sum of the `swept` and `return_swept` events is equal to the `amount` of the sweep Plaid creates and matches the amount of the entry on your sweep account ledger.
      properties:
        id:
          type: string
          description: Identifier of the sweep.
        funding_account_id:
          $ref: '#/components/schemas/TransferFundingAccountIDResponse'
        created:
          type: string
          description: The datetime when the sweep occurred, in RFC 3339 format.
          format: date-time
        amount:
          type: string
          description: |-
            Signed decimal amount of the sweep as it appears on your sweep account ledger (e.g. "-10.00")

            If amount is not present, the sweep was net-settled to zero and outstanding debits and credits between the sweep account and Plaid are balanced.
        iso_currency_code:
          type: string
          description: The currency of the sweep, e.g. "USD".
        settled:
          type: string
          description: The date when the sweep settled, in the YYYY-MM-DD format.
          format: date
          nullable: true
        status:
          $ref: '#/components/schemas/SweepStatus'
        trigger:
          $ref: '#/components/schemas/SweepTrigger'
        description:
          type: string
          description: The description of the deposit that will be passed to the receiving bank (up to 10 characters). Note that banks utilize this field differently, and may or may not show it on the bank statement.
        network_trace_id:
          $ref: '#/components/schemas/TransferNetworkTraceID'
      required:
      - id
      - created
      - amount
      - iso_currency_code
      - settled
      - funding_account_id
    SimulatedTransferSweep:
      title: SimulatedTransferSweep
      type: object
      additionalProperties: true
      description: |-
        A sweep returned from the `/sandbox/transfer/sweep/simulate` endpoint.
        Can be null if there are no transfers to include in a sweep.
      allOf:
      - $ref: '#/components/schemas/TransferSweep'
      - type: object
        nullable: true
    BankTransferBalanceGetRequest:
      title: BankTransferBalanceGetRequest
      type: object
      description: Defines the request schema for `/bank_transfer/balance/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        origination_account_id:
          type: string
          description: If multiple origination accounts are available, `origination_account_id` must be used to specify the account for which balance will be returned.
          nullable: true
    BankTransferBalanceGetResponse:
      title: BankTransferBalanceGetResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/bank_transfer/balance/get`
      properties:
        balance:
          $ref: '#/components/schemas/BankTransferBalance'
        origination_account_id:
          type: string
          description: The ID of the origination account that this balance belongs to.
          nullable: true
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - balance
      - origination_account_id
      - request_id
    BankTransferBalance:
      title: BankTransferBalance
      description: Information about the balance of a bank transfer
      type: object
      additionalProperties: true
      properties:
        available:
          type: string
          description: The total available balance - the sum of all successful debit transfer amounts minus all credit transfer amounts.
        transactable:
          type: string
          description: The transactable balance shows the amount in your account that you are able to use for transfers, and is essentially your available balance minus your minimum balance.
      required:
      - available
      - transactable
    TransferBalanceGetRequest:
      title: TransferBalanceGetRequest
      type: object
      description: Defines the request schema for `/transfer/balance/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        originator_client_id:
          deprecated: true
          x-hidden-from-docs: true
          type: string
          nullable: true
          description: Client ID of the end customer.
        secret:
          $ref: '#/components/schemas/APISecret'
        type:
          $ref: '#/components/schemas/TransferBalanceType'
    TransferBalanceGetResponse:
      title: TransferBalanceGetResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/transfer/balance/get`
      properties:
        balance:
          $ref: '#/components/schemas/TransferBalance'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - balance
      - request_id
    TransferBalance:
      title: TransferBalance
      description: Information about the balance held with Plaid.
      type: object
      additionalProperties: true
      properties:
        available:
          type: string
          description: The amount of this balance available for use (decimal string with two digits of precision e.g. "10.00").
        current:
          type: string
          description: The available balance, plus amount of pending funds that in processing (decimal string with two digits of precision e.g. "10.00").
        type:
          $ref: '#/components/schemas/TransferBalanceType'
      required:
      - available
      - type
    TransferLedgerGetRequest:
      title: TransferLedgerGetRequest
      type: object
      description: Defines the request schema for `/transfer/ledger/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        originator_client_id:
          type: string
          nullable: true
          description: Client ID of the end customer.
    TransferLedgerGetResponse:
      title: TransferLedgerGetResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/transfer/ledger/get`
      properties:
        balance:
          $ref: '#/components/schemas/TransferLedgerBalance'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - balance
      - request_id
    TransferLedgerDistributeRequest:
      title: TransferLedgerDistributeRequest
      type: object
      description: Defines the request schema for `/transfer/ledger/distribute`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        from_client_id:
          type: string
          description: The client to pull money from. Must be the platform itself or its originator. One of `from_client_id` and `to_client_id` must be the platform's `client_id`.
        to_client_id:
          type: string
          description: The client to credit money to. Must be the platform itself or its originator. One of `from_client_id` and `to_client_id` must be the platform's `client_id`.
        amount:
          type: string
          description: The amount to move (decimal string with two digits of precision e.g. "10.00"). Amount must be positive.
        idempotency_key:
          $ref: '#/components/schemas/LedgerDistributeIdempotencyKey'
        description:
          type: string
          description: An optional description for the ledger distribute operation.
      required:
      - from_client_id
      - to_client_id
      - amount
      - idempotency_key
    TransferLedgerDistributeResponse:
      title: TransferLedgerDistributeResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/transfer/ledger/distribute`
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - request_id
    TransferLedgerBalance:
      title: TransferLedgerBalance
      description: Information about the balance of the ledger held with Plaid.
      type: object
      additionalProperties: true
      properties:
        available:
          type: string
          description: The amount of this balance available for use (decimal string with two digits of precision e.g. "10.00").
        pending:
          type: string
          description: The amount of pending funds that are in processing (decimal string with two digits of precision e.g. "10.00").
      required:
      - available
      - pending
    TransferLedgerDepositRequest:
      title: TransferLedgerDepositRequest
      type: object
      description: Defines the request schema for `/transfer/ledger/deposit`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        originator_client_id:
          $ref: '#/components/schemas/TransferOriginatorClientID'
        funding_account_id:
          $ref: '#/components/schemas/TransferLedgerFundingAccountIDRequest'
        amount:
          type: string
          description: A positive amount of how much will be deposited into ledger (decimal string with two digits of precision e.g. "5.50").
        description:
          $ref: '#/components/schemas/SweepDescription'
        idempotency_key:
          $ref: '#/components/schemas/LedgerDepositIdempotencyKey'
        network:
          $ref: '#/components/schemas/TransferACHNetwork'
      required:
      - amount
      - idempotency_key
      - network
    TransferLedgerWithdrawRequest:
      title: TransferLedgerWithdrawRequest
      type: object
      description: Defines the request schema for `/transfer/ledger/withdraw`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        originator_client_id:
          $ref: '#/components/schemas/TransferOriginatorClientID'
        funding_account_id:
          $ref: '#/components/schemas/TransferLedgerFundingAccountIDRequest'
        amount:
          type: string
          description: A positive amount of how much will be withdrawn from the ledger balance (decimal string with two digits of precision e.g. "5.50").
        description:
          $ref: '#/components/schemas/SweepDescription'
        idempotency_key:
          $ref: '#/components/schemas/LedgerWithdrawIdempotencyKey'
        network:
          $ref: '#/components/schemas/TransferNetwork'
      required:
      - amount
      - idempotency_key
      - network
    TransferLedgerDepositResponse:
      title: TransferLedgerDepositResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/transfer/ledger/deposit`
      properties:
        sweep:
          $ref: '#/components/schemas/TransferSweep'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - sweep
      - request_id
    TransferLedgerWithdrawResponse:
      title: TransferLedgerWithdrawResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/transfer/ledger/withdraw`
      properties:
        sweep:
          $ref: '#/components/schemas/TransferSweep'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - sweep
      - request_id
    TransferBalanceType:
      type: string
      title: TransferBalanceType
      enum:
      - prefunded_rtp_credits
      - prefunded_ach_credits
      description: |-
        The type of balance.

        `prefunded_rtp_credits` - Your prefunded RTP credit balance with Plaid
        `prefunded_ach_credits` - Your prefunded ACH credit balance with Plaid
    TransferOriginatorFundingAccountUpdateRequest:
      title: TransferOriginatorFundingAccountUpdateRequest
      type: object
      description: Defines the request schema for `/transfer/originator/funding_account/update`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        originator_client_id:
          type: string
          description: The Plaid client ID of the transfer originator.
        funding_account:
          $ref: '#/components/schemas/TransferFundingAccount'
      required:
      - funding_account
      - originator_client_id
    TransferOriginatorFundingAccountUpdateResponse:
      title: TransferOriginatorFundingAccountUpdateResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/transfer/originator/funding_account/update`
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - request_id
    BankTransferMigrateAccountRequest:
      title: BankTransferMigrateAccountRequest
      type: object
      description: Defines the request schema for `/bank_transfer/migrate_account`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        account_number:
          type: string
          description: The user's account number.
        routing_number:
          type: string
          description: The user's routing number.
        wire_routing_number:
          type: string
          description: The user's wire transfer routing number. This is the ABA number; for some institutions, this may differ from the ACH number used in `routing_number`.
        account_type:
          type: string
          description: The type of the bank account (`checking` or `savings`).
      required:
      - account_number
      - routing_number
      - account_type
    BankTransferMigrateAccountResponse:
      title: BankTransferMigrateAccountResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/bank_transfer/migrate_account`
      properties:
        access_token:
          type: string
          description: The Plaid `access_token` for the newly created Item.
        account_id:
          type: string
          description: The Plaid `account_id` for the newly created Item.
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - access_token
      - account_id
      - request_id
    TransferMigrateAccountRequest:
      title: TransferMigrateAccountRequest
      type: object
      description: Defines the request schema for `/transfer/migrate_account`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        account_number:
          type: string
          description: The user's account number.
        routing_number:
          type: string
          description: The user's routing number.
        wire_routing_number:
          type: string
          description: The user's wire transfer routing number. This is the ABA number; for some institutions, this may differ from the ACH number used in `routing_number`.
        account_type:
          type: string
          description: The type of the bank account (`checking` or `savings`).
      required:
      - account_number
      - routing_number
      - account_type
    TransferMigrateAccountResponse:
      title: TransferMigrateAccountResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/transfer/migrate_account`
      properties:
        access_token:
          type: string
          description: The Plaid `access_token` for the newly created Item.
        account_id:
          type: string
          description: The Plaid `account_id` for the newly created Item.
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - access_token
      - account_id
      - request_id
    TransferOriginatorCreateRequest:
      title: TransferOriginatorCreateRequest
      type: object
      description: Defines the request schema for `/transfer/originator/create`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        company_name:
          type: string
          description: The company name of the end customer being created. This will be displayed in public-facing surfaces, e.g. Plaid Dashboard.
          minLength: 1
      required:
      - company_name
    TransferOriginatorCreateResponse:
      title: TransferOriginatorCreateResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/transfer/originator/create`
      properties:
        originator_client_id:
          type: string
          description: Client ID of the originator. This identifier will be used when creating transfers and should be stored associated with end user information.
        company_name:
          type: string
          description: The company name of the end customer.
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - originator_client_id
      - company_name
      - request_id
    TransferQuestionnaireCreateRequest:
      title: TransferQuestionnaireCreateRequest
      type: object
      description: Defines the request schema for `/transfer/questionnaire/create`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        originator_client_id:
          type: string
          description: Client ID of the end customer.
        redirect_uri:
          type: string
          description: URL the end customer will be redirected to after completing questions in Plaid-hosted onboarding flow.
      required:
      - originator_client_id
      - redirect_uri
    TransferQuestionnaireCreateResponse:
      title: TransferQuestionnaireCreateResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/transfer/questionnaire/create`
      properties:
        onboarding_url:
          type: string
          description: Plaid-hosted onboarding URL that you will redirect the end customer to.
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - onboarding_url
      - request_id
    TransferDiligenceSubmitRequest:
      title: TransferDiligenceSubmitRequest
      type: object
      description: Defines the request schema for `/transfer/diligence/submit`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        originator_client_id:
          type: string
          description: Client ID of the the originator whose diligence that you want to submit.
        originator_diligence:
          $ref: '#/components/schemas/TransferOriginatorDiligence'
      required:
      - originator_client_id
      - originator_diligence
    TransferDiligenceSubmitResponse:
      title: TransferDiligenceSubmitResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/transfer/diligence/submit`
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - request_id
    TransferDiligenceDocumentUploadRequest:
      title: TransferDiligenceDocumentUploadRequest
      type: object
      description: Defines the request schema for `/transfer/diligence/document/upload`
      properties:
        originator_client_id:
          type: string
          description: The Client ID of the originator whose document that you want to upload.
        file:
          type: string
          format: binary
          description: 'A file to upload. The file size must be less than 20MB. Supported file extensions: .pdf.'
        purpose:
          $ref: '#/components/schemas/TransferDocumentPurpose'
      required:
      - originator_client_id
      - file
      - purpose
    TransferDiligenceDocumentUploadResponse:
      title: TransferDiligenceDocumentUploadResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/transfer/diligence/document/upload`
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - request_id
    TransferDocumentPurpose:
      type: string
      title: purpose
      enum:
      - DUE_DILIGENCE
      description: |-
        Specifies the purpose of the uploaded file.

        `"DUE_DILIGENCE"` - The transfer due diligence document of the originator.
    TransferOriginatorDiligence:
      description: The diligence information for the originator.
      type: object
      properties:
        dba:
          description: The business name of the originator.
          type: string
        tax_id:
          description: The tax ID of the originator.
          type: string
          minLength: 1
        credit_usage_configuration:
          $ref: '#/components/schemas/TransferCreditUsageConfiguration'
        debit_usage_configuration:
          $ref: '#/components/schemas/TransferDebitUsageConfiguration'
        address:
          $ref: '#/components/schemas/TransferOriginatorAddress'
        website:
          description: The website of the originator.
          type: string
        naics_code:
          description: The NAICS code of the originator.
          type: string
          minLength: 6
          maxLength: 6
        funding_account:
          $ref: '#/components/schemas/TransferFundingAccount'
      required:
      - dba
      - tax_id
      - address
      - website
      - naics_code
      - funding_account
    TransferOriginatorAddress:
      description: The originator's address.
      type: object
      properties:
        city:
          type: string
          description: The full city name.
        street:
          type: string
          description: The full street address.
        region:
          type: string
          description: The two-letter code for the state or province (e.g., "CA").
        postal_code:
          description: The postal code (e.g., "94103").
          type: string
        country_code:
          description: ISO-3166-1 alpha-2 country code standard.
          type: string
      required:
      - city
      - street
      - region
      - postal_code
      - country_code
    TransferCreditUsageConfiguration:
      description: Specifies the originator's expected usage of credits. For all dollar amounts, use a decimal string with two digits of precision e.g. "10.00". This field is required if the originator is expected to process credit transfers.
      type: object
      nullable: true
      properties:
        expected_frequency:
          $ref: '#/components/schemas/OriginatorExpectedTransferFrequency'
        expected_highest_amount:
          description: The originator’s expected highest amount for a single credit transfer.
          type: string
        expected_average_amount:
          description: The originator’s expected average amount per credit.
          type: string
        expected_monthly_amount:
          description: The originator’s monthly expected ACH credit processing amount for the next 6-12 months.
          type: string
        sec_codes:
          description: |-
            Specifies the expected use cases for the originator’s credit transfers. This should be a list that contains one or more of the following codes:

            `"ccd"` - Corporate Credit or Debit - fund transfer between two corporate bank accounts

            `"ppd"` - Prearranged Payment or Deposit - the transfer is part of a pre-existing relationship with a consumer, e.g. bill payment

            `"web"` - A credit Entry initiated by or on behalf of a holder of a Consumer Account that is intended for a Consumer Account of a Receiver
          type: array
          items:
            $ref: '#/components/schemas/CreditACHClass'
      required:
      - expected_frequency
      - expected_highest_amount
      - expected_average_amount
      - expected_monthly_amount
      - sec_codes
    CreditACHClass:
      type: string
      title: CreditACHClass
      enum:
      - ccd
      - ppd
      - web
      description: |-
        Specifies the use case of the transfer. Required for transfers on an ACH network.

        `"ccd"` - Corporate Credit or Debit - fund transfer between two corporate bank accounts

        `"ppd"` - Prearranged Payment or Deposit - the transfer is part of a pre-existing relationship with a consumer, eg. bill payment

        `"web"` - A credit Entry initiated by or on behalf of a holder of a Consumer Account that is intended for a Consumer Account of a Receiver
    TransferDebitUsageConfiguration:
      description: Specifies the originator's expected usage of debits. For all dollar amounts, use a decimal string with two digits of precision e.g. "10.00". This field is required if the originator is expected to process debit transfers.
      type: object
      nullable: true
      properties:
        expected_frequency:
          $ref: '#/components/schemas/OriginatorExpectedTransferFrequency'
        expected_highest_amount:
          description: The originator’s expected highest amount for a single debit transfer.
          type: string
        expected_average_amount:
          description: The originator’s expected average amount per debit.
          type: string
        expected_monthly_amount:
          description: The originator’s monthly expected ACH debit processing amount for the next 6-12 months.
          type: string
        sec_codes:
          description: |-
            Specifies the expected use cases for the originator’s debit transfers. This should be a list that contains one or more of the following codes:

            `"ccd"` - Corporate Credit or Debit - fund transfer between two corporate bank accounts

            `"ppd"` - Prearranged Payment or Deposit - the transfer is part of a pre-existing relationship with a consumer, eg. bill payment

            `"tel"` - Telephone-Initiated Entry

            `"web"` - Internet-Initiated Entry - debits from a consumer’s account where their authorization is obtained over the Internet
          type: array
          items:
            $ref: '#/components/schemas/ACHClass'
      required:
      - expected_frequency
      - expected_highest_amount
      - expected_average_amount
      - expected_monthly_amount
      - sec_codes
    OriginatorExpectedTransferFrequency:
      type: string
      title: OriginatorExpectedTransferFrequency
      description: The originator's expected transfer frequency.
      enum:
      - once_per_month
      - twice_per_month
      - once_per_week
      - daily
    TransferFundingAccount:
      type: object
      title: TransferFundingAccount
      description: The originator's funding account, linked with Plaid Link or `/transfer/migrate_account`.
      properties:
        access_token:
          $ref: '#/components/schemas/AccessToken'
        account_id:
          type: string
          description: The Plaid `account_id` for the newly created Item.
      required:
      - access_token
      - account_id
    TransferOriginatorGetRequest:
      title: TransferOriginatorGetRequest
      type: object
      description: Defines the request schema for `/transfer/originator/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        originator_client_id:
          type: string
          description: Client ID of the end customer (i.e. the originator).
      required:
      - originator_client_id
    TransferOriginatorGetResponse:
      title: TransferOriginatorGetResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/transfer/originator/get`
      properties:
        originator:
          $ref: '#/components/schemas/DetailedOriginator'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - originator
      - request_id
    TransferOriginatorListRequest:
      title: TransferOriginatorListRequest
      type: object
      description: Defines the request schema for `/transfer/originator/list`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        count:
          type: integer
          description: The maximum number of originators to return.
          maximum: 25
          minimum: 1
          default: 25
          nullable: true
        offset:
          type: integer
          description: The number of originators to skip before returning results.
          minimum: 0
          default: 0
          nullable: true
    TransferOriginatorListResponse:
      title: TransferOriginatorListResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/transfer/originator/list`
      properties:
        originators:
          type: array
          items:
            $ref: '#/components/schemas/Originator'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - originators
      - request_id
    TransferRepaymentListRequest:
      title: TransferRepaymentListRequest
      type: object
      description: Defines the request schema for `/transfer/repayment/list`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        start_date:
          type: string
          format: date-time
          description: The start datetime of repayments to return (RFC 3339 format).
          nullable: true
        end_date:
          type: string
          format: date-time
          description: The end datetime of repayments to return (RFC 3339 format).
          nullable: true
        count:
          type: integer
          minimum: 1
          maximum: 25
          default: 25
          description: The maximum number of repayments to return.
          nullable: true
        offset:
          type: integer
          default: 0
          minimum: 0
          description: The number of repayments to skip before returning results.
    TransferRepaymentListResponse:
      title: TransferRepaymentListResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/transfer/repayments/list`
      properties:
        repayments:
          type: array
          items:
            $ref: '#/components/schemas/TransferRepayment'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - repayments
      - request_id
    TransferRepayment:
      title: TransferRepayment
      type: object
      additionalProperties: true
      description: |-
        A repayment is created automatically after one or more guaranteed transactions receive a return. If there are multiple eligible returns in a day, they are batched together into a single repayment.

        Repayments are sent over ACH, with funds typically available on the next banking day.
      properties:
        repayment_id:
          type: string
          description: Identifier of the repayment.
        created:
          type: string
          description: The datetime when the repayment occurred, in RFC 3339 format.
          format: date-time
        amount:
          type: string
          description: Decimal amount of the repayment as it appears on your account ledger.
        iso_currency_code:
          type: string
          description: The currency of the repayment, e.g. "USD".
      required:
      - repayment_id
      - created
      - amount
      - iso_currency_code
    TransferRepaymentReturnListRequest:
      title: TransferRepaymentReturnListRequest
      type: object
      description: Defines the request schema for `/transfer/repayment/return/list`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        repayment_id:
          type: string
          description: Identifier of the repayment to query.
        count:
          type: integer
          minimum: 1
          maximum: 25
          default: 25
          description: The maximum number of repayments to return.
          nullable: true
        offset:
          type: integer
          default: 0
          minimum: 0
          description: The number of repayments to skip before returning results.
      required:
      - repayment_id
    TransferRepaymentReturnListResponse:
      title: TransferRepaymentReturnListResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/transfer/repayments/return/list`
      properties:
        repayment_returns:
          type: array
          items:
            $ref: '#/components/schemas/TransferRepaymentReturn'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - repayment_returns
      - request_id
    TransferRepaymentReturn:
      title: TransferRepaymentReturn
      type: object
      additionalProperties: true
      description: Represents a return on a Guaranteed ACH transfer that is included in the specified repayment.
      properties:
        transfer_id:
          type: string
          description: The unique identifier of the guaranteed transfer that was returned.
        event_id:
          type: integer
          description: The unique identifier of the corresponding `returned` transfer event.
          minimum: 0
        amount:
          type: string
          description: The value of the returned transfer.
        iso_currency_code:
          type: string
          description: The currency of the repayment, e.g. "USD".
      required:
      - transfer_id
      - event_id
      - amount
      - iso_currency_code
    TransferIntentCreateRequest:
      title: TransferIntentCreateRequest
      type: object
      description: Defines the request schema for `/transfer/intent/create`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        account_id:
          type: string
          description: The Plaid `account_id` corresponding to the end-user account that will be debited or credited.
          nullable: true
        funding_account_id:
          $ref: '#/components/schemas/TransferMigratedFundingAccountIDRequest'
        mode:
          $ref: '#/components/schemas/TransferIntentCreateMode'
        network:
          $ref: '#/components/schemas/TransferIntentCreateNetwork'
        amount:
          $ref: '#/components/schemas/TransferAmount'
        description:
          type: string
          description: A description for the underlying transfer. Maximum of 8 characters.
          minLength: 1
          maxLength: 8
        ach_class:
          $ref: '#/components/schemas/ACHClass'
        origination_account_id:
          type: string
          deprecated: true
          x-hidden-from-docs: true
          nullable: true
          description: Plaid’s unique identifier for the origination account for the intent. If not provided, the default account will be used.
        user:
          $ref: '#/components/schemas/TransferUserInRequest'
        metadata:
          $ref: '#/components/schemas/TransferMetadata'
        iso_currency_code:
          type: string
          description: The currency of the transfer amount, e.g. "USD"
        require_guarantee:
          type: boolean
          default: false
          nullable: true
          x-hidden-from-docs: true
          description: When `true`, the transfer requires a `GUARANTEED` decision by Plaid to proceed (Guarantee customers only).
      required:
      - mode
      - amount
      - description
      - user
    TransferIntentStatus:
      type: string
      enum:
      - PENDING
      - SUCCEEDED
      - FAILED
      description: |-
        The status of the transfer intent.

        `PENDING`: The transfer intent is pending.
        `SUCCEEDED`: The transfer intent was successfully created.
        `FAILED`: The transfer intent was unable to be created.
    TransferIntentCreate:
      title: TransferIntentCreate
      type: object
      additionalProperties: true
      description: Represents a transfer intent within Transfer UI.
      properties:
        id:
          type: string
          description: Plaid's unique identifier for the transfer intent object.
        created:
          type: string
          format: date-time
          description: The datetime the transfer was created. This will be of the form `2006-01-02T15:04:05Z`.
        status:
          $ref: '#/components/schemas/TransferIntentStatus'
        account_id:
          type: string
          description: The Plaid `account_id` corresponding to the end-user account that will be debited or credited. Returned only if `account_id` was set on intent creation.
          nullable: true
        origination_account_id:
          type: string
          description: Plaid’s unique identifier for the origination account for the intent. If not provided, the default account will be used.
          deprecated: true
          x-hidden-from-docs: true
        funding_account_id:
          $ref: '#/components/schemas/TransferFundingAccountIDResponse'
        amount:
          $ref: '#/components/schemas/TransferAmount'
        mode:
          $ref: '#/components/schemas/TransferIntentCreateMode'
        network:
          $ref: '#/components/schemas/TransferIntentCreateNetwork'
        ach_class:
          $ref: '#/components/schemas/ACHClass'
        user:
          $ref: '#/components/schemas/TransferUserInResponse'
        description:
          type: string
          description: A description for the underlying transfer. Maximum of 8 characters.
        metadata:
          $ref: '#/components/schemas/TransferMetadata'
        iso_currency_code:
          type: string
          description: The currency of the transfer amount, e.g. "USD"
        require_guarantee:
          type: boolean
          x-hidden-from-docs: true
          description: When `true`, the transfer requires a `GUARANTEED` decision by Plaid to proceed (Guarantee customers only).
          nullable: true
      required:
      - id
      - created
      - status
      - origination_account_id
      - funding_account_id
      - amount
      - mode
      - user
      - description
      - iso_currency_code
    TransferIntentCreateResponse:
      title: TransferIntentCreateResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/transfer/intent/create`
      properties:
        transfer_intent:
          $ref: '#/components/schemas/TransferIntentCreate'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - transfer_intent
      - request_id
    TransferIntentGetRequest:
      title: TransferIntentGetRequest
      type: object
      additionalProperties: true
      description: Defines the request schema for `/transfer/intent/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        transfer_intent_id:
          type: string
          description: Plaid's unique identifier for a transfer intent object.
      required:
      - transfer_intent_id
    TransferIntentAuthorizationDecision:
      type: string
      enum:
      - APPROVED
      - DECLINED
      description: |2-

        A decision regarding the proposed transfer.

        `APPROVED` – The proposed transfer has received the end user's consent and has been approved for processing by Plaid. The `decision_rationale` field is set if Plaid was unable to fetch the account information. You may proceed with the transfer, but further review is recommended (i.e., use Link in update to re-authenticate your user when `decision_rationale.code` is `ITEM_LOGIN_REQUIRED`). Refer to the `code` field in the `decision_rationale` object for details.

        `DECLINED` – Plaid reviewed the proposed transfer and declined processing. Refer to the `code` field in the `decision_rationale` object for details.
      nullable: true
    TransferIntentGet:
      title: TransferIntentGet
      type: object
      additionalProperties: true
      description: Represents a transfer intent within Transfer UI.
      properties:
        id:
          type: string
          description: Plaid's unique identifier for a transfer intent object.
        created:
          type: string
          format: date-time
          description: The datetime the transfer was created. This will be of the form `2006-01-02T15:04:05Z`.
        status:
          $ref: '#/components/schemas/TransferIntentStatus'
        transfer_id:
          type: string
          description: Plaid's unique identifier for the transfer created through the UI. Returned only if the transfer was successfully created. Null value otherwise.
          nullable: true
        failure_reason:
          $ref: '#/components/schemas/TransferIntentGetFailureReason'
        authorization_decision:
          $ref: '#/components/schemas/TransferIntentAuthorizationDecision'
        authorization_decision_rationale:
          $ref: '#/components/schemas/TransferAuthorizationDecisionRationale'
        account_id:
          type: string
          description: The Plaid `account_id` for the account that will be debited or credited. Returned only if `account_id` was set on intent creation.
          nullable: true
        origination_account_id:
          type: string
          description: Plaid’s unique identifier for the origination account used for the transfer.
          deprecated: true
          x-hidden-from-docs: true
        funding_account_id:
          $ref: '#/components/schemas/TransferFundingAccountIDResponse'
        amount:
          $ref: '#/components/schemas/TransferAmount'
        mode:
          $ref: '#/components/schemas/TransferIntentCreateMode'
        network:
          $ref: '#/components/schemas/TransferIntentCreateNetwork'
        ach_class:
          $ref: '#/components/schemas/ACHClass'
        user:
          $ref: '#/components/schemas/TransferUserInResponse'
        description:
          type: string
          description: A description for the underlying transfer. Maximum of 8 characters.
        metadata:
          $ref: '#/components/schemas/TransferMetadata'
        iso_currency_code:
          type: string
          description: The currency of the transfer amount, e.g. "USD"
        require_guarantee:
          type: boolean
          x-hidden-from-docs: true
          description: When `true`, the transfer requires a `GUARANTEED` decision by Plaid to proceed (Guarantee customers only).
          nullable: true
        guarantee_decision:
          $ref: '#/components/schemas/TransferAuthorizationGuaranteeDecision'
        guarantee_decision_rationale:
          $ref: '#/components/schemas/TransferAuthorizationGuaranteeDecisionRationale'
      required:
      - id
      - created
      - status
      - transfer_id
      - failure_reason
      - authorization_decision
      - authorization_decision_rationale
      - origination_account_id
      - funding_account_id
      - amount
      - mode
      - user
      - description
      - iso_currency_code
      - guarantee_decision
      - guarantee_decision_rationale
    TransferIntentGetResponse:
      title: TransferIntentGetResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/transfer/intent/get`
      properties:
        transfer_intent:
          $ref: '#/components/schemas/TransferIntentGet'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - transfer_intent
      - request_id
    TransferRefundCreateRequest:
      title: TransferRefundCreateRequest
      type: object
      description: Defines the request schema for `/transfer/refund/create`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        transfer_id:
          $ref: '#/components/schemas/TransferIDForRefund'
        amount:
          $ref: '#/components/schemas/TransferRefundAmount'
        idempotency_key:
          $ref: '#/components/schemas/TransferRefundIdempotencyKey'
      required:
      - transfer_id
      - idempotency_key
      - amount
    TransferRefundCreateResponse:
      title: TransferRefundCreateResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/transfer/refund/create`
      properties:
        refund:
          $ref: '#/components/schemas/TransferRefund'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - refund
      - request_id
    TransferRefundFailure:
      title: TransferRefundFailure
      type: object
      additionalProperties: true
      nullable: true
      description: The failure reason if the event type for a refund is `"failed"` or `"returned"`. Null value otherwise.
      properties:
        ach_return_code:
          type: string
          nullable: true
          description: The ACH return code, e.g. `R01`.  A return code will be provided if and only if the refund status is `returned`. For a full listing of ACH return codes, see [Transfer errors](https://plaid.com/docs/errors/transfer/#ach-return-codes).
        description:
          type: string
          description: A human-readable description of the reason for the failure or reversal.
    TransferRefund:
      title: TransferRefund
      type: object
      additionalProperties: true
      description: Represents a refund within the Transfers API.
      properties:
        id:
          $ref: '#/components/schemas/TransferRefundID'
        transfer_id:
          $ref: '#/components/schemas/TransferIDForRefund'
        amount:
          $ref: '#/components/schemas/TransferRefundAmount'
        status:
          $ref: '#/components/schemas/TransferRefundStatus'
        failure_reason:
          $ref: '#/components/schemas/TransferRefundFailure'
        created:
          type: string
          format: date-time
          description: The datetime when this refund was created. This will be of the form `2006-01-02T15:04:05Z`
        network_trace_id:
          $ref: '#/components/schemas/TransferNetworkTraceID'
      required:
      - id
      - transfer_id
      - amount
      - status
      - created
      - failure_reason
    TransferRefundGetRequest:
      title: TransferRefundGetRequest
      type: object
      description: Defines the request schema for `/transfer/refund/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        refund_id:
          $ref: '#/components/schemas/TransferRefundID'
      required:
      - refund_id
    TransferRefundGetResponse:
      title: TransferRefundCreateResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/transfer/refund/get`
      properties:
        refund:
          $ref: '#/components/schemas/TransferRefund'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - refund
      - request_id
    TransferRefundCancelRequest:
      title: TransferRefundCancelRequest
      type: object
      description: Defines the request schema for `/transfer/refund/cancel`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        refund_id:
          $ref: '#/components/schemas/TransferRefundID'
      required:
      - refund_id
    TransferRefundCancelResponse:
      title: TransferRefundCancelResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/transfer/refund/cancel`
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - request_id
    SandboxBankTransferSimulateRequest:
      title: SandboxBankTransferSimulateRequest
      type: object
      description: Defines the request schema for `/sandbox/bank_transfer/simulate`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        bank_transfer_id:
          $ref: '#/components/schemas/BankTransferID'
        event_type:
          type: string
          description: |
            The asynchronous event to be simulated. May be: `posted`, `failed`, or `reversed`.

            An error will be returned if the event type is incompatible with the current transfer status. Compatible status --> event type transitions include:

            `pending` --> `failed`

            `pending` --> `posted`

            `posted` --> `reversed`
        failure_reason:
          $ref: '#/components/schemas/BankTransferFailure'
      required:
      - bank_transfer_id
      - event_type
    SandboxTransferSimulateRequest:
      title: SandboxTransferSimulateRequest
      type: object
      description: Defines the request schema for `/sandbox/transfer/simulate`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        transfer_id:
          $ref: '#/components/schemas/TransferID'
        test_clock_id:
          type: string
          description: Plaid’s unique identifier for a test clock. If provided, the event to be simulated is created at the `virtual_time` on the provided `test_clock`.
          nullable: true
        event_type:
          type: string
          description: |
            The asynchronous event to be simulated. May be: `posted`, `settled`, `failed`, or `returned`.

            An error will be returned if the event type is incompatible with the current transfer status. Compatible status --> event type transitions include:

            `pending` --> `failed`

            `pending` --> `posted`

            `posted` --> `returned`

            `posted` --> `settled`
        failure_reason:
          $ref: '#/components/schemas/TransferFailure'
      required:
      - transfer_id
      - event_type
    SandboxTransferRefundSimulateRequest:
      title: SandboxTransferRefundSimulateRequest
      type: object
      description: Defines the request schema for `/sandbox/transfer/refund/simulate`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        refund_id:
          $ref: '#/components/schemas/TransferRefundID'
        test_clock_id:
          type: string
          description: Plaid’s unique identifier for a test clock. If provided, the event to be simulated is created at the `virtual_time` on the provided `test_clock`.
          nullable: true
        event_type:
          type: string
          description: |
            The asynchronous event to be simulated. May be: `refund.posted`, `refund.settled`, `refund.failed`, or `refund.returned`.

            An error will be returned if the event type is incompatible with the current refund status. Compatible status --> event type transitions include:

            `refund.pending` --> `refund.failed`

            `refund.pending` --> `refund.posted`

            `refund.posted` --> `refund.returned`

            `refund.posted` --> `refund.settled`

            `refund.posted` events can only be simulated if the refunded transfer has been transitioned to settled. This mimics the ordering of events in Production.
        failure_reason:
          $ref: '#/components/schemas/TransferFailure'
      required:
      - refund_id
      - event_type
    SandboxTransferLedgerDepositSimulateRequest:
      title: SandboxTransferLedgerDepositSimulateRequest
      type: object
      description: Defines the request schema for `/sandbox/transfer/ledger/deposit/simulate`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        sweep_id:
          $ref: '#/components/schemas/TransferSweepID'
        event_type:
          $ref: '#/components/schemas/TransferLedgerSweepSimulateEventType'
        failure_reason:
          $ref: '#/components/schemas/TransferFailure'
      required:
      - sweep_id
      - event_type
    SandboxTransferLedgerWithdrawSimulateRequest:
      title: SandboxTransferLedgerWithdrawSimulateRequest
      type: object
      description: Defines the request schema for `/sandbox/transfer/ledger/withdraw/simulate`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        sweep_id:
          $ref: '#/components/schemas/TransferSweepID'
        event_type:
          $ref: '#/components/schemas/TransferLedgerSweepSimulateEventType'
        failure_reason:
          $ref: '#/components/schemas/TransferFailure'
      required:
      - sweep_id
      - event_type
    SandboxTransferSweepSimulateRequest:
      title: SandboxTransferSweepSimulateRequest
      type: object
      description: Defines the request schema for `/sandbox/transfer/sweep/simulate`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        test_clock_id:
          type: string
          description: Plaid’s unique identifier for a test clock. If provided, the sweep to be simulated is created on the day of the `virtual_time` on the `test_clock`. If the date of `virtual_time` is on weekend or a federal holiday, the next available banking day is used.
          nullable: true
    SandboxTransferLedgerSimulateAvailableRequest:
      title: SandboxTransferLedgerSimulateAvailableRequest
      type: object
      description: Defines the request schema for `/sandbox/transfer/ledger/simulate_available`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        test_clock_id:
          type: string
          description: Plaid’s unique identifier for a test clock. If provided, only the pending balance that is due before the `virtual_timestamp` on the test clock will be converted.
          nullable: true
    SandboxTransferTestClockCreateRequest:
      title: SandboxTransferTestClockCreateRequest
      type: object
      description: Defines the request schema for `/sandbox/transfer/test_clock/create`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        virtual_time:
          type: string
          title: VirtualTime
          format: date-time
          description: The virtual timestamp on the test clock. If not provided, the current timestamp will be used. This will be of the form `2006-01-02T15:04:05Z`.
          nullable: true
    SandboxTransferTestClockAdvanceRequest:
      title: SandboxTransferTestClockAdvanceRequest
      type: object
      description: Defines the request schema for `/sandbox/transfer/test_clock/advance`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        test_clock_id:
          $ref: '#/components/schemas/TransferTestClockID'
        new_virtual_time:
          $ref: '#/components/schemas/VirtualTime'
      required:
      - test_clock_id
      - new_virtual_time
    SandboxTransferTestClockGetRequest:
      title: SandboxTransferTestClockGetRequest
      type: object
      description: Defines the request schema for `/sandbox/transfer/test_clock/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        test_clock_id:
          $ref: '#/components/schemas/TransferTestClockID'
      required:
      - test_clock_id
    SandboxTransferTestClockListRequest:
      title: SandboxTransferTestClockListRequest
      type: object
      description: Defines the request schema for `/sandbox/transfer/test_clock/list`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        start_virtual_time:
          type: string
          format: date-time
          description: The start virtual timestamp of test clocks to return. This should be in RFC 3339 format (i.e. `2019-12-06T22:35:49Z`)
          nullable: true
        end_virtual_time:
          type: string
          format: date-time
          description: The end virtual timestamp of test clocks to return. This should be in RFC 3339 format (i.e. `2019-12-06T22:35:49Z`)
          nullable: true
        count:
          type: integer
          minimum: 1
          maximum: 25
          default: 25
          description: The maximum number of test clocks to return.
          nullable: true
        offset:
          type: integer
          default: 0
          minimum: 0
          description: The number of test clocks to skip before returning results.
    SandboxBankTransferSimulateResponse:
      title: SandboxBankTransferSimulateResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/sandbox/bank_transfer/simulate`
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - request_id
    SandboxTransferSimulateResponse:
      title: SandboxTransferSimulateResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/sandbox/transfer/simulate`
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - request_id
    SandboxTransferRefundSimulateResponse:
      title: SandboxTransferRefundSimulateResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/sandbox/transfer/refund/simulate`
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - request_id
    SandboxTransferLedgerSimulateAvailableResponse:
      title: SandboxTransferLedgerSimulateAvailableResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/sandbox/transfer/ledger/simulate_available`
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - request_id
    SandboxTransferLedgerDepositSimulateResponse:
      title: SandboxTransferLedgerDepositSimulateResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/sandbox/transfer/ledger/deposit/simulate`
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - request_id
    SandboxTransferLedgerWithdrawSimulateResponse:
      title: SandboxTransferLedgerWithdrawSimulateResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/sandbox/transfer/ledger/withdraw/simulate`
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - request_id
    SandboxTransferSweepSimulateResponse:
      title: SandboxTransferSweepSimulateResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/sandbox/transfer/sweep/simulate`
      properties:
        sweep:
          $ref: '#/components/schemas/SimulatedTransferSweep'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - request_id
    SandboxTransferTestClockCreateResponse:
      title: SandboxTransferTestClockCreateResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/sandbox/transfer/test_clock/create`
      properties:
        test_clock:
          $ref: '#/components/schemas/TransferTestClock'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - test_clock
      - request_id
    SandboxTransferTestClockAdvanceResponse:
      title: SandboxTransferTestClockAdvanceResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/sandbox/transfer/test_clock/advance`
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - request_id
    SandboxTransferTestClockGetResponse:
      title: SandboxTransferTestClockGetResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/sandbox/transfer/test_clock/get`
      properties:
        test_clock:
          $ref: '#/components/schemas/TransferTestClock'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - test_clock
      - request_id
    SandboxTransferTestClockListResponse:
      title: SandboxTransferTestClockListResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/sandbox/transfer/test_clock/list`
      properties:
        test_clocks:
          type: array
          items:
            $ref: '#/components/schemas/TransferTestClock'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - test_clocks
      - request_id
    SandboxTransferRepaymentSimulateRequest:
      title: SandboxTransferRepaymentSimulateRequest
      type: object
      description: Defines the request schema for `/sandbox/transfer/repayment/simulate`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
    SandboxTransferRepaymentSimulateResponse:
      title: SandboxTransferSimulateResponse
      type: object
      additionalProperties: true
      description: Defines the response schema for `/sandbox/transfer/repayment/simulate`
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - request_id
    AccountFiltersResponse:
      title: AccountFiltersResponse
      description: |
        The `account_filters` specified in the original call to `/link/token/create`.
      type: object
      additionalProperties: true
      properties:
        depository:
          $ref: '#/components/schemas/DepositoryFilter'
        credit:
          $ref: '#/components/schemas/CreditFilter'
        loan:
          $ref: '#/components/schemas/LoanFilter'
        investment:
          $ref: '#/components/schemas/InvestmentFilter'
    InstitutionsSearchAccountFilter:
      title: InstitutionsSearchAccountFilter
      description: An account filter to apply to institutions search requests
      type: object
      additionalProperties: true
      properties:
        loan:
          type: array
          items:
            $ref: '#/components/schemas/AccountSubtype'
        depository:
          type: array
          items:
            $ref: '#/components/schemas/AccountSubtype'
        credit:
          type: array
          items:
            $ref: '#/components/schemas/AccountSubtype'
        investment:
          type: array
          items:
            $ref: '#/components/schemas/AccountSubtype'
    AccountIdentity:
      description: Identity information about an account
      title: AccountIdentity
      allOf:
      - $ref: '#/components/schemas/AccountBase'
      - type: object
        additionalProperties: true
        properties:
          owners:
            type: array
            description: Data returned by the financial institution about the account owner or owners. Only returned by Identity or Assets endpoints. For business accounts, the name reported may be either the name of the individual or the name of the business, depending on the institution; detecting whether the linked account is a business account is not currently supported. Multiple owners on a single account will be represented in the same `owner` object, not in multiple owner objects within the array. In API versions 2018-05-22 and earlier, the `owners` object is not returned, and instead identity information is returned in the top level `identity` object. For more details, see [Plaid API versioning](https://plaid.com/docs/api/versioning/#version-2019-05-29)
            items:
              $ref: '#/components/schemas/Owner'
          documents:
            type: array
            description: Array of documents that identity data is dervied from. This array will be empty if none of the account identity is from a document.
            items:
              $ref: '#/components/schemas/IdentityDocument'
            x-hidden-from-docs: true
        required:
        - owners
    IdentityDocument:
      title: IdentityDocument
      type: object
      description: Document object with metadata of the document uploaded
      properties:
        metadata:
          $ref: '#/components/schemas/IdentityDocumentMetadata'
        document_id:
          type: string
      x-hidden-from-docs: true
    AccountIdentityMatchScore:
      description: Identity match scores for an account
      title: AccountIdentityMatchScore
      allOf:
      - $ref: '#/components/schemas/AccountBase'
      - type: object
        additionalProperties: true
        properties:
          legal_name:
            $ref: '#/components/schemas/NameMatchScore'
          phone_number:
            $ref: '#/components/schemas/PhoneNumberMatchScore'
          email_address:
            $ref: '#/components/schemas/EmailAddressMatchScore'
          address:
            $ref: '#/components/schemas/AddressMatchScore'
    NameMatchScore:
      title: NameMatchScore
      type: object
      nullable: true
      additionalProperties: true
      description: Score found by matching name provided by the API with the name on the account at the financial institution. If the account contains multiple owners, the maximum match score is filled.
      properties:
        score:
          type: integer
          nullable: true
          description: Match score for name. 100 is a perfect score, 99-85 means a strong match, 84-70 is a partial match, any score less than 70 is a mismatch. Typically, the match threshold should be set to a score of 70 or higher. If the name is missing from either the API or financial institution, this is null.
        is_first_name_or_last_name_match:
          type: boolean
          nullable: true
          description: first or last name completely matched, likely a family member
        is_nickname_match:
          type: boolean
          nullable: true
          description: nickname matched, example Jennifer and Jenn.
        is_business_name_detected:
          type: boolean
          nullable: true
          deprecated: true
          description: Is `true` if the name on either of the names that was matched for the score contained strings indicative of a business name, such as "CORP", "LLC", "INC", or "LTD". A `true` result generally indicates the entity is a business. However, a `false` result does not mean the entity is not a business, as some businesses do not use these strings in the names used for their financial institution accounts.
    PhoneNumberMatchScore:
      title: PhoneNumberMatchScore
      type: object
      nullable: true
      additionalProperties: true
      description: Score found by matching phone number provided by the API with the phone number on the account at the financial institution. 100 is a perfect match and 0 is a no match. If the account contains multiple owners, the maximum match score is filled.
      properties:
        score:
          type: integer
          nullable: true
          description: Match score for normalized phone number. 100 is a perfect match, 99-70 is a partial match (matching the same phone number with extension against one without extension, etc.), anything below 70 is considered a mismatch. Typically, the match threshold should be set to a score of 70 or higher. If the phone number is missing from either the API or financial institution, this is null.
    EmailAddressMatchScore:
      title: EmailAddressMatchScore
      type: object
      nullable: true
      additionalProperties: true
      description: Score found by matching email provided by the API with the email on the account at the financial institution. 100 is a perfect match and 0 is a no match. If the account contains multiple owners, the maximum match score is filled.
      properties:
        score:
          type: integer
          nullable: true
          description: Match score for normalized email. 100 is a perfect match, 99-70 is a partial match (matching the same email with different '+' extensions), anything below 70 is considered a mismatch. Typically, the match threshold should be set to a score of 70 or higher. If the email is missing from either the API or financial institution, this is null.
    AddressMatchScore:
      title: AddressMatchScore
      type: object
      nullable: true
      additionalProperties: true
      description: Score found by matching address provided by the API with the address on the account at the financial institution. The score can range from 0 to 100 where 100 is a perfect match and 0 is a no match. If the account contains multiple owners, the maximum match score is filled.
      properties:
        score:
          type: integer
          nullable: true
          description: Match score for address. 100 is a perfect match, 99-90 is a strong match, 89-70 is a partial match, anything below 70 is considered a weak match. Typically, the match threshold should be set to a score of 70 or higher. If the address is missing from either the API or financial institution, this is null.
        is_postal_code_match:
          type: boolean
          nullable: true
          description: postal code was provided for both and was a match
    DepositoryFilter:
      title: DepositoryFilter
      description: A filter to apply to `depository`-type accounts
      type: object
      additionalProperties: true
      properties:
        account_subtypes:
          $ref: '#/components/schemas/DepositoryAccountSubtypes'
      required:
      - account_subtypes
    CreditFilter:
      title: CreditFilter
      description: A filter to apply to `credit`-type accounts
      type: object
      additionalProperties: true
      properties:
        account_subtypes:
          $ref: '#/components/schemas/CreditAccountSubtypes'
      required:
      - account_subtypes
    LoanFilter:
      title: LoanFilter
      description: A filter to apply to `loan`-type accounts
      type: object
      additionalProperties: true
      properties:
        account_subtypes:
          $ref: '#/components/schemas/LoanAccountSubtypes'
      required:
      - account_subtypes
    InvestmentFilter:
      title: InvestmentFilter
      description: A filter to apply to `investment`-type accounts (or `brokerage`-type accounts for API versions 2018-05-22 and earlier).
      type: object
      additionalProperties: true
      properties:
        account_subtypes:
          $ref: '#/components/schemas/InvestmentAccountSubtypes'
      required:
      - account_subtypes
    OtherFilter:
      title: OtherFilter
      description: A filter to apply to `other`-type accounts
      type: object
      additionalProperties: true
      properties:
        account_subtypes:
          $ref: '#/components/schemas/OtherAccountSubtypes'
      required:
      - account_subtypes
    DepositoryAccountSubtypes:
      title: DepositoryAccountSubtypes
      type: array
      description: 'An array of account subtypes to display in Link. If not specified, all account subtypes will be shown. For a full list of valid types and subtypes, see the [Account schema](https://plaid.com/docs/api/accounts#account-type-schema). '
      items:
        $ref: '#/components/schemas/DepositoryAccountSubtype'
    CreditAccountSubtypes:
      title: CreditAccountSubtypes
      type: array
      description: 'An array of account subtypes to display in Link. If not specified, all account subtypes will be shown. For a full list of valid types and subtypes, see the [Account schema](https://plaid.com/docs/api/accounts#account-type-schema). '
      items:
        $ref: '#/components/schemas/CreditAccountSubtype'
    LoanAccountSubtypes:
      title: LoanAccountSubtypes
      type: array
      description: 'An array of account subtypes to display in Link. If not specified, all account subtypes will be shown. For a full list of valid types and subtypes, see the [Account schema](https://plaid.com/docs/api/accounts#account-type-schema). '
      items:
        $ref: '#/components/schemas/LoanAccountSubtype'
    InvestmentAccountSubtypes:
      title: InvestmentAccountSubtypes
      type: array
      description: 'An array of account subtypes to display in Link. If not specified, all account subtypes will be shown. For a full list of valid types and subtypes, see the [Account schema](https://plaid.com/docs/api/accounts#account-type-schema). '
      items:
        $ref: '#/components/schemas/InvestmentAccountSubtype'
    OtherAccountSubtypes:
      title: OtherAccountSubtypes
      type: array
      description: 'An array of account subtypes to display in Link. If not specified, all account subtypes will be shown. For a full list of valid types and subtypes, see the [Account schema](https://plaid.com/docs/api/accounts#account-type-schema). '
      items:
        $ref: '#/components/schemas/OtherAccountSubtype'
    DepositoryAccountSubtype:
      type: string
      description: Valid account subtypes for depository accounts. For a list containing descriptions of each subtype, see [Account schemas](https://plaid.com/docs/api/accounts/#StandaloneAccountType-depository).
      enum:
      - checking
      - savings
      - hsa
      - cd
      - money market
      - paypal
      - prepaid
      - cash management
      - ebt
      - all
    CreditAccountSubtype:
      type: string
      description: Valid account subtypes for credit accounts. For a list containing descriptions of each subtype, see [Account schemas](https://plaid.com/docs/api/accounts/#StandaloneAccountType-credit).
      enum:
      - credit card
      - paypal
      - all
    LoanAccountSubtype:
      type: string
      description: Valid account subtypes for loan accounts. For a list containing descriptions of each subtype, see [Account schemas](https://plaid.com/docs/api/accounts/#StandaloneAccountType-loan).
      enum:
      - auto
      - business
      - commercial
      - construction
      - consumer
      - home equity
      - loan
      - mortgage
      - line of credit
      - student
      - other
      - all
    InvestmentAccountSubtype:
      type: string
      description: Valid account subtypes for investment accounts. For a list containing descriptions of each subtype, see [Account schemas](https://plaid.com/docs/api/accounts/#StandaloneAccountType-investment).
      enum:
      - "529"
      - 401a
      - 401k
      - 403B
      - 457b
      - brokerage
      - cash isa
      - crypto exchange
      - education savings account
      - fixed annuity
      - gic
      - health reimbursement arrangement
      - hsa
      - ira
      - isa
      - keogh
      - lif
      - life insurance
      - lira
      - lrif
      - lrsp
      - mutual fund
      - non-custodial wallet
      - non-taxable brokerage account
      - other
      - other annuity
      - other insurance
      - pension
      - prif
      - profit sharing plan
      - qshr
      - rdsp
      - resp
      - retirement
      - rlif
      - roth
      - roth 401k
      - rrif
      - rrsp
      - sarsep
      - sep ira
      - simple ira
      - sipp
      - stock plan
      - tfsa
      - trust
      - ugma
      - utma
      - variable annuity
      - all
    OtherAccountSubtype:
      type: string
      description: Valid account subtypes for other accounts. For a list containing descriptions of each subtype, see [Account schemas](https://plaid.com/docs/api/accounts/#StandaloneAccountType-other).
      enum:
      - other
      - all
    EmployersSearchRequest:
      title: EmployersSearchRequest
      type: object
      description: EmployersSearchRequest defines the request schema for `/employers/search`.
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        query:
          type: string
          description: The employer name to be searched for.
        products:
          type: array
          description: The Plaid products the returned employers should support. Currently, this field must be set to `"deposit_switch"`.
          items:
            type: string
      required:
      - query
      - products
    EmployersSearchResponse:
      title: EmployersSearchResponse
      type: object
      additionalProperties: true
      description: EmployersSearchResponse defines the response schema for `/employers/search`.
      properties:
        employers:
          type: array
          description: A list of employers matching the search criteria.
          items:
            $ref: '#/components/schemas/Employer'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - employers
      - request_id
    Employer:
      title: Employer
      type: object
      additionalProperties: true
      description: Data about the employer.
      properties:
        employer_id:
          type: string
          description: Plaid's unique identifier for the employer.
        name:
          type: string
          description: The name of the employer
        address:
          $ref: '#/components/schemas/AddressDataNullable'
        confidence_score:
          type: number
          format: double
          description: A number from 0 to 1 indicating Plaid's level of confidence in the pairing between the employer and the institution (not yet implemented).
      required:
      - employer_id
      - name
      - address
      - confidence_score
    IncomeVerificationCreateRequest:
      title: IncomeVerificationCreateRequest
      type: object
      description: IncomeVerificationCreateRequest defines the request schema for `/income/verification/create`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        webhook:
          type: string
          description: The URL endpoint to which Plaid should send webhooks related to the progress of the income verification process.
        precheck_id:
          type: string
          description: The ID of a precheck created with `/income/verification/precheck`. Will be used to improve conversion of the income verification flow.
        options:
          $ref: '#/components/schemas/IncomeVerificationCreateRequestOptions'
      required:
      - webhook
    IncomeVerificationCreateRequestOptions:
      title: IncomeVerificationCreateRequestOptions
      type: object
      description: Optional arguments for `/income/verification/create`
      properties:
        access_tokens:
          type: array
          description: An array of access tokens corresponding to the Items that will be cross-referenced with the product data. Plaid will attempt to correlate transaction history from these Items with data from the user's paystub, such as date and amount. If the `transactions` product was not initialized for the Items during Link, it will be initialized after this Link session.
          items:
            $ref: '#/components/schemas/AccessToken'
    IncomeVerificationCreateResponse:
      title: IncomeVerificationCreateResponse
      type: object
      additionalProperties: true
      description: IncomeVerificationCreateResponse defines the response schema for `/income/verification/create`.
      properties:
        income_verification_id:
          type: string
          description: ID of the verification. This ID is persisted throughout the lifetime of the verification.
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - income_verification_id
      - request_id
    IncomeVerificationPrecheckRequest:
      title: IncomeVerificationPrecheckRequest
      type: object
      description: IncomeVerificationPrecheckRequest defines the request schema for `/income/verification/precheck`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        user:
          $ref: '#/components/schemas/IncomeVerificationPrecheckUser'
        employer:
          $ref: '#/components/schemas/IncomeVerificationPrecheckEmployer'
        payroll_institution:
          $ref: '#/components/schemas/IncomeVerificationPrecheckPayrollInstitution'
        transactions_access_token:
          deprecated: true
          allOf:
          - $ref: '#/components/schemas/AccessTokenNullable'
        transactions_access_tokens:
          type: array
          description: An array of access tokens corresponding to Items belonging to the user whose eligibility is being checked. Note that if the Items specified here are not already initialized with `transactions`, providing them in this field will cause these Items to be initialized with (and billed for) the Transactions product.
          items:
            $ref: '#/components/schemas/AccessToken'
        us_military_info:
          $ref: '#/components/schemas/IncomeVerificationPrecheckMilitaryInfo'
    IncomeVerificationPrecheckEmployer:
      title: IncomeVerificationPrecheckEmployer
      type: object
      nullable: true
      description: Information about the end user's employer
      properties:
        name:
          type: string
          nullable: true
          description: The employer's name
        address:
          $ref: '#/components/schemas/IncomeVerificationPrecheckEmployerAddress'
        tax_id:
          type: string
          nullable: true
          description: The employer's tax id
        url:
          type: string
          nullable: true
          description: The URL for the employer's public website
    IncomeVerificationPrecheckEmployerAddress:
      title: IncomeVerificationPrecheckEmployerAddress
      description: The address of the employer
      type: object
      nullable: true
      allOf:
      - $ref: '#/components/schemas/IncomeVerificationPrecheckEmployerAddressData'
      - type: object
        additionalProperties: true
    IncomeVerificationPrecheckPayrollInstitution:
      title: IncomeVerificationPrecheckPayrollInstitution
      type: object
      nullable: true
      description: Information about the end user's payroll institution
      properties:
        name:
          type: string
          nullable: true
          description: The name of payroll institution
    IncomeVerificationPrecheckEmployerAddressData:
      title: AddressData
      type: object
      additionalProperties: true
      description: Data about the components comprising an address.
      properties:
        city:
          type: string
          description: The full city name
        country:
          type: string
          description: The ISO 3166-1 alpha-2 country code
        postal_code:
          type: string
          description: The postal code. In API versions 2018-05-22 and earlier, this field is called `zip`.
        region:
          type: string
          description: |-
            The region or state. In API versions 2018-05-22 and earlier, this field is called `state`.
            Example: `"NC"`
        street:
          type: string
          description: |-
            The full street address
            Example: `"564 Main Street, APT 15"`
    IncomeVerificationPrecheckMilitaryInfo:
      title: IncomeVerificationPrecheckMilitaryInfo
      description: Data about military info in the income verification precheck.
      type: object
      nullable: true
      properties:
        is_active_duty:
          type: boolean
          nullable: true
          description: Is the user currently active duty in the US military
        branch:
          type: string
          nullable: true
          description: |-
            If the user is currently serving in the US military, the branch of the military in which they are serving
            Valid values: 'AIR FORCE', 'ARMY', 'COAST GUARD', 'MARINES', 'NAVY', 'UNKNOWN'
    IncomeVerificationPrecheckUser:
      title: IncomeVerificationPrecheckUser
      type: object
      nullable: true
      description: Information about the user whose eligibility is being evaluated.
      properties:
        first_name:
          type: string
          nullable: true
          description: The user's first name
        last_name:
          type: string
          nullable: true
          description: The user's last name
        email_address:
          type: string
          nullable: true
          description: The user's email address
        home_address:
          $ref: '#/components/schemas/SignalAddressData'
    IncomeVerificationPrecheckResponse:
      title: IncomeVerificationPrecheckResponse
      additionalProperties: true
      type: object
      description: IncomeVerificationPrecheckResponse defines the response schema for `/income/verification/precheck`.
      properties:
        precheck_id:
          type: string
          description: ID of the precheck. Provide this value when calling `/link/token/create` in order to optimize Link conversion.
        request_id:
          $ref: '#/components/schemas/RequestID'
        confidence:
          $ref: '#/components/schemas/IncomeVerificationPrecheckConfidence'
      required:
      - precheck_id
      - confidence
      - request_id
    IncomeVerificationPrecheckConfidence:
      description: |-
        The confidence that Plaid can support the user in the digital income verification flow instead of requiring a manual paystub upload. One of the following:

        `"HIGH"`: It is very likely that this user can use the digital income verification flow.

        "`LOW`": It is unlikely that this user can use the digital income verification flow.

        `"UNKNOWN"`: It was not possible to determine if the user is supportable with the information passed.
      type: string
      enum:
      - HIGH
      - LOW
      - UNKNOWN
    LinkTokenCreateRequestIncomeVerification:
      title: LinkTokenCreateRequestIncomeVerification
      type: object
      description: Specifies options for initializing Link for use with the Income product. This field is required if `income_verification` is included in the `products` array.
      properties:
        income_verification_id:
          type: string
          deprecated: true
          description: The `income_verification_id` of the verification instance, as provided by `/income/verification/create`.
        asset_report_id:
          type: string
          description: The `asset_report_id` of an asset report associated with the user, as provided by `/asset_report/create`. Providing an `asset_report_id` is optional and can be used to verify the user through a streamlined flow. If provided, the bank linking flow will be skipped.
        access_tokens:
          type: array
          items:
            $ref: '#/components/schemas/AccessToken'
          description: |-
            An array of access tokens corresponding to Items that a user has previously connected with. Data from these institutions will be cross-referenced with document data received during the Document Income flow to help verify that the uploaded documents are accurate. If the `transactions` product was not initialized for these Items during link, it will be initialized after this Link session.

            This field should only be used with the `payroll` income source type.
          nullable: true
        income_source_types:
          type: array
          description: The types of source income data that users will be permitted to share. Options include `bank` and `payroll`. Currently you can only specify one of these options.
          items:
            $ref: '#/components/schemas/IncomeVerificationSourceType'
        bank_income:
          $ref: '#/components/schemas/LinkTokenCreateRequestIncomeVerificationBankIncome'
        payroll_income:
          $ref: '#/components/schemas/LinkTokenCreateRequestIncomeVerificationPayrollIncome'
        stated_income_sources:
          type: array
          description: A list of user stated income sources
          items:
            $ref: '#/components/schemas/LinkTokenCreateRequestUserStatedIncomeSource'
    IncomeVerificationSourceType:
      title: IncomeVerificationSourceType
      enum:
      - bank
      - payroll
      description: The types of source income data that users should be able to share
      type: string
    LinkTokenCreateRequestIncomeVerificationBankIncome:
      title: LinkTokenCreateRequestIncomeVerificationBankIncome
      type: object
      description: Specifies options for initializing Link for use with Bank Income. This field is required if `income_verification` is included in the `products` array and `bank` is specified in `income_source_types`.
      properties:
        days_requested:
          type: integer
          description: The number of days of data to request for the Bank Income product
          minimum: 1
          maximum: 731
        enable_multiple_items:
          type: boolean
          nullable: true
          default: false
          description: Whether to enable multiple Items to be added in the Link session
      required:
      - days_requested
    LinkTokenCreateRequestIncomeVerificationPayrollIncome:
      title: LinkTokenCreateRequestIncomeVerificationPayrollIncome
      type: object
      description: Specifies options for initializing Link for use with Payroll Income (including Document Income). Further customization options for Document Income, such as customizing which document types may be uploaded, are also available via the [Link Customization pane](https://dashboard.plaid.com/link) in the Dashboard. (Requires Production enablement.)
      properties:
        flow_types:
          type: array
          nullable: true
          description: The types of payroll income verification to enable for the Link session. If none are specified, then users will see both document and digital payroll income.
          items:
            $ref: '#/components/schemas/IncomeVerificationPayrollFlowType'
        is_update_mode:
          type: boolean
          description: An identifier to indicate whether the income verification Link token will be used for update mode. This field is only relevant for participants in the Payroll Income Refresh beta.
          default: false
        item_id_to_update:
          type: string
          description: Uniquely identify a payroll income Item to update with.  This field is only relevant for participants in the Payroll Income Refresh beta.
          nullable: true
        parsing_config:
          type: array
          nullable: true
          description: The types of analysis to enable for document uploads. If this field is not provided, then docs will undergo OCR parsing only.
          items:
            $ref: '#/components/schemas/IncomeVerificationDocParsingConfig'
    IncomeVerificationPayrollFlowType:
      title: IncomeVerificationPayrollFlowType
      enum:
      - payroll_digital_income
      - payroll_document_income
      description: Flow types to retrieve payroll income data
      type: string
    IncomeVerificationDocParsingConfig:
      title: IncomeVerificationDocParsingConfig
      enum:
      - ocr
      - fraud_risk
      description: Analysis options to enable for document parsing
      type: string
    IncomeVerificationStatusWebhook:
      title: IncomeVerificationStatusWebhook
      type: object
      additionalProperties: true
      description: Fired when the status of an income verification instance has changed. It will typically take several minutes for this webhook to fire after the end user has uploaded their documents in the Document Income flow.
      x-examples:
        example-1:
          webhook_type: INCOME
          webhook_code: INCOME_VERIFICATION
          item_id: gAXlMgVEw5uEGoQnnXZ6tn9E7Mn3LBc4PJVKZ
          user_id: 9eaba3c2fdc916bc197f279185b986607dd21682a5b04eab04a5a03e8b3f3334
          verification_status: VERIFICATION_STATUS_PROCESSING_COMPLETE
          environment: production
      properties:
        webhook_type:
          type: string
          description: '`"INCOME"`'
        webhook_code:
          type: string
          description: '`INCOME_VERIFICATION`'
        item_id:
          type: string
          description: The Item ID associated with the verification.
        user_id:
          $ref: '#/components/schemas/UserId'
        verification_status:
          type: string
          description: |-
            `VERIFICATION_STATUS_PROCESSING_COMPLETE`:  The income verification processing has completed. This indicates that the documents have been parsed successfully or that the documents were not parsable. If the user uploaded multiple documents, this webhook will fire when all documents have finished processing. Call the `/credit/payroll_income/get` endpoint and check the document metadata to see which documents were successfully parsed.

            `VERIFICATION_STATUS_PROCESSING_FAILED`: An unexpected internal error occurred when attempting to process the verification documentation.

            `VERIFICATION_STATUS_PENDING_APPROVAL`: (deprecated) The income verification has been sent to the user for review.
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - item_id
      - verification_status
      - environment
    IncomeVerificationRiskSignalsStatusWebhook:
      title: IncomeVerificationRiskSignalsStatusWebhook
      type: object
      additionalProperties: true
      description: Fired when risk signals have been processed for documents uploaded via Document Income. It will typically take a minute or two for this webhook to fire after the end user has uploaded their documents in the Document Income flow. Once this webhook has fired, `/credit/payroll_income/risk_signals/get` may then be called to determine whether the documents were successfully processed and to retrieve risk data.
      x-examples:
        example-1:
          webhook_type: INCOME
          webhook_code: INCOME_VERIFICATION_RISK_SIGNALS
          item_id: gAXlMgVEw5uEGoQnnXZ6tn9E7Mn3LBc4PJVKZ
          user_id: 9eaba3c2fdc916bc197f279185b986607dd21682a5b04eab04a5a03e8b3f3334
          status: RISK_SIGNALS_PROCESSING_COMPLETE
          environment: production
      properties:
        webhook_type:
          type: string
          description: '`"INCOME"`'
        webhook_code:
          type: string
          description: '`INCOME_VERIFICATION_RISK_SIGNALS`'
        item_id:
          type: string
          description: The Item ID associated with the verification.
        user_id:
          $ref: '#/components/schemas/UserId'
        risk_signals_status:
          type: string
          description: '`RISK_SIGNALS_PROCESSING_COMPLETE`: The income verification fraud detection processing has completed. If the user uploaded multiple documents, this webhook will fire when all documents have finished processing. Call the `/credit/payroll_income/risk_signals/get` endpoint to get all risk signal data.'
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - item_id
      - status
      - environment
    LinkTokenCreateRequestBaseReport:
      title: LinkTokenCreateRequestBaseReport
      type: object
      x-hidden-from-docs: true
      description: Specifies options for initializing Link for use with the Base Report product. This field is required if `assets` is included in the `products` array and the client is CRA-enabled.
      properties:
        days_requested:
          type: integer
          description: The maximum integer number of days of history to include in the Base Report.
          minimum: 1
          maximum: 730
      required:
      - days_requested
    LinkTokenCreateRequestEmployment:
      title: LinkTokenCreateRequestEmployment
      type: object
      x-hidden-from-docs: true
      description: Specifies options for initializing Link for use with the Employment product. This field is required if `employment` is included in the `products` array.
      properties:
        employment_source_types:
          type: array
          description: The types of source employment data that users will be permitted to share. Options include `bank` and `payroll`. Currently you can only specify one of these options.
          items:
            $ref: '#/components/schemas/EmploymentSourceType'
        bank_employment:
          $ref: '#/components/schemas/LinkTokenCreateRequestEmploymentBankIncome'
    EmploymentSourceType:
      title: EmploymentSourceType
      enum:
      - bank
      - payroll
      description: The types of source employment data that users should be able to share
      type: string
    LinkTokenCreateRequestEmploymentBankIncome:
      title: LinkTokenCreateRequestEmploymentBankIncome
      type: object
      description: Specifies options for initializing Link for use with Bank Employment. This field is required if `employment` is included in the `products` array and `bank` is specified in `employment_source_types`.
      properties:
        days_requested:
          type: integer
          description: The number of days of data to request for the Bank Employment product.
      required:
      - days_requested
    IncomeSummary:
      title: IncomeSummary
      type: object
      additionalProperties: true
      description: The verified fields from a paystub verification. All fields are provided as reported on the paystub.
      properties:
        employer_name:
          $ref: '#/components/schemas/EmployerIncomeSummaryFieldString'
        employee_name:
          $ref: '#/components/schemas/EmployeeIncomeSummaryFieldString'
        ytd_gross_income:
          $ref: '#/components/schemas/YTDGrossIncomeSummaryFieldNumber'
        ytd_net_income:
          $ref: '#/components/schemas/YTDNetIncomeSummaryFieldNumber'
        pay_frequency:
          $ref: '#/components/schemas/PayFrequency'
        projected_wage:
          $ref: '#/components/schemas/ProjectedIncomeSummaryFieldNumber'
        verified_transaction:
          $ref: '#/components/schemas/TransactionData'
      required:
      - employer_name
      - employee_name
      - ytd_gross_income
      - ytd_net_income
      - pay_frequency
      - projected_wage
      - verified_transaction
    TransactionData:
      title: TransactionData
      type: object
      additionalProperties: true
      nullable: true
      description: Information about the matched direct deposit transaction used to verify a user's payroll information.
      properties:
        description:
          type: string
          description: The description of the transaction.
        amount:
          type: number
          format: double
          description: The amount of the transaction.
        date:
          type: string
          format: date
          description: The date of the transaction, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format ("yyyy-mm-dd").
        account_id:
          type: string
          description: A unique identifier for the end user's account.
        transaction_id:
          type: string
          description: A unique identifier for the transaction.
      required:
      - description
      - amount
      - date
      - account_id
      - transaction_id
    IncomeSummaryFieldString:
      title: IncomeSummaryFieldString
      description: Data about the income summary
      type: object
      additionalProperties: true
      nullable: true
      properties:
        value:
          type: string
          description: The value of the field.
        verification_status:
          $ref: '#/components/schemas/VerificationStatus'
      required:
      - value
      - verification_status
    EmployerIncomeSummaryFieldString:
      description: The name of the employer, as reported on the paystub.
      allOf:
      - $ref: '#/components/schemas/IncomeSummaryFieldString'
      - type: object
        additionalProperties: true
    EmployeeIncomeSummaryFieldString:
      description: The name of the employee, as reported on the paystub.
      allOf:
      - $ref: '#/components/schemas/IncomeSummaryFieldString'
      - type: object
        additionalProperties: true
    IncomeSummaryFieldNumber:
      title: IncomeSummaryFieldNumber
      description: Field number for income summary
      type: object
      additionalProperties: true
      nullable: true
      properties:
        value:
          type: number
          format: double
          description: The value of the field.
        verification_status:
          $ref: '#/components/schemas/VerificationStatus'
      required:
      - value
      - verification_status
    YTDGrossIncomeSummaryFieldNumber:
      description: Year-to-date pre-tax earnings, as reported on the paystub.
      allOf:
      - $ref: '#/components/schemas/IncomeSummaryFieldNumber'
      - type: object
        additionalProperties: true
        description: Year-to-date pre-tax earnings, as reported on the paystub.
    YTDNetIncomeSummaryFieldNumber:
      description: Year-to-date earnings after any tax withholdings, benefit payments or deductions, as reported on the paystub.
      allOf:
      - $ref: '#/components/schemas/IncomeSummaryFieldNumber'
      - type: object
        additionalProperties: true
        description: Year-to-date earnings after any tax withholdings, benefit payments or deductions, as reported on the paystub.
    ProjectedIncomeSummaryFieldNumber:
      description: The employee's estimated annual salary, as derived from information reported on the paystub.
      allOf:
      - $ref: '#/components/schemas/IncomeSummaryFieldNumber'
      - type: object
        additionalProperties: true
        description: The employee's estimated annual salary, as derived from information reported on the paystub.
    PayFrequency:
      title: PayFrequency
      description: The frequency of the pay period.
      type: object
      additionalProperties: true
      nullable: true
      properties:
        value:
          $ref: '#/components/schemas/PayFrequencyValue'
        verification_status:
          $ref: '#/components/schemas/VerificationStatus'
      required:
      - value
      - verification_status
    PayFrequencyValue:
      type: string
      title: PayFrequencyValue
      enum:
      - monthly
      - semimonthly
      - weekly
      - biweekly
      - unknown
      - null
      description: The frequency of the pay period.
    VerificationStatus:
      type: string
      title: VerificationStatus
      description: |-
        The verification status. One of the following:

        `"VERIFIED"`: The information was successfully verified.

        `"UNVERIFIED"`: The verification has not yet been performed.

        `"NEEDS_INFO"`: The verification was attempted but could not be completed due to missing information.

        "`UNABLE_TO_VERIFY`": The verification was performed and the information could not be verified.

        `"UNKNOWN"`: The verification status is unknown.
      enum:
      - VERIFIED
      - UNVERIFIED
      - NEEDS_INFO
      - UNABLE_TO_VERIFY
      - UNKNOWN
    VerificationRefreshStatus:
      type: string
      title: VerificationRefreshStatus
      description: |-
        The verification refresh status. One of the following:

        `"VERIFICATION_REFRESH_STATUS_USER_PRESENCE_REQUIRED"` User presence is required to refresh an income verification.
        `"VERIFICATION_REFRESH_SUCCESSFUL"` The income verification refresh was successful.
        `"VERIFICATION_REFRESH_NOT_FOUND"` No new data was found after the income verification refresh.
      enum:
      - VERIFICATION_REFRESH_STATUS_USER_PRESENCE_REQUIRED
      - VERIFICATION_REFRESH_SUCCESSFUL
      - VERIFICATION_REFRESH_NOT_FOUND
    CreditPayrollIncomeRefreshStatus:
      type: string
      title: CreditPayrollIncomeRefreshStatus
      description: |-
        The verification refresh status. One of the following:

        `"USER_PRESENCE_REQUIRED"` User presence is required to refresh an income verification.
        `"SUCCESSFUL"` The income verification refresh was successful.
        `"NOT_FOUND"` No new data was found after the income verification refresh.
      x-override-enum-values-shown:
      - USER_PRESENCE_REQUIRED
      - SUCCESSFUL
      - NOT_FOUND
    IncomeVerificationPaystubsGetRequest:
      title: IncomeVerificationPaystubsGetRequest
      type: object
      description: IncomeVerificationPaystubsGetRequest defines the request schema for `/income/verification/paystubs/get`.
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        income_verification_id:
          type: string
          nullable: true
          deprecated: true
          description: The ID of the verification for which to get paystub information.
        access_token:
          $ref: '#/components/schemas/AccessTokenNullable'
    IncomeVerificationPaystubsGetResponse:
      title: IncomeVerificationPaystubsGetResponse
      type: object
      additionalProperties: true
      description: IncomeVerificationPaystubsGetResponse defines the response schema for `/income/verification/paystubs/get`.
      properties:
        document_metadata:
          description: Metadata for an income document.
          type: array
          items:
            $ref: '#/components/schemas/DocumentMetadata'
        paystubs:
          type: array
          items:
            $ref: '#/components/schemas/Paystub'
        error:
          $ref: '#/components/schemas/PlaidError'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - paystubs
      - request_id
    DocumentMetadata:
      title: DocumentMetadata
      type: object
      additionalProperties: true
      description: An object representing metadata from the end user's uploaded document.
      properties:
        name:
          type: string
          description: The name of the document.
        status:
          type: string
          description: |-
            The processing status of the document.

            `PROCESSING_COMPLETE`: The document was successfully processed.

            `DOCUMENT_ERROR`: The document could not be processed. Possible causes include: The document was an unacceptable document type such as an offer letter or bank statement, the document image was cropped or blurry, or the document was corrupted.

            `UNKNOWN` or `null`: An internal error occurred. If this happens repeatedly, contact support or your Plaid account manager.
          nullable: true
          x-override-enum-values-shown:
          - UNKNOWN
          - PROCESSING_COMPLETE
          - DOCUMENT_ERROR
          - null
        doc_id:
          type: string
          description: An identifier of the document that is also present in the paystub response.
        doc_type:
          $ref: '#/components/schemas/DocType'
    DocType:
      title: DocType
      type: string
      description: |-
        The type of document.

        `DOCUMENT_TYPE_PAYSTUB`: A paystub.

        `DOCUMENT_TYPE_BANK_STATEMENT`: A bank statement.

        `DOCUMENT_TYPE_US_TAX_W2`: A W-2 wage and tax statement provided by a US employer reflecting wages earned by the employee.

        `DOCUMENT_TYPE_US_MILITARY_ERAS`: An electronic Retirement Account Statement (eRAS) issued by the US military.

        `DOCUMENT_TYPE_US_MILITARY_LES`: A Leave and Earnings Statement (LES) issued by the US military.

        `DOCUMENT_TYPE_US_MILITARY_CLES`: A Civilian Leave and Earnings Statement (CLES) issued by the US military.

        `DOCUMENT_TYPE_GIG`: Used to indicate that the income is related to gig work. Does not necessarily correspond to a specific document type.

        `DOCUMENT_TYPE_NONE`: Used to indicate that there is no underlying document for the data.

        `DOCUMENT_TYPE_PLAID_GENERATED_PAYSTUB_PDF`: Used to indicate that the PDF for the paystub was generated by Plaid.

        `UNKNOWN`: Document type could not be determined.
      enum:
      - UNKNOWN
      - DOCUMENT_TYPE_PAYSTUB
      - DOCUMENT_TYPE_BANK_STATEMENT
      - DOCUMENT_TYPE_US_TAX_W2
      - DOCUMENT_TYPE_US_MILITARY_ERAS
      - DOCUMENT_TYPE_US_MILITARY_LES
      - DOCUMENT_TYPE_US_MILITARY_CLES
      - DOCUMENT_TYPE_GIG
      - DOCUMENT_TYPE_NONE
      - DOCUMENT_TYPE_US_TAX_1099_MISC
      - DOCUMENT_TYPE_US_TAX_1099_K
      - DOCUMENT_TYPE_PLAID_GENERATED_PAYSTUB_PDF
    Paystub:
      title: Paystub
      type: object
      additionalProperties: true
      description: An object representing data extracted from the end user's paystub.
      properties:
        deductions:
          $ref: '#/components/schemas/Deductions'
        doc_id:
          type: string
          description: An identifier of the document referenced by the document metadata.
        earnings:
          $ref: '#/components/schemas/Earnings'
        employee:
          $ref: '#/components/schemas/Employee'
        employer:
          $ref: '#/components/schemas/PaystubEmployer'
        employment_details:
          $ref: '#/components/schemas/EmploymentDetails'
        net_pay:
          $ref: '#/components/schemas/NetPay'
        pay_period_details:
          $ref: '#/components/schemas/PayPeriodDetails'
        paystub_details:
          $ref: '#/components/schemas/PaystubDetails'
        income_breakdown:
          type: array
          deprecated: true
          items:
            $ref: '#/components/schemas/IncomeBreakdown'
        ytd_earnings:
          $ref: '#/components/schemas/PaystubYTDDetails'
      required:
      - deductions
      - doc_id
      - earnings
      - employee
      - employer
      - net_pay
      - pay_period_details
    Deductions:
      title: Deductions
      type: object
      description: An object with the deduction information found on a paystub.
      additionalProperties: true
      properties:
        subtotals:
          deprecated: true
          type: array
          items:
            $ref: '#/components/schemas/Total'
        breakdown:
          type: array
          items:
            $ref: '#/components/schemas/DeductionsBreakdown'
        totals:
          deprecated: true
          type: array
          items:
            $ref: '#/components/schemas/Total'
        total:
          $ref: '#/components/schemas/DeductionsTotal'
      required:
      - breakdown
      - total
    DeductionsBreakdown:
      title: DeductionsBreakdown
      type: object
      additionalProperties: true
      description: An object representing the deduction line items for the pay period
      properties:
        current_amount:
          type: number
          format: double
          description: Raw amount of the deduction
          nullable: true
        description:
          type: string
          description: Description of the deduction line item
          nullable: true
        iso_currency_code:
          type: string
          description: The ISO-4217 currency code of the line item. Always `null` if `unofficial_currency_code` is non-null.
          nullable: true
        unofficial_currency_code:
          nullable: true
          type: string
          description: |-
            The unofficial currency code associated with the line item. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.

            See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
        ytd_amount:
          type: number
          format: double
          description: The year-to-date amount of the deduction
          nullable: true
    DeductionsTotal:
      title: DeductionsTotal
      type: object
      description: An object representing the total deductions for the pay period
      additionalProperties: true
      properties:
        current_amount:
          type: number
          format: double
          description: Raw amount of the deduction
          nullable: true
        iso_currency_code:
          type: string
          description: The ISO-4217 currency code of the line item. Always `null` if `unofficial_currency_code` is non-null.
          nullable: true
        unofficial_currency_code:
          nullable: true
          type: string
          description: |-
            The unofficial currency code associated with the line item. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.

            See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
        ytd_amount:
          type: number
          format: double
          description: The year-to-date total amount of the deductions
          nullable: true
    Total:
      title: Total
      type: object
      deprecated: true
      description: An object representing both the current pay period and year to date amount for a category.
      additionalProperties: true
      properties:
        canonical_description:
          $ref: '#/components/schemas/TotalCanonicalDescription'
        description:
          type: string
          description: Text of the line item as printed on the paystub.
          nullable: true
        current_pay:
          $ref: '#/components/schemas/Pay'
        ytd_pay:
          $ref: '#/components/schemas/Pay'
    TotalCanonicalDescription:
      type: string
      nullable: true
      description: Commonly used term to describe the line item.
      enum:
      - BONUS
      - COMMISSION
      - OVERTIME
      - PAID TIME OFF
      - REGULAR PAY
      - VACATION
      - EMPLOYEE MEDICARE
      - FICA
      - SOCIAL SECURITY EMPLOYEE TAX
      - MEDICAL
      - VISION
      - DENTAL
      - NET PAY
      - TAXES
      - NOT_FOUND
      - OTHER
      - null
    Pay:
      title: Pay
      type: object
      deprecated: true
      description: An object representing a monetary amount.
      additionalProperties: true
      properties:
        amount:
          type: number
          format: double
          description: A numerical amount of a specific currency.
          nullable: true
        currency:
          type: string
          description: Currency code, e.g. USD
          nullable: true
    Earnings:
      title: Earnings
      type: object
      description: An object representing both a breakdown of earnings on a paystub and the total earnings.
      additionalProperties: true
      properties:
        subtotals:
          deprecated: true
          type: array
          items:
            $ref: '#/components/schemas/EarningsTotal'
        totals:
          deprecated: true
          type: array
          items:
            $ref: '#/components/schemas/EarningsTotal'
        breakdown:
          type: array
          items:
            $ref: '#/components/schemas/EarningsBreakdown'
        total:
          $ref: '#/components/schemas/EarningsTotal'
    EarningsBreakdown:
      title: EarningsBreakdown
      type: object
      additionalProperties: true
      description: An object representing the earnings line items for the pay period.
      properties:
        canonical_description:
          $ref: '#/components/schemas/EarningsBreakdownCanonicalDescription'
        current_amount:
          type: number
          format: double
          description: Raw amount of the earning line item.
          nullable: true
        description:
          type: string
          description: Description of the earning line item.
          nullable: true
        hours:
          type: number
          description: Number of hours applicable for this earning.
          nullable: true
        iso_currency_code:
          type: string
          description: The ISO-4217 currency code of the line item. Always `null` if `unofficial_currency_code` is non-null.
          nullable: true
        rate:
          type: number
          format: double
          description: Hourly rate applicable for this earning.
          nullable: true
        unofficial_currency_code:
          nullable: true
          type: string
          description: |-
            The unofficial currency code associated with the line item. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.

            See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
        ytd_amount:
          type: number
          format: double
          description: The year-to-date amount of the deduction.
          nullable: true
    EarningsBreakdownCanonicalDescription:
      type: string
      description: Commonly used term to describe the earning line item.
      enum:
      - BONUS
      - COMMISSION
      - OVERTIME
      - PAID TIME OFF
      - REGULAR PAY
      - VACATION
      - BASIC ALLOWANCE HOUSING
      - BASIC ALLOWANCE SUBSISTENCE
      - OTHER
      - null
      nullable: true
    EarningsTotal:
      title: EarningsTotal
      type: object
      description: An object representing both the current pay period and year to date amount for an earning category.
      additionalProperties: true
      properties:
        current_amount:
          type: number
          format: double
          description: Total amount of the earnings for this pay period
          nullable: true
        current_pay:
          $ref: '#/components/schemas/Pay'
        ytd_pay:
          $ref: '#/components/schemas/Pay'
        hours:
          type: number
          description: Total number of hours worked for this pay period
          nullable: true
        iso_currency_code:
          type: string
          description: The ISO-4217 currency code of the line item. Always `null` if `unofficial_currency_code` is non-null.
          nullable: true
        unofficial_currency_code:
          nullable: true
          type: string
          description: |-
            The unofficial currency code associated with the security. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.

            See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
        ytd_amount:
          type: number
          format: double
          description: The total year-to-date amount of the earnings
          nullable: true
    EmploymentDetails:
      title: EmploymentDetails
      type: object
      deprecated: true
      description: An object representing employment details found on a paystub.
      additionalProperties: true
      properties:
        annual_salary:
          $ref: '#/components/schemas/Pay'
        hire_date:
          type: string
          format: date
          description: Date on which the employee was hired, in the YYYY-MM-DD format.
          nullable: true
    NetPay:
      title: NetPay
      type: object
      description: An object representing information about the net pay amount on the paystub.
      additionalProperties: true
      properties:
        current_amount:
          type: number
          format: double
          description: Raw amount of the net pay for the pay period
          nullable: true
        description:
          type: string
          description: Description of the net pay
          nullable: true
        iso_currency_code:
          type: string
          description: The ISO-4217 currency code of the net pay. Always `null` if `unofficial_currency_code` is non-null.
          nullable: true
        unofficial_currency_code:
          nullable: true
          type: string
          description: |-
            The unofficial currency code associated with the net pay. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.

            See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
        ytd_amount:
          type: number
          format: double
          description: The year-to-date amount of the net pay
          nullable: true
        total:
          $ref: '#/components/schemas/Total'
    PaystubDetails:
      title: PaystubDetails
      type: object
      deprecated: true
      description: An object representing details that can be found on the paystub.
      additionalProperties: true
      properties:
        pay_period_start_date:
          type: string
          format: date
          description: Beginning date of the pay period on the paystub in the 'YYYY-MM-DD' format.
          nullable: true
        pay_period_end_date:
          type: string
          format: date
          description: Ending date of the pay period on the paystub in the 'YYYY-MM-DD' format.
          nullable: true
        pay_date:
          type: string
          format: date
          description: Pay date on the paystub in the 'YYYY-MM-DD' format.
          nullable: true
        paystub_provider:
          type: string
          description: The name of the payroll provider that generated the paystub, e.g. ADP
          nullable: true
        pay_frequency:
          $ref: '#/components/schemas/PaystubPayFrequency'
    PaystubPayFrequency:
      type: string
      description: 'The frequency at which the employee is paid. Possible values: `MONTHLY`, `BI-WEEKLY`, `WEEKLY`, `SEMI-MONTHLY`.'
      enum:
      - MONTHLY
      - BI-WEEKLY
      - WEEKLY
      - SEMI-MONTHLY
      - null
      nullable: true
    IncomeBreakdown:
      title: IncomeBreakdown
      type: object
      description: An object representing a breakdown of the different income types on the paystub.
      additionalProperties: true
      deprecated: true
      properties:
        type:
          $ref: '#/components/schemas/IncomeBreakdownType'
        rate:
          type: number
          format: double
          description: The hourly rate at which the income is paid.
          nullable: true
        hours:
          type: number
          description: The number of hours logged for this income for this pay period.
          nullable: true
        total:
          type: number
          format: double
          description: The total pay for this pay period.
          nullable: true
      required:
      - type
      - rate
      - hours
      - total
    IncomeBreakdownType:
      type: string
      description: |-
        The type of income. Possible values include:
          `"regular"`: regular income
          `"overtime"`: overtime income
          `"bonus"`: bonus income
      enum:
      - bonus
      - overtime
      - regular
      - null
      nullable: true
    Employee:
      title: Employee
      type: object
      additionalProperties: true
      description: Data about the employee.
      properties:
        address:
          $ref: '#/components/schemas/PaystubAddress'
        name:
          type: string
          description: The name of the employee.
          nullable: true
        marital_status:
          type: string
          description: Marital status of the employee - either `single` or `married`.
          nullable: true
          x-override-enum-values-shown:
          - single
          - married
        taxpayer_id:
          $ref: '#/components/schemas/TaxpayerID'
      required:
      - name
      - address
    TaxpayerID:
      title: TaxpayerID
      type: object
      additionalProperties: true
      description: Taxpayer ID of the individual receiving the paystub.
      properties:
        id_type:
          type: string
          description: Type of ID, e.g. 'SSN'
          nullable: true
        id_mask:
          type: string
          description: ID mask; i.e. last 4 digits of the taxpayer ID
          nullable: true
        last_4_digits:
          deprecated: true
          type: string
          description: Last 4 digits of unique number of ID.
          minLength: 4
          maxLength: 4
          nullable: true
    PaystubEmployer:
      title: Employer
      description: Information about the employer on the paystub
      type: object
      additionalProperties: true
      properties:
        address:
          $ref: '#/components/schemas/PaystubAddress'
        name:
          type: string
          description: The name of the employer on the paystub.
          nullable: true
      required:
      - name
    PaystubAddress:
      title: Address
      description: Address on the paystub
      type: object
      additionalProperties: true
      properties:
        city:
          type: string
          description: The full city name.
          nullable: true
        country:
          type: string
          description: The ISO 3166-1 alpha-2 country code.
          nullable: true
        postal_code:
          type: string
          description: The postal code of the address.
          nullable: true
        region:
          type: string
          description: |-
            The region or state
            Example: `"NC"`
          nullable: true
        street:
          type: string
          description: The full street address.
          nullable: true
        line1:
          deprecated: true
          type: string
          description: Street address line 1.
          nullable: true
        line2:
          deprecated: true
          type: string
          description: Street address line 2.
          nullable: true
        state_code:
          deprecated: true
          type: string
          description: |-
            The region or state
            Example: `"NC"`
          nullable: true
    PayPeriodDetails:
      title: PayPeriodDetails
      type: object
      additionalProperties: true
      description: Details about the pay period.
      properties:
        check_amount:
          type: number
          format: double
          description: The amount of the paycheck.
          nullable: true
        distribution_breakdown:
          type: array
          items:
            $ref: '#/components/schemas/DistributionBreakdown'
        end_date:
          type: string
          format: date
          description: 'The pay period end date, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format: "yyyy-mm-dd".'
          nullable: true
        gross_earnings:
          type: number
          format: double
          description: Total earnings before tax/deductions.
          nullable: true
        pay_date:
          type: string
          format: date
          description: The date on which the paystub was issued, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format ("yyyy-mm-dd").
          nullable: true
        pay_frequency:
          $ref: '#/components/schemas/PayPeriodDetailsPayFrequency'
        pay_day:
          deprecated: true
          type: string
          format: date
          description: The date on which the paystub was issued, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format ("yyyy-mm-dd").
          nullable: true
        start_date:
          type: string
          format: date
          description: 'The pay period start date, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format: "yyyy-mm-dd".'
          nullable: true
    PayPeriodDetailsPayFrequency:
      title: PayPeriodDetailsPayFrequency
      type: string
      description: The frequency at which an individual is paid.
      enum:
      - PAY_FREQUENCY_UNKNOWN
      - PAY_FREQUENCY_WEEKLY
      - PAY_FREQUENCY_BIWEEKLY
      - PAY_FREQUENCY_SEMIMONTHLY
      - PAY_FREQUENCY_MONTHLY
      - null
      nullable: true
    DistributionBreakdown:
      title: DistributionBreakdown
      type: object
      description: Information about the accounts that the payment was distributed to.
      additionalProperties: true
      properties:
        account_name:
          type: string
          description: Name of the account for the given distribution.
          nullable: true
        bank_name:
          type: string
          description: The name of the bank that the payment is being deposited to.
          nullable: true
        current_amount:
          type: number
          format: double
          description: The amount distributed to this account.
          nullable: true
        iso_currency_code:
          type: string
          description: The ISO-4217 currency code of the net pay. Always `null` if `unofficial_currency_code` is non-null.
          nullable: true
        mask:
          type: string
          description: The last 2-4 alphanumeric characters of an account's official account number.
          nullable: true
        type:
          type: string
          description: Type of the account that the paystub was sent to (e.g. 'checking').
          nullable: true
        unofficial_currency_code:
          nullable: true
          type: string
          description: |-
            The unofficial currency code associated with the net pay. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.

            See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
        current_pay:
          $ref: '#/components/schemas/Pay'
    PaystubDeduction:
      title: PaystubDeduction
      description: Deduction on the paystub
      type: object
      additionalProperties: true
      properties:
        type:
          type: string
          description: 'The description of the deduction, as provided on the paystub. For example: `"401(k)"`, `"FICA MED TAX"`.'
          nullable: true
        is_pretax:
          type: boolean
          description: '`true` if the deduction is pre-tax; `false` otherwise.'
          nullable: true
        total:
          type: number
          format: double
          description: The amount of the deduction.
          nullable: true
      required:
      - type
      - is_pretax
      - total
    PaystubYTDDetails:
      title: PaystubYTDDetails
      type: object
      deprecated: true
      additionalProperties: true
      properties:
        gross_earnings:
          type: number
          format: double
          description: Year-to-date gross earnings.
          nullable: true
        net_earnings:
          type: number
          format: double
          description: Year-to-date net (take home) earnings.
          nullable: true
      description: The amount of income earned year to date, as based on paystub data.
    IncomeVerificationDocumentsDownloadRequest:
      title: IncomeVerificationDocumentsDownloadRequest
      type: object
      description: IncomeVerificationDocumentsDownloadRequest defines the request schema for `/income/verification/documents/download`.
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        income_verification_id:
          type: string
          nullable: true
          deprecated: true
          description: The ID of the verification.
        access_token:
          $ref: '#/components/schemas/AccessTokenNullable'
        document_id:
          type: string
          nullable: true
          description: The document ID to download. If passed, a single document will be returned in the resulting zip file, rather than all document
    IncomeVerificationTaxformsGetRequest:
      title: IncomeVerificationTaxformsGetRequest
      type: object
      description: IncomeVerificationTaxformsGetRequest defines the request schema for `/income/verification/taxforms/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        income_verification_id:
          type: string
          description: The ID of the verification.
          nullable: true
          deprecated: true
        access_token:
          $ref: '#/components/schemas/AccessTokenNullable'
    IncomeVerificationTaxformsGetResponse:
      title: IncomeVerificationTaxformsGetResponse
      type: object
      additionalProperties: true
      description: IncomeVerificationTaxformsGetResponse defines the response schema for `/income/verification/taxforms/get`
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
        document_metadata:
          type: array
          items:
            $ref: '#/components/schemas/DocumentMetadata'
        taxforms:
          type: array
          description: A list of forms.
          items:
            $ref: '#/components/schemas/Taxform'
        error:
          $ref: '#/components/schemas/PlaidError'
      required:
      - taxforms
      - document_metadata
    Taxform:
      title: Taxform
      type: object
      description: Data about an official document used to report the user's income to the IRS.
      additionalProperties: true
      properties:
        doc_id:
          type: string
          description: An identifier of the document referenced by the document metadata.
        document_type:
          type: string
          description: The type of tax document. Currently, the only supported value is `w2`.
        w2:
          $ref: '#/components/schemas/W2'
      required:
      - document_type
    W2:
      title: W2
      type: object
      additionalProperties: true
      description: W2 is an object that represents income data taken from a W2 tax document.
      properties:
        employer:
          $ref: '#/components/schemas/PaystubEmployer'
        employee:
          $ref: '#/components/schemas/Employee'
        tax_year:
          type: string
          description: The tax year of the W2 document.
          nullable: true
        employer_id_number:
          type: string
          description: An employee identification number or EIN.
          nullable: true
        wages_tips_other_comp:
          type: string
          description: Wages from tips and other compensation.
          nullable: true
        federal_income_tax_withheld:
          type: string
          description: Federal income tax withheld for the tax year.
          nullable: true
        social_security_wages:
          type: string
          description: Wages from social security.
          nullable: true
        social_security_tax_withheld:
          type: string
          description: Social security tax withheld for the tax year.
          nullable: true
        medicare_wages_and_tips:
          type: string
          description: Wages and tips from medicare.
          nullable: true
        medicare_tax_withheld:
          type: string
          description: Medicare tax withheld for the tax year.
          nullable: true
        social_security_tips:
          type: string
          description: Tips from social security.
          nullable: true
        allocated_tips:
          type: string
          description: Allocated tips.
          nullable: true
        box_9:
          type: string
          description: Contents from box 9 on the W2.
          nullable: true
        dependent_care_benefits:
          type: string
          description: Dependent care benefits.
          nullable: true
        nonqualified_plans:
          type: string
          description: Nonqualified plans.
          nullable: true
        box_12:
          type: array
          items:
            $ref: '#/components/schemas/W2Box12'
        statutory_employee:
          type: string
          description: Statutory employee.
          nullable: true
        retirement_plan:
          type: string
          description: Retirement plan.
          nullable: true
        third_party_sick_pay:
          type: string
          description: Third party sick pay.
          nullable: true
        other:
          type: string
          description: Other.
          nullable: true
        state_and_local_wages:
          type: array
          items:
            $ref: '#/components/schemas/W2StateAndLocalWages'
    W2Box12:
      title: W2Box12
      description: Data on the W2 Box 12
      type: object
      additionalProperties: true
      properties:
        code:
          type: string
          description: W2 Box 12 code.
          nullable: true
        amount:
          type: string
          description: W2 Box 12 amount.
          nullable: true
    W2StateAndLocalWages:
      title: W2StateAndLocalWages
      description: W2 state and local wages
      type: object
      additionalProperties: true
      properties:
        state:
          type: string
          description: State associated with the wage.
          nullable: true
        employer_state_id_number:
          type: string
          description: State identification number of the employer.
          nullable: true
        state_wages_tips:
          type: string
          description: Wages and tips from the specified state.
          nullable: true
        state_income_tax:
          type: string
          description: Income tax from the specified state.
          nullable: true
        local_wages_tips:
          type: string
          description: Wages and tips from the locality.
          nullable: true
        local_income_tax:
          type: string
          description: Income tax from the locality.
          nullable: true
        locality_name:
          type: string
          description: Name of the locality.
          nullable: true
    IncomeVerificationWebhookStatus:
      title: IncomeVerificationWebhookStatus
      description: Status of the income verification webhook
      type: object
      additionalProperties: true
      properties:
        id:
          type: string
      required:
      - id
    EmploymentVerificationGetRequest:
      title: EmploymentVerificationGetRequest
      type: object
      description: EmploymentVerificationGetRequest defines the request schema for `/employment/verification/get`.
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        access_token:
          $ref: '#/components/schemas/AccessToken'
      required:
      - access_token
    EmploymentVerificationGetResponse:
      title: EmploymentVerificationGetResponse
      type: object
      additionalProperties: true
      description: EmploymentVerificationGetResponse defines the response schema for `/employment/verification/get`.
      properties:
        employments:
          type: array
          description: A list of employment verification summaries.
          items:
            $ref: '#/components/schemas/EmploymentVerification'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - employments
      - request_id
    EmploymentVerification:
      title: EmploymentVerification
      type: object
      additionalProperties: true
      description: An object containing proof of employment data for an individual
      properties:
        status:
          $ref: '#/components/schemas/EmploymentVerificationStatus'
        start_date:
          format: date
          type: string
          description: Start of employment in ISO 8601 format (YYYY-MM-DD).
          nullable: true
        end_date:
          format: date
          type: string
          description: End of employment, if applicable. Provided in ISO 8601 format (YYY-MM-DD).
          nullable: true
        employer:
          $ref: '#/components/schemas/EmployerVerification'
        title:
          type: string
          description: Current title of employee.
          nullable: true
        platform_ids:
          $ref: '#/components/schemas/PlatformIds'
    EmploymentVerificationStatus:
      type: string
      description: Current employment status.
      nullable: true
      enum:
      - EMPLOYMENT_STATUS_ACTIVE
      - EMPLOYMENT_STATUS_INACTIVE
      - null
    EmployerVerification:
      title: EmployerVerification
      type: object
      additionalProperties: true
      description: An object containing employer data.
      properties:
        name:
          type: string
          description: Name of employer.
          nullable: true
    PlatformIds:
      title: PlatformIds
      type: object
      additionalProperties: true
      description: An object containing a set of ids related to an employee
      properties:
        employee_id:
          type: string
          description: The ID of an employee as given by their employer
          nullable: true
        payroll_id:
          type: string
          description: The ID of an employee as given by their payroll
          nullable: true
        position_id:
          type: string
          description: The ID of the position of the employee
          nullable: true
    HealthIncident:
      title: HealthIncident
      description: A status health incident
      type: object
      additionalProperties: true
      properties:
        start_date:
          type: string
          format: date-time
          description: The start date of the incident, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format, e.g. `"2020-10-30T15:26:48Z"`.
        end_date:
          type: string
          nullable: true
          format: date-time
          description: The end date of the incident, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format, e.g. `"2020-10-30T15:26:48Z"`.
        title:
          type: string
          description: The title of the incident
        incident_updates:
          type: array
          description: Updates on the health incident.
          items:
            $ref: '#/components/schemas/IncidentUpdate'
      required:
      - start_date
      - title
      - incident_updates
    IncidentUpdate:
      title: IncidentUpdate
      description: An update on the health incident
      type: object
      additionalProperties: true
      properties:
        description:
          type: string
          description: The content of the update.
        status:
          type: string
          description: The status of the incident.
          enum:
          - INVESTIGATING
          - IDENTIFIED
          - SCHEDULED
          - RESOLVED
          - UNKNOWN
        updated_date:
          type: string
          format: date-time
          description: The date when the update was published, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format, e.g. `"2020-10-30T15:26:48Z"`.
    DepositSwitchAltCreateRequest:
      title: DepositSwitchAltCreateRequest
      type: object
      description: DepositSwitchAltCreateRequest defines the request schema for `/deposit_switch/alt/create`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        target_account:
          $ref: '#/components/schemas/DepositSwitchTargetAccount'
        target_user:
          $ref: '#/components/schemas/DepositSwitchTargetUser'
        options:
          $ref: '#/components/schemas/DepositSwitchCreateRequestOptions'
        country_code:
          type: string
          title: CountryCode
          enum:
          - US
          - CA
          description: ISO-3166-1 alpha-2 country code standard.
          nullable: true
      required:
      - target_account
      - target_user
    DepositSwitchAltCreateResponse:
      title: DepositSwitchAltCreateResponse
      type: object
      additionalProperties: true
      properties:
        deposit_switch_id:
          type: string
          description: ID of the deposit switch. This ID is persisted throughout the lifetime of the deposit switch.
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - deposit_switch_id
      - request_id
      description: DepositSwitchAltCreateResponse defines the response schema for `/deposit_switch/alt/create`
    DepositSwitchTargetAccount:
      title: DepositSwitchTargetAccount
      description: The deposit switch destination account
      type: object
      additionalProperties: true
      properties:
        account_number:
          type: string
          description: Account number for deposit switch destination
        routing_number:
          type: string
          description: Routing number for deposit switch destination
        account_name:
          type: string
          description: The name of the deposit switch destination account, as it will be displayed to the end user in the Deposit Switch interface. It is not required to match the name used in online banking.
        account_subtype:
          type: string
          description: The account subtype of the account, either `checking` or `savings`.
          enum:
          - checking
          - savings
      required:
      - account_number
      - routing_number
      - account_name
      - account_subtype
    DepositSwitchTargetUser:
      title: DepositSwitchTargetUser
      description: The deposit switch target user
      type: object
      additionalProperties: true
      properties:
        given_name:
          type: string
          description: The given name (first name) of the user.
        family_name:
          type: string
          description: The family name (last name) of the user.
        phone:
          type: string
          description: The phone number of the user. The endpoint can accept a variety of phone number formats, including E.164.
        email:
          type: string
          description: The email address of the user.
        address:
          $ref: '#/components/schemas/DepositSwitchAddressData'
        tax_payer_id:
          type: string
          description: The taxpayer ID of the user, generally their SSN, EIN, or TIN.
      required:
      - given_name
      - family_name
      - phone
      - email
    DepositSwitchAddressData:
      title: DepositSwitchAddressData
      type: object
      additionalProperties: true
      description: The user's address.
      properties:
        city:
          type: string
          description: The full city name
        region:
          type: string
          description: |-
            The region or state
            Example: `"NC"`
        street:
          type: string
          description: |-
            The full street address
            Example: `"564 Main Street, APT 15"`
        postal_code:
          type: string
          description: The postal code
        country:
          type: string
          description: The ISO 3166-1 alpha-2 country code
      required:
      - street
      - city
      - region
      - postal_code
      - country
    CreditBankEmploymentGetRequest:
      title: CreditBankEmploymentGetRequest
      type: object
      description: CreditBankEmploymentGetRequest defines the request schema for `/beta/credit/v1/bank_employment/get`.
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        user_token:
          $ref: '#/components/schemas/UserToken'
      required:
      - user_token
    CreditBankEmploymentGetResponse:
      title: CreditBankEmploymentGetResponse
      additionalProperties: true
      type: object
      description: CreditBankEmploymentGetResponse defines the response schema for `/beta/credit/v1/bank_employment/get`.
      properties:
        bank_employment_reports:
          type: array
          description: Bank Employment data. Each entry in the array will be a distinct bank employment report.
          items:
            $ref: '#/components/schemas/CreditBankEmploymentReport'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - request_id
      - bank_employment_reports
    CreditBankEmploymentReport:
      type: object
      description: The report of the Bank Employment data for an end user.
      properties:
        bank_employment_report_id:
          type: string
          description: The unique identifier associated with the Bank Employment Report.
        generated_time:
          type: string
          description: The time when the Bank Employment Report was generated, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (e.g. "2018-04-12T03:32:11Z").
          format: date-time
        days_requested:
          type: integer
          description: The number of days requested by the customer for the Bank Employment Report.
        items:
          type: array
          description: The list of Items in the report along with the associated metadata about the Item.
          items:
            $ref: '#/components/schemas/CreditBankEmploymentItem'
        warnings:
          type: array
          description: If data from the Bank Employment report was unable to be retrieved, the warnings will contain information about the error that caused the data to be incomplete.
          items:
            $ref: '#/components/schemas/CreditBankEmploymentWarning'
      required:
      - bank_employment_report_id
      - generated_time
      - days_requested
      - items
      - warnings
    CreditBankEmploymentItem:
      type: object
      description: The details and metadata for an end user's Item.
      properties:
        item_id:
          type: string
          description: The unique identifier for the Item.
        last_updated_time:
          type: string
          description: The time when this Item's data was last retrieved from the financial institution, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (e.g. "2018-04-12T03:32:11Z").
          format: date-time
        institution_id:
          type: string
          description: The unique identifier of the institution associated with the Item.
        institution_name:
          type: string
          description: The name of the institution associated with the Item.
        bank_employments:
          type: array
          description: The bank employment information for this Item. Each entry in the array is a different employer found.
          items:
            $ref: '#/components/schemas/CreditBankEmployment'
        bank_employment_accounts:
          type: array
          description: The Item's accounts that have Bank Employment data.
          items:
            $ref: '#/components/schemas/CreditBankIncomeAccount'
      required:
      - item_id
      - last_updated_time
      - institution_id
      - institution_name
      - bank_employments
      - bank_employment_accounts
    CreditBankEmployment:
      type: object
      description: Detailed information for the bank employment.
      properties:
        bank_employment_id:
          type: string
          description: A unique identifier for the bank employment.
        account_id:
          type: string
          description: Plaid's unique identifier for the account.
        employer:
          $ref: '#/components/schemas/CreditBankEmployer'
        latest_deposit_date:
          type: string
          description: The date of the most recent deposit from this employer.
          format: date
        earliest_deposit_date:
          type: string
          description: The date of the earliest deposit from this employer from within the period of the days requested.
          format: date
      required:
      - bank_employment_id
      - account_id
      - employer
      - latest_deposit_date
      - earliest_deposit_date
    CreditBankEmployer:
      type: object
      description: Object containing employer data.
      properties:
        name:
          type: string
          description: Name of the employer.
      required:
      - name
    CreditBankEmploymentWarning:
      type: object
      description: The warning associated with the data that was unavailable for the Bank Employment Report.
      properties:
        warning_type:
          $ref: '#/components/schemas/CreditBankEmploymentWarningType'
        warning_code:
          $ref: '#/components/schemas/CreditBankIncomeWarningCode'
        cause:
          $ref: '#/components/schemas/CreditBankIncomeCause'
      required:
      - warning_type
      - warning_code
      - cause
    CreditBankEmploymentWarningType:
      type: string
      description: The warning type which will always be `BANK_EMPLOYMENT_WARNING`.
      enum:
      - BANK_EMPLOYMENT_WARNING
    CreditBankIncomeGetRequest:
      title: CreditBankIncomeGetRequest
      type: object
      description: CreditBankIncomeGetRequest defines the request schema for `/credit/bank_income/get`.
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        user_token:
          $ref: '#/components/schemas/UserToken'
        options:
          $ref: '#/components/schemas/CreditBankIncomeGetRequestOptions'
    CreditBankIncomeGetRequestOptions:
      description: An optional object for `/credit/bank_income/get` request options.
      type: object
      properties:
        count:
          type: integer
          default: 1
          description: How many Bank Income Reports should be fetched. Multiple reports may be available if the report has been re-created or refreshed. If more than one report is available, the most recent reports will be returned first.
    CreditBankIncomeGetResponse:
      title: CreditBankIncomeGetResponse
      additionalProperties: true
      type: object
      description: CreditBankIncomeGetResponse defines the response schema for `/credit/bank_income/get`
      properties:
        bank_income:
          type: array
          items:
            $ref: '#/components/schemas/CreditBankIncome'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - request_id
    CreditBankIncomePDFGetRequest:
      title: CreditBankIncomePDFGetRequest
      type: object
      description: CreditBankIncomePDFGetRequest defines the request schema for `/credit/bank_income/pdf/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        user_token:
          $ref: '#/components/schemas/UserToken'
      required:
      - user_token
    CreditBankIncomePDFGetResponse:
      title: CreditBankIncomePDFGetResponse
      format: binary
      type: string
      description: CreditBankIncomePDFGetResponse defines the response schema for `/credit/bank_income/pdf/get`
    CreditBankIncome:
      type: object
      description: The report of the Bank Income data for an end user.
      properties:
        bank_income_id:
          type: string
          description: The unique identifier associated with the Bank Income Report.
        generated_time:
          type: string
          description: The time when the Bank Income Report was generated.
          format: date-time
        days_requested:
          type: integer
          description: The number of days requested by the customer for the Bank Income Report.
        items:
          type: array
          description: The list of Items in the report along with the associated metadata about the Item.
          items:
            $ref: '#/components/schemas/CreditBankIncomeItem'
        bank_income_summary:
          $ref: '#/components/schemas/CreditBankIncomeSummary'
        warnings:
          type: array
          description: If data from the Bank Income report was unable to be retrieved, the warnings will contain information about the error that caused the data to be incomplete.
          items:
            $ref: '#/components/schemas/CreditBankIncomeWarning'
    CreditBankIncomeItem:
      type: object
      description: The details and metadata for an end user's Item.
      properties:
        bank_income_accounts:
          type: array
          description: The Item's accounts that have Bank Income data.
          items:
            $ref: '#/components/schemas/CreditBankIncomeAccount'
        bank_income_sources:
          type: array
          description: The income sources for this Item. Each entry in the array is a single income source.
          items:
            $ref: '#/components/schemas/CreditBankIncomeSource'
        last_updated_time:
          type: string
          description: The time when this Item's data was last retrieved from the financial institution.
          format: date-time
        institution_id:
          type: string
          description: The unique identifier of the institution associated with the Item.
        institution_name:
          type: string
          description: The name of the institution associated with the Item.
        item_id:
          type: string
          description: The unique identifier for the Item.
    CreditBankIncomeAccount:
      type: object
      description: The Item's bank accounts that have the selected data.
      properties:
        account_id:
          type: string
          description: Plaid's unique identifier for the account.
        mask:
          type: string
          description: |-
            The last 2-4 alphanumeric characters of an account's official account number.
            Note that the mask may be non-unique between an Item's accounts, and it may also not match the mask that the bank displays to the user.
          nullable: true
        name:
          type: string
          description: The name of the bank account.
        official_name:
          type: string
          description: The official name of the bank account.
          nullable: true
        subtype:
          $ref: '#/components/schemas/DepositoryAccountSubtype'
        type:
          $ref: '#/components/schemas/CreditBankIncomeAccountType'
        owners:
          type: array
          description: Data returned by the financial institution about the account owner or owners. Identity information is optional, so field may return an empty array.
          items:
            $ref: '#/components/schemas/Owner'
      required:
      - account_id
      - mask
      - name
      - official_name
      - subtype
      - type
      - owners
    CreditBankIncomeAccountType:
      type: string
      description: The account type. This will always be `depository`.
      enum:
      - depository
    CreditBankIncomeSource:
      type: object
      description: Detailed information for the income source.
      properties:
        income_source_id:
          type: string
          description: A unique identifier for an income source.
        income_description:
          type: string
          description: The most common name or original description for the underlying income transactions.
        income_category:
          $ref: '#/components/schemas/CreditBankIncomeCategory'
        account_id:
          type: string
          description: Plaid's unique identifier for the account.
        start_date:
          type: string
          format: date
          description: |-
            Minimum of all dates within the specific income sources in the user's bank account for days requested by the client.
            The date will be returned in an ISO 8601 format (YYYY-MM-DD).
        end_date:
          type: string
          format: date
          description: |-
            Maximum of all dates within the specific income sources in the user’s bank account for days requested by the client.
            The date will be returned in an ISO 8601 format (YYYY-MM-DD).
        pay_frequency:
          $ref: '#/components/schemas/CreditBankIncomePayFrequency'
        total_amount:
          type: number
          description: Total amount of earnings in the user’s bank account for the specific income source for days requested by the client.
        transaction_count:
          type: integer
          description: Number of transactions for the income source within the start and end date.
        historical_summary:
          type: array
          items:
            $ref: '#/components/schemas/CreditBankIncomeHistoricalSummary'
    CreditBankIncomeCategory:
      type: string
      description: The income category. Note that the `CASH` value has been deprecated and is used only for existing legacy implementations. It has been replaced by the new categories `CASH_DEPOSIT` (representing cash or check deposits) and `TRANSFER_FROM_APPLICATION` (representing cash transfers originating from apps, such as Zelle or Venmo).
      enum:
      - SALARY
      - UNEMPLOYMENT
      - CASH
      - GIG_ECONOMY
      - RENTAL
      - CHILD_SUPPORT
      - MILITARY
      - RETIREMENT
      - LONG_TERM_DISABILITY
      - BANK_INTEREST
      - CASH_DEPOSIT
      - TRANSFER_FROM_APPLICATION
      - TAX_REFUND
      - BENEFIT_OTHER
      - OTHER
    CreditBankIncomePayFrequency:
      type: string
      description: The income pay frequency.
      enum:
      - WEEKLY
      - BIWEEKLY
      - SEMI_MONTHLY
      - MONTHLY
      - DAILY
      - UNKNOWN
    CreditIsoCurrencyCode:
      type: string
      description: The ISO 4217 currency code of the amount or balance.
      nullable: true
    CreditUnofficialCurrencyCode:
      type: string
      description: |-
        The unofficial currency code associated with the amount or balance. Always `null` if `iso_currency_code` is non-null.
        Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.
      nullable: true
    CreditAmountWithCurrency:
      type: object
      description: This contains an amount, denominated in the currency specified by either `iso_currency_code` or `unofficial_currency_code`
      additionalProperties: true
      properties:
        amount:
          type: number
          description: Value of amount with up to 2 decimal places.
        iso_currency_code:
          $ref: '#/components/schemas/CreditIsoCurrencyCode'
        unofficial_currency_code:
          $ref: '#/components/schemas/CreditUnofficialCurrencyCode'
    CreditBankIncomeSummary:
      type: object
      description: Summary for bank income across all income sources and items (max history of 730 days).
      additionalProperties: true
      properties:
        total_amount:
          type: number
          description: |-
            Total amount of earnings across all the income sources in the end user's Items for the days requested by the client.
            This may return an incorrect value if the summary includes income sources in multiple currencies.
            Please use [`total_amounts`](https://plaid.com/docs/api/products/income/#credit-bank_income-get-response-bank-income-bank-income-summary-total-amounts) instead.
          deprecated: true
        iso_currency_code:
          type: string
          description: |-
            The ISO 4217 currency code of the amount or balance.
            Please use [`total_amounts`](https://plaid.com/docs/api/products/income/#credit-bank_income-get-response-bank-income-bank-income-summary-total-amounts) instead.
          nullable: true
          deprecated: true
        unofficial_currency_code:
          type: string
          description: |-
            The unofficial currency code associated with the amount or balance. Always `null` if `iso_currency_code` is non-null.
            Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.
            Please use [`total_amounts`](https://plaid.com/docs/api/products/income/#credit-bank_income-get-response-bank-income-bank-income-summary-total-amounts) instead.
          nullable: true
          deprecated: true
        total_amounts:
          type: array
          description: |-
            Total amount of earnings across all the income sources in the end user's Items for the days requested by the client.
            This can contain multiple amounts, with each amount denominated in one unique currency.
          items:
            $ref: '#/components/schemas/CreditAmountWithCurrency'
        start_date:
          type: string
          format: date
          description: |-
            The earliest date within the days requested in which all income sources identified by Plaid appear in a user's account.
            The date will be returned in an ISO 8601 format (YYYY-MM-DD).
        end_date:
          type: string
          format: date
          description: |-
            The latest date in which all income sources identified by Plaid appear in the user's account.
            The date will be returned in an ISO 8601 format (YYYY-MM-DD).
        income_sources_count:
          type: integer
          description: Number of income sources per end user.
        income_categories_count:
          type: integer
          description: Number of income categories per end user.
        income_transactions_count:
          type: integer
          description: Number of income transactions per end user.
        historical_summary:
          type: array
          items:
            $ref: '#/components/schemas/CreditBankIncomeHistoricalSummary'
    CreditBankIncomeHistoricalSummary:
      type: object
      description: The end user's monthly summary for the income source(s).
      additionalProperties: true
      properties:
        total_amount:
          type: number
          description: |-
            Total amount of earnings for the income source(s) of the user for the month in the summary.
            This may return an incorrect value if the summary includes income sources in multiple currencies.
            Please use [`total_amounts`](https://plaid.com/docs/api/products/income/#credit-bank_income-get-response-bank-income-items-bank-income-sources-historical-summary-total-amounts) instead.
          deprecated: true
        iso_currency_code:
          type: string
          description: |-
            The ISO 4217 currency code of the amount or balance.
            Please use [`total_amounts`](https://plaid.com/docs/api/products/income/#credit-bank_income-get-response-bank-income-items-bank-income-sources-historical-summary-total-amounts) instead.
          nullable: true
          deprecated: true
        unofficial_currency_code:
          type: string
          description: |-
            The unofficial currency code associated with the amount or balance. Always `null` if `iso_currency_code` is non-null.
            Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.
            Please use [`total_amounts`](https://plaid.com/docs/api/products/income/#credit-bank_income-get-response-bank-income-items-bank-income-sources-historical-summary-total-amounts) instead.
          nullable: true
          deprecated: true
        total_amounts:
          type: array
          description: |-
            Total amount of earnings for the income source(s) of the user for the month in the summary.
            This can contain multiple amounts, with each amount denominated in one unique currency.
          items:
            $ref: '#/components/schemas/CreditAmountWithCurrency'
        start_date:
          type: string
          format: date
          description: |-
            The start date of the period covered in this monthly summary.
            This date will be the first day of the month, unless the month being covered is a partial month because it is the first month included in the summary and the date range being requested does not begin with the first day of the month.
            The date will be returned in an ISO 8601 format (YYYY-MM-DD).
        end_date:
          type: string
          format: date
          description: |-
            The end date of the period included in this monthly summary.
            This date will be the last day of the month, unless the month being covered is a partial month because it is the last month included in the summary and the date range being requested does not end with the last day of the month.
            The date will be returned in an ISO 8601 format (YYYY-MM-DD).
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/CreditBankIncomeTransaction'
    CreditBankIncomeTransaction:
      type: object
      description: The transactions data for the end user's income source(s).
      additionalProperties: true
      properties:
        amount:
          type: number
          description: |-
            The settled value of the transaction, denominated in the transactions's currency as stated in `iso_currency_code` or `unofficial_currency_code`.
            Positive values when money moves out of the account; negative values when money moves in.
            For example, credit card purchases are positive; credit card payment, direct deposits, and refunds are negative.
        date:
          type: string
          format: date
          description: |-
            For pending transactions, the date that the transaction occurred; for posted transactions, the date that the transaction posted.
            Both dates are returned in an ISO 8601 format (YYYY-MM-DD).
        name:
          type: string
          description: The merchant name or transaction description.
        original_description:
          type: string
          description: The string returned by the financial institution to describe the transaction.
          nullable: true
        pending:
          type: boolean
          description: |-
            When true, identifies the transaction as pending or unsettled.
            Pending transaction details (name, type, amount, category ID) may change before they are settled.
        transaction_id:
          type: string
          description: The unique ID of the transaction. Like all Plaid identifiers, the `transaction_id` is case sensitive.
        check_number:
          type: string
          description: The check number of the transaction. This field is only populated for check transactions.
          nullable: true
        iso_currency_code:
          $ref: '#/components/schemas/CreditIsoCurrencyCode'
        unofficial_currency_code:
          $ref: '#/components/schemas/CreditUnofficialCurrencyCode'
    CreditBankIncomeRefreshRequest:
      title: CreditBankIncomeRefreshRequest
      type: object
      description: CreditBankIncomeRefreshRequest defines the request schema for `/credit/bank_income/refresh`.
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        user_token:
          $ref: '#/components/schemas/UserToken'
        options:
          $ref: '#/components/schemas/CreditBankIncomeRefreshRequestOptions'
      required:
      - user_token
    CreditBankIncomeRefreshRequestOptions:
      description: An optional object for `/credit/bank_income/refresh` request options.
      type: object
      properties:
        days_requested:
          type: integer
          description: How many days of data to include in the refresh. If not specified, this will default to the days requested in the most recently generated bank income report for the user.
    CreditBankIncomeRefreshResponse:
      title: CreditBankIncomeRefreshResponse
      type: object
      additionalProperties: true
      description: CreditBankIncomeRefreshResponse defines the response schema for `/credit/bank_income/refresh`.
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - request_id
    CreditBankIncomeWebhookUpdateRequest:
      title: CreditBankIncomeWebhookUpdateRequest
      type: object
      description: CreditBankIncomeWebhookUpdateRequest defines the request schema for `/credit/bank_income/webhook/update`.
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        user_token:
          $ref: '#/components/schemas/UserToken'
        enable_webhooks:
          description: Whether the user should be enabled for proactive webhook notifications when their income changes
          type: boolean
      required:
      - user_token
      - enable_webhooks
    CreditBankIncomeWebhookUpdateResponse:
      title: CreditBankIncomeWebhookUpdateResponse
      type: object
      additionalProperties: true
      description: CreditBankIncomeWebhookUpdateResponse defines the response schema for `/credit/bank_income/webhook/update`.
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - request_id
    CreditBankStatementsUploadsGetRequest:
      title: CreditBankStatementsUploadsGetRequest
      type: object
      description: CreditBankStatementsUploadsGetRequest defines the request schema for `/credit/bank_statements/uploads/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        user_token:
          $ref: '#/components/schemas/UserToken'
      required:
      - user_token
    CreditPayrollIncomeParsingConfigUpdateRequest:
      title: CreditPayrollIncomeParsingConfigUpdateRequest
      type: object
      additionalProperties: true
      description: CreditPayrollIncomeParsingConfigUpdateRequest defines the request schema for `/credit/payroll_income/documents/update`.
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        user_token:
          $ref: '#/components/schemas/UserToken'
        item_id:
          $ref: '#/components/schemas/ItemId'
        parsing_config:
          type: array
          description: The types of analysis to enable for the document income verification session
          items:
            $ref: '#/components/schemas/IncomeVerificationDocParsingConfig'
      required:
      - user_token
      - parsing_config
    CreditPayrollIncomeParsingConfigUpdateResponse:
      title: CreditPayrollIncomeParsingConfigUpdateResponse
      type: object
      additionalProperties: true
      description: CreditPayrollIncomeParsingConfigUpdateResponse defines the response schema for `/credit/payroll_income/documents/update`.
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - request_id
    CreditBankStatementsUploadsGetResponse:
      title: CreditBankStatementsUploadsGetResponse
      type: object
      additionalProperties: true
      description: CreditBankStatementsUploadsGetResponse defines the response schema for `/credit/bank_statements/uploads/get`
      properties:
        items:
          description: Array of bank statement upload items.
          type: array
          items:
            $ref: '#/components/schemas/CreditBankStatementUploadItem'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - items
      - request_id
    CreditPayrollIncomeRiskSignalsGetRequest:
      title: CreditPayrollIncomeRiskSignalsGetRequest
      type: object
      description: CreditPayrollIncomeRiskSignalsGetRequest defines the request schema for `/credit/payroll_income/risk_signals/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        user_token:
          $ref: '#/components/schemas/UserToken'
    CreditPayrollIncomeRiskSignalsGetResponse:
      title: CreditPayrollIncomeRiskSignalsGetReponse
      type: object
      additionalProperties: true
      description: CreditPayrollIncomeRiskSignalsGetRequest defines the response schema for `/credit/payroll_income/risk_signals/get`
      properties:
        items:
          description: Array of payroll items.
          type: array
          items:
            $ref: '#/components/schemas/PayrollRiskSignalsItem'
        error:
          $ref: '#/components/schemas/PlaidError'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - items
      - request_id
    PayrollRiskSignalsItem:
      title: PayrollRiskSignalsItem
      type: object
      additionalProperties: true
      description: Object containing fraud risk data pertaining to the Item linked as part of the verification.
      properties:
        item_id:
          $ref: '#/components/schemas/ItemId'
        verification_risk_signals:
          description: Array of payroll income document authenticity data retrieved for each of the user's accounts.
          type: array
          items:
            $ref: '#/components/schemas/DocumentRiskSignalsObject'
      required:
      - item_id
      - verification_risk_signals
    DocumentRiskSignalsObject:
      title: DocumentRiskSignalsObject
      type: object
      additionalProperties: true
      description: Object containing fraud risk data for a set of income documents.
      properties:
        account_id:
          type: string
          description: ID of the payroll provider account.
          nullable: true
        single_document_risk_signals:
          type: array
          description: Array of document metadata and associated risk signals per document
          items:
            $ref: '#/components/schemas/SingleDocumentRiskSignal'
        multi_document_risk_signals:
          type: array
          description: Array of risk signals computed from a set of uploaded documents and the associated documents' metadata
          items:
            $ref: '#/components/schemas/MultiDocumentRiskSignal'
      required:
      - account_id
      - single_document_risk_signals
      - multi_document_risk_signals
    RiskSignalDocumentReference:
      title: RiskSignalDocumentReference
      type: object
      additionalProperties: true
      description: Object containing metadata for the document
      properties:
        document_id:
          type: string
          description: An identifier of the document referenced by the document metadata.
          nullable: true
        document_name:
          type: string
          description: The name of the document
        status:
          $ref: '#/components/schemas/RiskSignalDocumentStatus'
    RiskSignalDocumentStatus:
      title: RiskSignalDocumentStatus
      type: string
      description: Status of a document for risk signal analysis
      enum:
      - PROCESSING
      - PROCESSING_COMPLETE
      - PROCESSING_ERROR
      - PASSWORD_PROTECTED
      - VIRUS_DETECTED
    DocumentRiskSummary:
      title: DocumentRiskSummary
      type: object
      additionalProperties: true
      description: A summary across all risk signals associated with a document
      properties:
        risk_score:
          type: number
          description: A number between 0 and 100, inclusive, where a score closer to 0 indicates a document is likely to be trustworthy and a score closer to 100 indicates a document is likely to be fraudulent
          nullable: true
      required:
      - risk_score
    SingleDocumentRiskSignal:
      title: SingleDocumentRiskSignal
      type: object
      additionalProperties: true
      description: Object containing all risk signals and relevant metadata for a single document
      properties:
        document_reference:
          $ref: '#/components/schemas/RiskSignalDocumentReference'
        risk_signals:
          type: array
          description: Array of attributes that indicate whether or not there is fraud risk with a document
          items:
            $ref: '#/components/schemas/DocumentRiskSignal'
        risk_summary:
          $ref: '#/components/schemas/DocumentRiskSummary'
      required:
      - document_reference
      - risk_signals
      - risk_summary
    MultiDocumentRiskSignal:
      title: MultiDocumentRiskSignal
      type: object
      additionalProperties: true
      description: Object containing risk signals and relevant metadata for a set of uploaded documents
      properties:
        document_references:
          type: array
          description: Array of objects containing attributes that could indicate if a document is fraudulent
          items:
            $ref: '#/components/schemas/RiskSignalDocumentReference'
        risk_signals:
          type: array
          description: Array of attributes that indicate whether or not there is fraud risk with a set of documents
          items:
            $ref: '#/components/schemas/DocumentRiskSignal'
      required:
      - document_references
      - risk_signals
    CreditAuditCopyTokenCreateRequest:
      type: object
      description: CreditAuditCopyTokenCreateRequest defines the request schema for `/credit/audit_copy_token/create`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        report_tokens:
          type: array
          description: List of report tokens; can include at most one VOA/standard Asset Report tokens and one VOE Asset Report Token.
          items:
            type: string
            description: The report token. It can be an VOA Asset Report token or a VOE Asset Report token.
            nullable: false
      required:
      - report_tokens
    CreditAuditCopyTokenCreateResponse:
      type: object
      additionalProperties: true
      description: CreditAuditCopyTokenCreateResponse defines the response schema for `/credit/audit_copy_token/get`
      properties:
        audit_copy_token:
          type: string
          description: A token that can be shared with a third party auditor, which allows them to fetch the Asset Reports attached to the token. This token should be stored securely.
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - audit_copy_token
      - request_id
    CreditAuditCopyTokenRemoveRequest:
      type: object
      description: CreditAuditCopyTokenRemoveRequest defines the request schema for `/credit/audit_copy_token/remove`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        audit_copy_token:
          type: string
          description: The `audit_copy_token` granting access to the Audit Copy you would like to revoke.
      required:
      - audit_copy_token
    CreditAuditCopyTokenRemoveResponse:
      type: object
      additionalProperties: true
      description: CreditAuditCopyTokenRemoveResponse defines the response schema for `/credit/audit_copy_token/remove`
      properties:
        removed:
          type: boolean
          description: '`true` if the Audit Copy was successfully removed.'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - removed
      - request_id
    CreditPayrollIncomeGetRequest:
      title: CreditPayrollIncomeGetRequest
      type: object
      description: CreditPayrollIncomeGetRequest defines the request schema for `/credit/payroll_income/get`.
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        user_token:
          $ref: '#/components/schemas/UserToken'
    CreditPayrollIncomeGetResponse:
      title: CreditPayrollIncomeGetResponse
      type: object
      additionalProperties: true
      description: Defines the response body for `/credit/payroll_income/get`.
      properties:
        items:
          description: Array of payroll items.
          type: array
          items:
            $ref: '#/components/schemas/PayrollItem'
        error:
          $ref: '#/components/schemas/PlaidError'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - items
      - request_id
    CreditDocumentMetadata:
      title: CreditDocumentMetadata
      type: object
      additionalProperties: true
      description: Object representing metadata pertaining to the document.
      properties:
        name:
          type: string
          description: The name of the document.
        document_type:
          $ref: '#/components/schemas/CreditDocumentType'
        download_url:
          type: string
          description: |-
            Signed URL to retrieve the underlying file. For Payroll Income, the file type will always be PDF, and the file may not be available, in which case the field will be `null`. If you would like Plaid to generate a PDF if the original is not available, contact your Account Manager. For Document Income, this field will not be `null`, and the file type will be the original file type uploaded by the user. For more details on available file types, see the [Document Income](https://www.plaid.com/docs/income/payroll-income) documentation.

            This download URL can only be used once and expires after two minutes. To generate a new download URL, call `/credit/payroll_income/get` again.
          nullable: true
        status:
          type: string
          description: |-
            The processing status of the document.

            `PROCESSING_COMPLETE`: The document was successfully processed.

            `DOCUMENT_ERROR`: The document could not be processed. Possible causes include: The document was an unacceptable document type such as an offer letter or bank statement, the document image was cropped or blurry, or the document was corrupted.

            `UNKNOWN` or `null`: An internal error occurred. If this happens repeatedly, contact support or your Plaid account manager.
          nullable: true
          x-override-enum-values-shown:
          - UNKNOWN
          - PROCESSING_COMPLETE
          - DOCUMENT_ERROR
          - null
        page_count:
          type: integer
          description: The number of pages of the uploaded document (if available).
          nullable: true
      required:
      - name
      - document_type
      - download_url
      - status
    IdentityDocumentMetadata:
      title: IdentityDocumentMetadata
      type: object
      additionalProperties: true
      description: In closed beta. Object representing metadata pertaining to the document.
      properties:
        name:
          type: string
          description: The name of the document.
        is_account_number_match:
          type: boolean
          description: Boolean field indicating if the uploaded document's account number matches the account number we have on file
        status:
          type: string
          description: |-
            The processing status of the document.

            `PROCESSING_COMPLETE`: The document was successfully processed.

            `DOCUMENT_ERROR`: The document could not be processed. Possible causes include: The document was an unacceptable document type such as an offer letter or bank statement, the document image was cropped or blurry, or the document was corrupted.

            `UNKNOWN` or `null`: An internal error occurred. If this happens repeatedly, contact support or your Plaid account manager.
        last_updated:
          type: string
          format: date-time
        uploaded_at:
          type: string
          format: date-time
        page_count:
          type: integer
      x-hidden-from-docs: true
    CreditDocumentType:
      title: CreditDocumentType
      type: string
      nullable: true
      description: |-
        The type of document.

        `PAYSTUB`: A paystub.

        `BANK_STATEMENT`: A bank statement.

        `US_TAX_W2`: A W-2 wage and tax statement provided by a US employer reflecting wages earned by the employee.

        `US_MILITARY_ERAS`: An electronic Retirement Account Statement (eRAS) issued by the US military.

        `US_MILITARY_LES`: A Leave and Earnings Statement (LES) issued by the US military.

        `US_MILITARY_CLES`: A Civilian Leave and Earnings Statment (CLES) issued by the US military.

        `GIG`: Used to indicate that the income is related to gig work. Does not necessarily correspond to a specific document type.

        `PLAID_GENERATED_PAYSTUB_PDF`: Used to indicate that the PDF for the paystub was generated by Plaid.

        `NONE`: Used to indicate that there is no underlying document for the data.

        `UNKNOWN`: Document type could not be determined.
      x-override-enum-values-shown:
      - UNKNOWN
      - PAYSTUB
      - BANK_STATEMENT
      - US_TAX_W2
      - US_MILITARY_ERAS
      - US_MILITARY_LES
      - US_MILITARY_CLES
      - GIG
      - PLAID_GENERATED_PAYSTUB_PDF
      - NONE
    CreditBankStatementUploadItem:
      title: CreditBankStatementUploadItem
      type: object
      description: An object containing information about the bank statement upload Item.
      properties:
        item_id:
          $ref: '#/components/schemas/ItemId'
        bank_statements:
          type: array
          items:
            $ref: '#/components/schemas/CreditBankStatementUploadObject'
        status:
          $ref: '#/components/schemas/PayrollItemStatus'
        updated_at:
          type: string
          format: date-time
          description: Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DDTHH:mm:ssZ) indicating the last time that the Item was updated.
          nullable: true
      required:
      - item_id
      - bank_statements
      - status
      - updated_at
    CreditBankStatementUploadObject:
      title: CreditBankStatementUploadObject
      type: object
      additionalProperties: true
      description: An object containing data that has been parsed from a user-uploaded bank statement.
      properties:
        transactions:
          type: array
          description: An array of transactions appearing on the bank statement.
          items:
            $ref: '#/components/schemas/CreditBankStatementUploadTransaction'
        document_metadata:
          $ref: '#/components/schemas/CreditDocumentMetadata'
        document_id:
          type: string
          description: An identifier of the document referenced by the document metadata.
          nullable: true
        bank_accounts:
          type: array
          description: An array of bank accounts associated with the uploaded bank statement.
          items:
            $ref: '#/components/schemas/CreditBankStatementUploadBankAccount'
      required:
      - transactions
      - document_metadata
      - document_id
      - bank_accounts
    CreditBankStatementUploadTransaction:
      title: CreditBankStatementUploadTransaction
      type: object
      description: An object containing data about a transaction appearing on a user-uploaded bank statement.
      properties:
        amount:
          type: number
          description: The value of the transaction. A negative amount indicates that money moved into the account (such as a paycheck being deposited).
          nullable: true
        date:
          type: string
          format: date
          description: The date of when the transaction was made, in ISO 8601 format (YYYY-MM-DD).
          nullable: true
        original_description:
          type: string
          description: The raw description of the transaction as it appears on the bank statement.
          nullable: true
        account_id:
          type: string
          description: The unique id of the bank account that this transaction occurs in
          nullable: true
      required:
      - amount
      - date
      - original_description
      - account_id
    CreditBankStatementUploadBankAccount:
      title: CreditBankStatementUploadBankAccount
      type: object
      additionalProperties: true
      description: An object containing data about a user's bank account related to an uploaded bank statement.
      properties:
        name:
          type: string
          description: The name of the bank account
          nullable: true
        bank_name:
          type: string
          description: The name of the bank institution.
          nullable: true
        account_type:
          type: string
          description: The type of the bank account.
          nullable: true
        account_number:
          type: string
          description: The bank account number.
          nullable: true
        owner:
          $ref: '#/components/schemas/CreditBankStatementUploadAccountOwner'
        periods:
          type: array
          description: An array of period objects, containing more data on the overall period of the statement.
          items:
            $ref: '#/components/schemas/CreditBankStatementUploadBankAccountPeriod'
        account_id:
          type: string
          description: The unique id of the bank account
          nullable: true
      required:
      - name
      - bank_name
      - account_type
      - account_number
      - owner
      - periods
      - account_id
    CreditBankStatementUploadAccountOwner:
      title: CreditBankStatementUploadAccountOwner
      type: object
      description: An object containing data about the owner of the bank account for the uploaded bank statement.
      additionalProperties: true
      properties:
        name:
          type: string
          description: The name of the account owner
          nullable: true
        address:
          $ref: '#/components/schemas/CreditBankStatementUploadAccountOwnerAddress'
      required:
      - name
      - address
    CreditBankStatementUploadAccountOwnerAddress:
      title: CreditBankStatementUploadAccountOwnerAddress
      description: Address on the uploaded bank statement
      type: object
      additionalProperties: true
      properties:
        city:
          type: string
          description: The full city name.
          nullable: true
        country:
          type: string
          description: The ISO 3166-1 alpha-2 country code.
          nullable: true
        postal_code:
          type: string
          description: The postal code of the address.
          nullable: true
        region:
          type: string
          description: |-
            The region or state.
            Example: `"NC"`
          nullable: true
        street:
          type: string
          description: The full street address.
          nullable: true
      required:
      - city
      - country
      - postal_code
      - region
      - street
    CreditBankStatementUploadBankAccountPeriod:
      title: CreditBankStatementUploadBankAccountPeriod
      type: object
      description: An object containing data on the overall period of the statement.
      properties:
        start_date:
          type: string
          format: date
          description: The start date of the statement period in ISO 8601 format (YYYY-MM-DD).
          nullable: true
        end_date:
          type: string
          format: date
          description: The end date of the statement period in ISO 8601 format (YYYY-MM-DD).
          nullable: true
        starting_balance:
          type: number
          description: The starting balance of the bank account for the period.
          nullable: true
        ending_balance:
          type: number
          description: The ending balance of the bank account for the period.
          nullable: true
      required:
      - start_date
      - end_date
      - starting_balance
      - ending_balance
    PayrollItem:
      title: PayrollItem
      type: object
      description: An object containing information about the payroll item.
      properties:
        item_id:
          $ref: '#/components/schemas/ItemId'
        institution_id:
          type: string
          description: The unique identifier of the institution associated with the Item.
        institution_name:
          type: string
          description: The name of the institution associated with the Item.
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/PayrollIncomeAccountData'
        payroll_income:
          type: array
          items:
            $ref: '#/components/schemas/PayrollIncomeObject'
        status:
          $ref: '#/components/schemas/PayrollItemStatus'
        updated_at:
          type: string
          format: date-time
          description: Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DDTHH:mm:ssZ) indicating the last time that the Item was updated.
          nullable: true
      required:
      - item_id
      - institution_id
      - institution_name
      - payroll_income
      - status
      - accounts
      - updated_at
    PayrollIncomeAccountData:
      title: PayrollIncomeAccountData
      type: object
      nullable: true
      additionalProperties: true
      description: An object containing account level data.
      properties:
        account_id:
          type: string
          description: ID of the payroll provider account.
          nullable: true
        rate_of_pay:
          $ref: '#/components/schemas/PayrollIncomeRateOfPay'
        pay_frequency:
          type: string
          description: The frequency at which an individual is paid.
          nullable: true
          x-override-enum-values-shown:
          - DAILY
          - WEEKLY
          - BIWEEKLY
          - SEMI_MONTHLY
          - MONTHLY
          - CONTRACT
          - QUARTERLY
          - SEMI_ANNUALLY
          - ANNUALLY
          - OTHER
          - null
      required:
      - account_id
      - rate_of_pay
      - pay_frequency
    PayrollIncomeObject:
      title: PayrollIncomeObject
      type: object
      additionalProperties: true
      description: An object representing payroll data.
      properties:
        account_id:
          type: string
          description: ID of the payroll provider account.
          nullable: true
        pay_stubs:
          description: Array of pay stubs for the user.
          type: array
          items:
            $ref: '#/components/schemas/CreditPayStub'
        w2s:
          description: Array of tax form W-2s.
          type: array
          items:
            $ref: '#/components/schemas/CreditW2'
        form1099s:
          description: Array of tax form 1099s.
          type: array
          items:
            $ref: '#/components/schemas/Credit1099'
      required:
      - account_id
      - pay_stubs
      - w2s
      - form1099s
    Credit1099:
      title: Credit1099
      type: object
      additionalProperties: true
      description: An object representing an end user's 1099 tax form
      properties:
        document_id:
          type: string
          description: An identifier of the document referenced by the document metadata.
          nullable: true
        document_metadata:
          $ref: '#/components/schemas/CreditDocumentMetadata'
        form_1099_type:
          $ref: '#/components/schemas/Form1099Type'
        recipient:
          $ref: '#/components/schemas/Credit1099Recipient'
        payer:
          $ref: '#/components/schemas/Credit1099Payer'
        filer:
          $ref: '#/components/schemas/Credit1099Filer'
        tax_year:
          type: string
          description: Tax year of the tax form.
          nullable: true
        rents:
          type: number
          format: double
          description: Amount in rent by payer.
          nullable: true
        royalties:
          type: number
          format: double
          description: Amount in royalties by payer.
          nullable: true
        other_income:
          type: number
          format: double
          description: Amount in other income by payer.
          nullable: true
        federal_income_tax_withheld:
          type: number
          format: double
          description: Amount of federal income tax withheld from payer.
          nullable: true
        fishing_boat_proceeds:
          type: number
          format: double
          description: Amount of fishing boat proceeds from payer.
          nullable: true
        medical_and_healthcare_payments:
          type: number
          format: double
          description: Amount of medical and healthcare payments from payer.
          nullable: true
        nonemployee_compensation:
          type: number
          format: double
          description: Amount of nonemployee compensation from payer.
          nullable: true
        substitute_payments_in_lieu_of_dividends_or_interest:
          type: number
          format: double
          description: Amount of substitute payments made by payer.
          nullable: true
        payer_made_direct_sales_of_5000_or_more_of_consumer_products_to_buyer:
          type: string
          description: Whether or not payer made direct sales over $5000 of consumer products.
          nullable: true
        crop_insurance_proceeds:
          type: number
          format: double
          description: Amount of crop insurance proceeds.
          nullable: true
        excess_golden_parachute_payments:
          type: number
          format: double
          description: Amount of golden parachute payments made by payer.
          nullable: true
        gross_proceeds_paid_to_an_attorney:
          type: number
          format: double
          description: Amount of gross proceeds paid to an attorney by payer.
          nullable: true
        section_409a_deferrals:
          type: number
          format: double
          description: Amount of 409A deferrals earned by payer.
          nullable: true
        section_409a_income:
          type: number
          format: double
          description: Amount of 409A income earned by payer.
          nullable: true
        state_tax_withheld:
          type: number
          format: double
          description: Amount of state tax withheld of payer for primary state.
          nullable: true
        state_tax_withheld_lower:
          type: number
          format: double
          description: Amount of state tax withheld of payer for secondary state.
          nullable: true
        payer_state_number:
          type: string
          description: Primary state ID.
          nullable: true
        payer_state_number_lower:
          type: string
          description: Secondary state ID.
          nullable: true
        state_income:
          type: number
          format: double
          description: State income reported for primary state.
          nullable: true
        state_income_lower:
          type: number
          format: double
          description: State income reported for secondary state.
          nullable: true
        transactions_reported:
          type: string
          description: One of the values will be provided Payment card Third party network
          nullable: true
          x-override-enum-values-shown:
          - Payment card
          - Third party network
        pse_name:
          type: string
          description: Name of the PSE (Payment Settlement Entity).
          nullable: true
        pse_telephone_number:
          type: string
          description: Formatted (XXX) XXX-XXXX. Phone number of the PSE (Payment Settlement Entity).
          nullable: true
        gross_amount:
          type: number
          format: double
          description: Gross amount reported.
          nullable: true
        card_not_present_transaction:
          type: number
          format: double
          description: Amount in card not present transactions.
          nullable: true
        merchant_category_code:
          type: string
          description: Merchant category of filer.
          nullable: true
        number_of_payment_transactions:
          type: string
          description: Number of payment transactions made.
          nullable: true
        january_amount:
          type: number
          format: double
          description: Amount reported for January.
          nullable: true
        february_amount:
          type: number
          format: double
          description: Amount reported for February.
          nullable: true
        march_amount:
          type: number
          format: double
          description: Amount reported for March.
          nullable: true
        april_amount:
          type: number
          format: double
          description: Amount reported for April.
          nullable: true
        may_amount:
          type: number
          format: double
          description: Amount reported for May.
          nullable: true
        june_amount:
          type: number
          format: double
          description: Amount reported for June.
          nullable: true
        july_amount:
          type: number
          format: double
          description: Amount reported for July.
          nullable: true
        august_amount:
          type: number
          format: double
          description: Amount reported for August.
          nullable: true
        september_amount:
          type: number
          format: double
          description: Amount reported for September.
          nullable: true
        october_amount:
          type: number
          format: double
          description: Amount reported for October.
          nullable: true
        november_amount:
          type: number
          format: double
          description: Amount reported for November.
          nullable: true
        december_amount:
          type: number
          format: double
          description: Amount reported for December.
          nullable: true
        primary_state:
          type: string
          description: Primary state of business.
          nullable: true
        secondary_state:
          type: string
          description: Secondary state of business.
          nullable: true
        primary_state_id:
          type: string
          description: Primary state ID.
          nullable: true
        secondary_state_id:
          type: string
          description: Secondary state ID.
          nullable: true
        primary_state_income_tax:
          type: number
          format: double
          description: State income tax reported for primary state.
          nullable: true
        secondary_state_income_tax:
          type: number
          format: double
          description: State income tax reported for secondary state.
          nullable: true
      required:
      - document_id
    Form1099Type:
      title: Form1099Type
      type: string
      description: Form 1099 Type
      enum:
      - FORM_1099_TYPE_UNKNOWN
      - FORM_1099_TYPE_MISC
      - FORM_1099_TYPE_K
    Credit1099Payer:
      title: Credit1099Payer
      type: object
      additionalProperties: true
      description: An object representing a payer used by 1099-MISC tax documents.
      properties:
        address:
          $ref: '#/components/schemas/CreditPayStubAddress'
        name:
          type: string
          description: Name of payer.
          nullable: true
        tin:
          type: string
          description: Tax identification number of payer.
          nullable: true
        telephone_number:
          type: string
          description: Telephone number of payer.
          nullable: true
    Credit1099Recipient:
      title: Credit1099Recipient
      type: object
      additionalProperties: true
      description: An object representing a recipient used in both 1099-K and 1099-MISC tax documents.
      properties:
        address:
          $ref: '#/components/schemas/CreditPayStubAddress'
        name:
          type: string
          description: Name of recipient.
          nullable: true
        tin:
          type: string
          description: Tax identification number of recipient.
          nullable: true
        account_number:
          type: string
          description: Account number number of recipient.
          nullable: true
        facta_filing_requirement:
          type: string
          description: Checked if FACTA is a filing requirement.
          nullable: true
          x-override-enum-values-shown:
          - CHECKED
          - NOT CHECKED
        second_tin_exists:
          type: string
          description: Checked if 2nd TIN exists.
          nullable: true
          x-override-enum-values-shown:
          - CHECKED
          - NOT CHECKED
    Credit1099Filer:
      title: Credit1099Filer
      type: object
      additionalProperties: true
      description: An object representing a filer used by 1099-K tax documents.
      properties:
        address:
          $ref: '#/components/schemas/CreditPayStubAddress'
        name:
          type: string
          description: Name of filer.
          nullable: true
        tin:
          type: string
          description: Tax identification number of filer.
          nullable: true
        type:
          type: string
          description: 'One of the following values will be provided: Payment Settlement Entity (PSE), Electronic Payment Facilitator (EPF), Other Third Party'
          nullable: true
          x-override-enum-values-shown:
          - Payment Settlement Entity (PSE)
          - Electronic Payment Facilitator (EPF)
          - Other Third Party
    CreditPayStub:
      title: CreditPayStub
      type: object
      additionalProperties: true
      description: An object representing an end user's pay stub.
      properties:
        deductions:
          $ref: '#/components/schemas/CreditPayStubDeductions'
        document_id:
          type: string
          description: An identifier of the document referenced by the document metadata.
          nullable: true
        document_metadata:
          $ref: '#/components/schemas/CreditDocumentMetadata'
        earnings:
          $ref: '#/components/schemas/CreditPayStubEarnings'
        employee:
          $ref: '#/components/schemas/CreditPayStubEmployee'
        employer:
          $ref: '#/components/schemas/CreditPayStubEmployer'
        net_pay:
          $ref: '#/components/schemas/CreditPayStubNetPay'
        pay_period_details:
          $ref: '#/components/schemas/PayStubPayPeriodDetails'
      required:
      - deductions
      - document_id
      - document_metadata
      - earnings
      - employee
      - employer
      - net_pay
      - pay_period_details
    CreditPayStubDeductions:
      title: CreditPayStubDeductions
      type: object
      description: An object with the deduction information found on a pay stub.
      additionalProperties: true
      properties:
        breakdown:
          type: array
          items:
            $ref: '#/components/schemas/PayStubDeductionsBreakdown'
        total:
          $ref: '#/components/schemas/PayStubDeductionsTotal'
      required:
      - breakdown
      - total
    PayStubDeductionsBreakdown:
      title: PayStubDeductionsBreakdown
      type: object
      additionalProperties: true
      description: An object representing the deduction line items for the pay period
      properties:
        current_amount:
          type: number
          format: double
          description: Raw amount of the deduction
          nullable: true
        description:
          type: string
          description: Description of the deduction line item
          nullable: true
        iso_currency_code:
          type: string
          description: The ISO-4217 currency code of the line item. Always `null` if `unofficial_currency_code` is non-null.
          nullable: true
        unofficial_currency_code:
          nullable: true
          type: string
          description: |-
            The unofficial currency code associated with the line item. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.

            See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
        ytd_amount:
          type: number
          format: double
          description: The year-to-date amount of the deduction
          nullable: true
      required:
      - current_amount
      - description
      - iso_currency_code
      - unofficial_currency_code
      - ytd_amount
    PayStubDeductionsTotal:
      title: PayStubDeductionsTotal
      type: object
      description: An object representing the total deductions for the pay period
      additionalProperties: true
      properties:
        current_amount:
          type: number
          format: double
          description: Raw amount of the deduction
          nullable: true
        iso_currency_code:
          type: string
          description: The ISO-4217 currency code of the line item. Always `null` if `unofficial_currency_code` is non-null.
          nullable: true
        unofficial_currency_code:
          nullable: true
          type: string
          description: |-
            The unofficial currency code associated with the line item. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.

            See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
        ytd_amount:
          type: number
          format: double
          description: The year-to-date total amount of the deductions
          nullable: true
      required:
      - current_amount
      - iso_currency_code
      - unofficial_currency_code
      - ytd_amount
    CreditPayStubEarnings:
      title: CreditPayStubEarnings
      type: object
      description: An object representing both a breakdown of earnings on a pay stub and the total earnings.
      additionalProperties: true
      properties:
        breakdown:
          type: array
          items:
            $ref: '#/components/schemas/PayStubEarningsBreakdown'
        total:
          $ref: '#/components/schemas/PayStubEarningsTotal'
      required:
      - breakdown
      - total
    PayStubEarningsBreakdown:
      title: PayStubEarningsBreakdown
      type: object
      additionalProperties: true
      description: An object representing the earnings line items for the pay period.
      properties:
        canonical_description:
          $ref: '#/components/schemas/PayStubEarningsBreakdownCanonicalDescription'
        current_amount:
          type: number
          format: double
          description: Raw amount of the earning line item.
          nullable: true
        description:
          type: string
          description: Description of the earning line item.
          nullable: true
        hours:
          type: number
          description: Number of hours applicable for this earning.
          nullable: true
        iso_currency_code:
          type: string
          description: The ISO-4217 currency code of the line item. Always `null` if `unofficial_currency_code` is non-null.
          nullable: true
        rate:
          type: number
          format: double
          description: Hourly rate applicable for this earning.
          nullable: true
        unofficial_currency_code:
          nullable: true
          type: string
          description: |-
            The unofficial currency code associated with the line item. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.

            See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
        ytd_amount:
          type: number
          format: double
          description: The year-to-date amount of the deduction.
          nullable: true
      required:
      - canonical_description
      - current_amount
      - description
      - hours
      - iso_currency_code
      - rate
      - unofficial_currency_code
      - ytd_amount
    PayStubEarningsBreakdownCanonicalDescription:
      type: string
      description: Commonly used term to describe the earning line item.
      x-override-enum-values-shown:
      - BONUS
      - COMMISSION
      - OVERTIME
      - PAID_TIME_OFF
      - REGULAR_PAY
      - VACATION
      - BASIC_ALLOWANCE_HOUSING
      - BASIC_ALLOWANCE_SUBSISTENCE
      - OTHER
      - ALLOWANCE
      - BEREAVEMENT
      - HOLIDAY_PAY
      - JURY_DUTY
      - LEAVE
      - LONG_TERM_DISABILITY_PAY
      - MILITARY_PAY
      - PER_DIEM
      - REFERRAL_BONUS
      - REIMBURSEMENTS
      - RETENTION_BONUS
      - RETROACTIVE_PAY
      - SEVERANCE_PAY
      - SHIFT_DIFFERENTIAL
      - SHORT_TERM_DISABILITY_PAY
      - SICK_PAY
      - SIGNING_BONUS
      - TIPS_INCOME
      - null
      nullable: true
    PayStubEarningsTotal:
      title: PayStubEarningsTotal
      type: object
      description: An object representing both the current pay period and year to date amount for an earning category.
      additionalProperties: true
      properties:
        current_amount:
          type: number
          format: double
          description: Total amount of the earnings for this pay period.
          nullable: true
        hours:
          type: number
          description: Total number of hours worked for this pay period.
          nullable: true
        iso_currency_code:
          type: string
          description: The ISO-4217 currency code of the line item. Always `null` if `unofficial_currency_code` is non-null.
          nullable: true
        unofficial_currency_code:
          nullable: true
          type: string
          description: |-
            The unofficial currency code associated with the security. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.

            See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
        ytd_amount:
          type: number
          format: double
          description: The total year-to-date amount of the earnings.
          nullable: true
      required:
      - current_amount
      - hours
      - iso_currency_code
      - unofficial_currency_code
      - ytd_amount
    CreditPayStubEmployee:
      title: CreditPayStubEmployee
      type: object
      additionalProperties: true
      description: Data about the employee.
      properties:
        address:
          $ref: '#/components/schemas/CreditPayStubAddress'
        name:
          type: string
          description: The name of the employee.
          nullable: true
        marital_status:
          type: string
          description: Marital status of the employee - either `SINGLE` or `MARRIED` or `NOT LISTED`.
          nullable: true
          x-override-enum-values-shown:
          - SINGLE
          - MARRIED
          - NOT LISTED
          - null
        taxpayer_id:
          $ref: '#/components/schemas/PayStubTaxpayerID'
      required:
      - name
      - address
      - marital_status
      - taxpayer_id
    CreditPayStubAddress:
      title: CreditPayStubAddress
      description: Address on the pay stub.
      type: object
      additionalProperties: true
      properties:
        city:
          type: string
          description: The full city name.
          nullable: true
        country:
          type: string
          description: The ISO 3166-1 alpha-2 country code.
          nullable: true
        postal_code:
          type: string
          description: The postal code of the address.
          nullable: true
        region:
          type: string
          description: |-
            The region or state.
            Example: `"NC"`
          nullable: true
        street:
          type: string
          description: The full street address.
          nullable: true
      required:
      - city
      - country
      - postal_code
      - region
      - street
    PayStubTaxpayerID:
      title: PayStubTaxpayerID
      type: object
      additionalProperties: true
      description: Taxpayer ID of the individual receiving the paystub.
      properties:
        id_type:
          type: string
          description: Type of ID, e.g. 'SSN'.
          nullable: true
        id_mask:
          type: string
          description: ID mask; i.e. last 4 digits of the taxpayer ID.
          nullable: true
      required:
      - id_type
      - id_mask
    CreditPayStubEmployer:
      title: CreditPayStubEmployer
      description: Information about the employer on the pay stub.
      type: object
      additionalProperties: true
      properties:
        address:
          $ref: '#/components/schemas/CreditPayStubAddress'
        name:
          type: string
          description: The name of the employer on the pay stub.
          nullable: true
      required:
      - address
      - name
    CreditPayStubNetPay:
      title: CreditPayStubNetPay
      type: object
      description: An object representing information about the net pay amount on the pay stub.
      additionalProperties: true
      properties:
        current_amount:
          type: number
          format: double
          description: Raw amount of the net pay for the pay period.
          nullable: true
        description:
          type: string
          description: Description of the net pay.
          nullable: true
        iso_currency_code:
          type: string
          description: The ISO-4217 currency code of the net pay. Always `null` if `unofficial_currency_code` is non-null.
          nullable: true
        unofficial_currency_code:
          nullable: true
          type: string
          description: |-
            The unofficial currency code associated with the net pay. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.

            See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
        ytd_amount:
          type: number
          format: double
          description: The year-to-date amount of the net pay.
          nullable: true
      required:
      - current_amount
      - description
      - iso_currency_code
      - unofficial_currency_code
      - ytd_amount
    PayStubPayPeriodDetails:
      title: PayStubPayPeriodDetails
      type: object
      additionalProperties: true
      description: Details about the pay period.
      properties:
        pay_amount:
          type: number
          format: double
          description: The amount of the paycheck.
          nullable: true
        distribution_breakdown:
          type: array
          items:
            $ref: '#/components/schemas/PayStubDistributionBreakdown'
        end_date:
          type: string
          format: date
          description: The date on which the pay period ended, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format ("yyyy-mm-dd").
          nullable: true
        gross_earnings:
          type: number
          format: double
          description: Total earnings before tax/deductions.
          nullable: true
        iso_currency_code:
          type: string
          description: The ISO-4217 currency code of the net pay. Always `null` if `unofficial_currency_code` is non-null.
          nullable: true
        pay_date:
          type: string
          format: date
          description: The date on which the pay stub was issued, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format ("yyyy-mm-dd").
          nullable: true
        pay_frequency:
          type: string
          description: The frequency at which an individual is paid.
          x-override-enum-values-shown:
          - UNKNOWN
          - WEEKLY
          - BIWEEKLY
          - SEMI_MONTHLY
          - MONTHLY
          - null
          nullable: true
        pay_basis:
          $ref: '#/components/schemas/CreditPayStubPayBasisType'
        start_date:
          type: string
          format: date
          description: The date on which the pay period started, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format ("yyyy-mm-dd").
          nullable: true
        unofficial_currency_code:
          nullable: true
          type: string
          description: |-
            The unofficial currency code associated with the net pay. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.

            See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
      required:
      - pay_amount
      - distribution_breakdown
      - end_date
      - gross_earnings
      - iso_currency_code
      - pay_date
      - pay_frequency
      - start_date
      - unofficial_currency_code
    PayStubDistributionBreakdown:
      title: PayStubDistributionBreakdown
      type: object
      description: Information about the accounts that the payment was distributed to.
      additionalProperties: true
      properties:
        account_name:
          type: string
          description: Name of the account for the given distribution.
          nullable: true
        bank_name:
          type: string
          description: The name of the bank that the payment is being deposited to.
          nullable: true
        current_amount:
          type: number
          format: double
          description: The amount distributed to this account.
          nullable: true
        iso_currency_code:
          type: string
          description: The ISO-4217 currency code of the net pay. Always `null` if `unofficial_currency_code` is non-null.
          nullable: true
        mask:
          type: string
          description: The last 2-4 alphanumeric characters of an account's official account number.
          nullable: true
        type:
          type: string
          description: Type of the account that the paystub was sent to (e.g. 'checking').
          nullable: true
        unofficial_currency_code:
          nullable: true
          type: string
          description: |-
            The unofficial currency code associated with the net pay. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.

            See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
      required:
      - account_name
      - bank_name
      - current_amount
      - iso_currency_code
      - mask
      - type
      - unofficial_currency_code
    ReportType:
      title: ReportType
      type: string
      description: The report type. It can be `asset`. Income report types are not yet supported.
      enum:
      - asset
      nullable: false
    DocumentRiskSignal:
      title: DocumentRiskSignal
      description: Details about a certain reason as to why a document could potentially be fraudulent.
      type: object
      additionalProperties: true
      nullable: true
      properties:
        type:
          title: DocumentRiskSignalResultType
          type: string
          description: The result from the risk signal check.
          nullable: true
          x-override-enum-values-shown:
          - FONT
          - MASKING
          - OVERLAID_TEXT
          - EDITED_TEXT
          - TEXT_COMPRESSION
          - ADDRESS_FORMAT_ANOMALY
          - DATE_FORMAT_ANOMALY
          - FONT_ANOMALY
          - NAME_FORMAT_ANOMALY
          - PDF_ALIGNMENT
          - BRUSH_DETECTION
          - METADATA_DATES_OUTSIDE_WINDOW
          - METADATA_DATES_INSIDE_WINDOW
          - METADATA_DATES_MISSING
          - METADATA_DATES_MATCH
          - ADOBE_FONTS
          - ANNOTATION_DATES
          - ANNOTATIONS
          - EDITED_WHILE_SCANNED
          - EXIF_DATA_MODIFIED
          - HIGH_USER_ACCESS
          - MALFORMED_DATE
          - QPDF
          - TEXT_LAYER_TEXT
          - TOUCHUP_TEXT
          - FLATTENED_PDF
          - BLACKLISTS
          - COPYCAT_IMAGE
          - COPYCAT_TEXT
          - REJECTED_CUSTOMER
          - TEMPLATES
          - SOFTWARE_BLACKLIST
        field:
          title: DocumentRiskSignalField
          type: string
          description: The field which the risk signal was computed for
          nullable: true
        has_fraud_risk:
          title: DocumentRiskSignalHasFraudRisk
          type: boolean
          description: A flag used to quickly identify if the signal indicates that this field is authentic or fraudulent
          nullable: true
        institution_metadata:
          $ref: '#/components/schemas/DocumentRiskSignalInstitutionMetadata'
        expected_value:
          title: DocumentRiskSignalExpectedValue
          type: string
          description: The expected value of the field, as seen on the document
          nullable: true
        actual_value:
          title: DocumentRiskSignalActualValue
          type: string
          description: The derived value obtained in the risk signal calculation process for this field
          nullable: true
        signal_description:
          title: DocumentRiskSignalDescription
          type: string
          description: A human-readable explanation providing more detail into the particular risk signal
          nullable: true
        page_number:
          title: DocumentRiskPageNumber
          type: integer
          description: The relevant page associated with the risk signal
          nullable: true
      required:
      - type
      - field
      - has_fraud_risk
      - institution_metadata
      - expected_value
      - actual_value
      - signal_description
      - page_number
    DocumentRiskSignalInstitutionMetadata:
      title: DocumentRiskSignalInstitutionMetadata
      type: object
      additionalProperties: true
      nullable: true
      description: An object which contains additional metadata about the institution used to compute the verification attribute
      properties:
        item_id:
          $ref: '#/components/schemas/ItemId'
      required:
      - item_id
    PayrollItemStatus:
      title: PayrollItemStatus
      description: Details about the status of the payroll item.
      type: object
      additionalProperties: true
      nullable: true
      properties:
        processing_status:
          title: PayrollItemStatusProcessingStatus
          type: string
          description: |-
            Denotes the processing status for the verification.

            `UNKNOWN`: The processing status could not be determined.

            `PROCESSING_COMPLETE`: The processing has completed and the user has approved for sharing. The data is available to be retrieved.

            `PROCESSING`: The verification is still processing. The data is not available yet.

            `FAILED`: The processing failed to complete successfully.

            `APPROVAL_STATUS_PENDING`: The processing has completed but the user has not yet approved the sharing of the data.
          nullable: true
          x-override-enum-values-shown:
          - UNKNOWN
          - PROCESSING_COMPLETE
          - PROCESSING
          - FAILED
          - APPROVAL_STATUS_PENDING
    CreditW2:
      title: CreditW2
      type: object
      additionalProperties: true
      description: W2 is an object that represents income data taken from a W2 tax document.
      properties:
        document_metadata:
          $ref: '#/components/schemas/CreditDocumentMetadata'
        document_id:
          type: string
          description: An identifier of the document referenced by the document metadata.
        employer:
          $ref: '#/components/schemas/CreditPayStubEmployer'
        employee:
          $ref: '#/components/schemas/CreditPayStubEmployee'
        tax_year:
          type: string
          description: The tax year of the W2 document.
          nullable: true
        employer_id_number:
          type: string
          description: An employee identification number or EIN.
          nullable: true
        wages_tips_other_comp:
          type: string
          description: Wages from tips and other compensation.
          nullable: true
        federal_income_tax_withheld:
          type: string
          description: Federal income tax withheld for the tax year.
          nullable: true
        social_security_wages:
          type: string
          description: Wages from social security.
          nullable: true
        social_security_tax_withheld:
          type: string
          description: Social security tax withheld for the tax year.
          nullable: true
        medicare_wages_and_tips:
          type: string
          description: Wages and tips from medicare.
          nullable: true
        medicare_tax_withheld:
          type: string
          description: Medicare tax withheld for the tax year.
          nullable: true
        social_security_tips:
          type: string
          description: Tips from social security.
          nullable: true
        allocated_tips:
          type: string
          description: Allocated tips.
          nullable: true
        box_9:
          type: string
          description: Contents from box 9 on the W2.
          nullable: true
        dependent_care_benefits:
          type: string
          description: Dependent care benefits.
          nullable: true
        nonqualified_plans:
          type: string
          description: Nonqualified plans.
          nullable: true
        box_12:
          type: array
          items:
            $ref: '#/components/schemas/W2Box12'
        statutory_employee:
          type: string
          description: Statutory employee.
          nullable: true
        retirement_plan:
          type: string
          description: Retirement plan.
          nullable: true
        third_party_sick_pay:
          type: string
          description: Third party sick pay.
          nullable: true
        other:
          type: string
          description: Other.
          nullable: true
        state_and_local_wages:
          type: array
          items:
            $ref: '#/components/schemas/W2StateAndLocalWages'
      required:
      - document_metadata
      - document_id
      - employer
      - employee
      - tax_year
      - employer_id_number
      - wages_tips_other_comp
      - federal_income_tax_withheld
      - social_security_wages
      - social_security_tax_withheld
      - medicare_wages_and_tips
      - medicare_tax_withheld
      - social_security_tips
      - allocated_tips
      - box_9
      - dependent_care_benefits
      - nonqualified_plans
      - box_12
      - statutory_employee
      - retirement_plan
      - third_party_sick_pay
      - other
      - state_and_local_wages
    PayrollIncomeRateOfPay:
      title: PayrollIncomeRateOfPay
      type: object
      additionalProperties: true
      description: An object representing the rate at which an individual is paid.
      properties:
        pay_rate:
          type: string
          description: The rate at which an employee is paid.
          nullable: true
          x-override-enum-values-shown:
          - ANNUAL
          - HOURLY
          - CONTRACT
          - WEEKLY
          - BI_WEEKLY
          - MONTHLY
          - SEMI_MONTHLY
          - DAILY
          - COMMISSION
          - OTHER
          - null
        pay_amount:
          type: number
          format: double
          description: The amount at which an employee is paid.
          nullable: true
    CreditPayrollIncomePrecheckRequest:
      title: CreditPayrollIncomePrecheckRequest
      type: object
      description: Defines the request schema for `/credit/payroll_income/precheck`.
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        user_token:
          $ref: '#/components/schemas/UserToken'
        access_tokens:
          type: array
          description: An array of access tokens corresponding to Items belonging to the user whose eligibility is being checked. Note that if the Items specified here are not already initialized with `transactions`, providing them in this field will cause these Items to be initialized with (and billed for) the Transactions product.
          items:
            $ref: '#/components/schemas/AccessToken'
        employer:
          $ref: '#/components/schemas/IncomeVerificationPrecheckEmployer'
        us_military_info:
          $ref: '#/components/schemas/IncomeVerificationPrecheckMilitaryInfo'
        payroll_institution:
          $ref: '#/components/schemas/IncomeVerificationPrecheckPayrollInstitution'
    CreditPayrollIncomePrecheckResponse:
      title: CreditPayrollIncomePrecheckResponse
      additionalProperties: true
      type: object
      description: Defines the response schema for `/credit/payroll_income/precheck`.
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
        confidence:
          $ref: '#/components/schemas/IncomeVerificationPrecheckConfidence'
      required:
      - confidence
      - request_id
    CreditPayrollIncomeRefreshRequest:
      title: CreditPayrollIncomeRefreshRequest
      type: object
      description: CreditPayrollIncomeRefreshRequest defines the request schema for `/credit/payroll_income/refresh`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        user_token:
          $ref: '#/components/schemas/UserToken'
        options:
          $ref: '#/components/schemas/CreditPayrollIncomeRefreshRequestOptions'
      required:
      - user_token
    CreditPayrollIncomeRefreshRequestOptions:
      description: An optional object for `/credit/payroll_income/refresh` request options.
      type: object
      properties:
        item_ids:
          type: array
          items:
            type: string
          description: An array of `item_id`s to be refreshed. Each `item_id` should uniquely identify a payroll income item. If this field is not provided, all `item_id`s associated with the `user_token` will be refreshed.
        webhook:
          type: string
          description: The URL where Plaid will send the payroll income refresh webhook.
    CreditPayrollIncomeRefreshResponse:
      title: CreditPayrollIncomeRefreshResponse
      type: object
      additionalProperties: true
      description: CreditPayrollIncomeRefreshResponse defines the response schema for `/credit/payroll_income/refresh`
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
        verification_refresh_status:
          $ref: '#/components/schemas/CreditPayrollIncomeRefreshStatus'
      required:
      - request_id
      - verification_refresh_status
    CreditEmploymentGetRequest:
      title: CreditEmploymentGetRequest
      type: object
      description: CreditEmploymentGetRequest defines the request schema for `/credit/employment/get`.
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        user_token:
          $ref: '#/components/schemas/UserToken'
      required:
      - user_token
    CreditEmploymentGetResponse:
      title: CreditEmploymentGetResponse
      type: object
      additionalProperties: true
      description: CreditEmploymentGetResponse defines the response schema for `/credit/employment/get`.
      properties:
        items:
          description: Array of employment items.
          type: array
          items:
            $ref: '#/components/schemas/CreditEmploymentItem'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - items
      - request_id
    CreditEmploymentItem:
      title: CreditEmploymentItem
      type: object
      additionalProperties: true
      description: The object containing employment items.
      properties:
        item_id:
          $ref: '#/components/schemas/ItemId'
        employments:
          type: array
          items:
            $ref: '#/components/schemas/CreditEmploymentVerification'
        employment_report_token:
          title: EmploymentReportToken
          type: string
          description: Token to represent the underlying Employment data
          x-hidden-from-docs: true
      required:
      - item_id
      - employments
    CreditEmploymentVerification:
      title: CreditEmploymentVerification
      type: object
      additionalProperties: true
      description: The object containing proof of employment data for an individual.
      properties:
        account_id:
          type: string
          description: ID of the payroll provider account.
          nullable: true
        status:
          $ref: '#/components/schemas/CreditEmploymentVerificationStatus'
        start_date:
          format: date
          type: string
          description: Start of employment in ISO 8601 format (YYYY-MM-DD).
          nullable: true
        end_date:
          format: date
          type: string
          description: End of employment, if applicable. Provided in ISO 8601 format (YYY-MM-DD).
          nullable: true
        employer:
          $ref: '#/components/schemas/CreditEmployerVerification'
        title:
          type: string
          description: Current title of employee.
          nullable: true
        platform_ids:
          $ref: '#/components/schemas/CreditPlatformIds'
        employee_type:
          $ref: '#/components/schemas/CreditEmploymentEmployeeType'
        last_paystub_date:
          format: date
          type: string
          description: The date of the employee's most recent paystub in ISO 8601 format (YYYY-MM-DD).
          nullable: true
      required:
      - account_id
      - status
      - start_date
      - end_date
      - employer
      - title
      - platform_ids
      - employee_type
      - last_paystub_date
    CreditEmploymentEmployeeType:
      type: string
      title: CreditEmploymentEmployeeType
      description: |-
        The type of employment for the individual.
        `"FULL_TIME"`: A full-time employee.
        `"PART_TIME"`: A part-time employee.
        `"CONTRACTOR"`: An employee typically hired externally through a contracting group.
        `"TEMPORARY"`: A temporary employee.
        `"OTHER"`: The employee type is not one of the above defined types.
      nullable: true
      x-override-enum-values-shown:
      - FULL_TIME
      - PART_TIME
      - CONTRACTOR
      - TEMPORARY
      - OTHER
      - null
    CreditEmploymentVerificationStatus:
      type: string
      title: CreditEmploymentVerificationStatus
      description: Current employment status.
      nullable: true
      x-override-enum-values-shown:
      - ACTIVE
      - INACTIVE
      - null
    CreditEmployerVerification:
      title: CreditEmployerVerification
      type: object
      additionalProperties: true
      description: An object containing employer data.
      properties:
        name:
          type: string
          description: Name of employer.
          nullable: true
      required:
      - name
    CreditPlatformIds:
      title: CreditPlatformIds
      type: object
      additionalProperties: true
      description: The object containing a set of ids related to an employee.
      properties:
        employee_id:
          type: string
          description: The ID of an employee as given by their employer.
          nullable: true
        payroll_id:
          type: string
          description: The ID of an employee as given by their payroll.
          nullable: true
        position_id:
          type: string
          description: The ID of the position of the employee.
          nullable: true
      required:
      - employee_id
      - payroll_id
      - position_id
    CreditBankIncomeWarning:
      type: object
      description: The warning associated with the data that was unavailable for the Bank Income Report.
      properties:
        warning_type:
          $ref: '#/components/schemas/CreditBankIncomeWarningType'
        warning_code:
          $ref: '#/components/schemas/CreditBankIncomeWarningCode'
        cause:
          $ref: '#/components/schemas/CreditBankIncomeCause'
    CreditBankIncomeWarningType:
      type: string
      description: The warning type which will always be `BANK_INCOME_WARNING`.
      enum:
      - BANK_INCOME_WARNING
    CreditBankIncomeWarningCode:
      type: string
      description: |-
        The warning code identifies a specific kind of warning.
        `IDENTITY_UNAVAILABLE`: Unable to extract identity for the Item
        `TRANSACTIONS_UNAVAILABLE`: Unable to extract transactions for the Item
        `ITEM_UNAPPROVED`: User exited flow before giving permission to share data for the Item
        `REPORT_DELETED`: Report deleted due to customer or consumer request
        `DATA_UNAVAILABLE`: No relevant data was found for the Item
      enum:
      - IDENTITY_UNAVAILABLE
      - TRANSACTIONS_UNAVAILABLE
      - ITEM_UNAPPROVED
      - REPORT_DELETED
      - DATA_UNAVAILABLE
    CreditBankIncomeCause:
      type: object
      description: An error object and associated `item_id` used to identify a specific Item and error when a batch operation operating on multiple Items has encountered an error in one of the Items.
      properties:
        error_type:
          $ref: '#/components/schemas/CreditBankIncomeErrorType'
        error_code:
          type: string
          description: We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues. Error fields will be `null` if no error has occurred.
        error_message:
          type: string
          description: A developer-friendly representation of the error code. This may change over time and is not safe for programmatic use.
        display_message:
          type: string
          description: |-
            A user-friendly representation of the error code. null if the error is not related to user action.
            This may change over time and is not safe for programmatic use.
        item_id:
          type: string
          description: The `item_id` of the Item associated with this warning.
      required:
      - error_type
      - error_code
      - error_message
      - display_message
      - item_id
    CreditBankIncomeErrorType:
      type: string
      description: A broad categorization of the error. Safe for programmatic use.
      enum:
      - INTERNAL_SERVER_ERROR
      - INSUFFICIENT_CREDENTIALS
      - ITEM_LOCKED
      - USER_SETUP_REQUIRED
      - COUNTRY_NOT_SUPPORTED
      - INSTITUTION_DOWN
      - INSTITUTION_NO_LONGER_SUPPORTED
      - INSTITUTION_NOT_RESPONDING
      - INVALID_CREDENTIALS
      - INVALID_MFA
      - INVALID_SEND_METHOD
      - ITEM_LOGIN_REQUIRED
      - MFA_NOT_SUPPORTED
      - NO_ACCOUNTS
      - ITEM_NOT_SUPPORTED
      - ACCESS_NOT_GRANTED
    CreditRelayCreateRequest:
      type: object
      description: CreditRelayCreateRequest defines the request schema for `/credit/relay/create`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        report_tokens:
          type: array
          description: List of report token strings, with at most one token of each report type. Currently only Asset Report token is supported.
          items:
            type: string
            description: The report token. It can only be an asset report token token.
            nullable: false
        secondary_client_id:
          type: string
          description: The `secondary_client_id` is the client id of the third party with whom you would like to share the relay token.
        webhook:
          type: string
          description: URL to which Plaid will send webhooks when the Secondary Client successfully retrieves an Asset Report by calling `/credit/relay/get`.
          nullable: true
      required:
      - report_tokens
      - secondary_client_id
    CreditRelayCreateResponse:
      type: object
      additionalProperties: true
      description: CreditRelayCreateResponse defines the response schema for `/credit/relay/create`
      properties:
        relay_token:
          type: string
          description: A token that can be shared with a third party to allow them to access the Asset Report. This token should be stored securely.
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - relay_token
      - request_id
    CreditRelayGetRequest:
      title: CreditRelayGetRequest
      type: object
      description: CreditRelayGetRequest defines the request schema for `/credit/relay/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        relay_token:
          type: string
          description: The `relay_token` granting access to the report you would like to get.
        report_type:
          $ref: '#/components/schemas/ReportType'
      required:
      - relay_token
      - report_type
    CreditRelayPDFGetRequest:
      title: CreditRelayPDFGetRequest
      type: object
      description: CreditRelayPDFGetRequest defines the request schema for `/credit/relay/pdf/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        relay_token:
          type: string
          description: The `relay_token` granting access to the report you would like to get.
        report_type:
          $ref: '#/components/schemas/ReportType'
      required:
      - relay_token
      - report_type
    CreditRelayPDFGetResponse:
      title: CreditRelayPDFGetResponse
      format: binary
      type: string
      description: CreditRelayPDFGetResponse defines the response schema for `/credit/relay/pdf/get`
    CreditRelayRefreshRequest:
      type: object
      description: CreditRelayRefreshRequest defines the request schema for `/credit/relay/refresh`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        relay_token:
          type: string
          description: The `relay_token` granting access to the report you would like to refresh.
        report_type:
          $ref: '#/components/schemas/ReportType'
        webhook:
          type: string
          description: The URL registered to receive webhooks when the report of a relay token has been refreshed.
          nullable: true
      required:
      - relay_token
      - report_type
    CreditRelayRefreshResponse:
      type: object
      additionalProperties: true
      description: CreditRelayRefreshResponse defines the response schema for `/credit/relay/refresh`
      properties:
        relay_token:
          type: string
        asset_report_id:
          $ref: '#/components/schemas/AssetReportId'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - relay_token
      - request_id
    CreditRelayRemoveRequest:
      type: object
      description: CreditRelayRemoveRequest defines the request schema for `/credit/relay/remove`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        relay_token:
          type: string
          description: The `relay_token` you would like to revoke.
      required:
      - relay_token
    CreditRelayRemoveResponse:
      type: object
      additionalProperties: true
      description: CreditRelayRemoveResponse defines the response schema for `/credit/relay/remove`
      properties:
        removed:
          type: boolean
          description: '`true` if the relay token was successfully removed.'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - removed
      - request_id
    SandboxBankTransferFireWebhookRequest:
      title: SandboxBankTransferFireWebhookRequest
      type: object
      description: Defines the request schema for `/sandbox/bank_transfer/fire_webhook`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        webhook:
          type: string
          description: The URL to which the webhook should be sent.
      required:
      - webhook
    SandboxBankTransferFireWebhookResponse:
      title: SandboxBankTransferFireWebhookResponse
      additionalProperties: true
      type: object
      description: Defines the response schema for `/sandbox/bank_transfer/fire_webhook`
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - request_id
    SandboxTransferFireWebhookRequest:
      title: SandboxTransferFireWebhookRequest
      type: object
      description: Defines the request schema for `/sandbox/transfer/fire_webhook`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        webhook:
          type: string
          description: The URL to which the webhook should be sent.
      required:
      - webhook
    SandboxTransferFireWebhookResponse:
      title: SandboxTransferFireWebhookResponse
      additionalProperties: true
      type: object
      description: Defines the response schema for `/sandbox/transfer/fire_webhook`
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - request_id
    ApplicationID:
      title: ApplicationID
      type: string
      description: This field will map to the application ID that is returned from /item/application/list, or provided to the institution in an oauth redirect.
    Application:
      type: object
      description: Metadata about the application
      properties:
        application_id:
          $ref: '#/components/schemas/ApplicationID'
        name:
          type: string
          description: The name of the application
        display_name:
          type: string
          nullable: true
          description: A human-readable name of the application for display purposes
        join_date:
          type: string
          format: date
          description: The date this application was granted production access at Plaid in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) (YYYY-MM-DD) format in UTC.
        logo_url:
          nullable: true
          type: string
          description: A URL that links to the application logo image.
        application_url:
          nullable: true
          type: string
          description: The URL for the application's website
        reason_for_access:
          nullable: true
          type: string
          description: A string provided by the connected app stating why they use their respective enabled products.
        use_case:
          nullable: true
          type: string
          description: A string representing client’s broad use case as assessed by Plaid.
        company_legal_name:
          nullable: true
          type: string
          description: A string representing the name of client’s legal entity.
        city:
          nullable: true
          type: string
          description: A string representing the city of the client’s headquarters.
        region:
          nullable: true
          type: string
          description: A string representing the region of the client’s headquarters.
        postal_code:
          nullable: true
          type: string
          description: A string representing the postal code of the client’s headquarters.
        country_code:
          nullable: true
          type: string
          description: A string representing the country code of the client’s headquarters.
      required:
      - application_id
      - join_date
      - name
      - display_name
      - logo_url
      - application_url
      - reason_for_access
      - use_case
      - company_legal_name
      - city
      - region
      - postal_code
      - country_code
    ApplicationGetRequest:
      description: ApplicationGetRequest defines the schema for `/application/get`
      type: object
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        application_id:
          $ref: '#/components/schemas/ApplicationID'
      required:
      - client_id
      - secret
      - application_id
    ApplicationGetResponse:
      description: ApplicationGetResponse defines the response schema for `/application/get`
      additionalProperties: true
      type: object
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
        application:
          $ref: '#/components/schemas/Application'
      required:
      - request_id
      - application
    ProductAccess:
      description: The product access being requested. Used to or disallow product access across all accounts. If unset, defaults to all products allowed.
      type: object
      additionalProperties: true
      properties:
        statements:
          description: Allow access to statements. Only used by certain partners. If relevant to the partner and unset, defaults to `true`.
          type: boolean
          nullable: true
          default: true
        identity:
          description: Allow access to the Identity product (name, email, phone, address). Only used by certain partners. If relevant to the partner and unset, defaults to `true`.
          type: boolean
          nullable: true
          default: true
        auth:
          description: Allow access to account number details. Only used by certain partners. If relevant to the partner and unset, defaults to `true`.
          type: boolean
          nullable: true
          default: true
        transactions:
          description: Allow access to transaction details. Only used by certain partners. If relevant to the partner and unset, defaults to `true`.
          type: boolean
          nullable: true
          default: true
        accounts_details_transactions:
          description: Allow access to "accounts_details_transactions". Only used by certain partners. If relevant to the partner and unset, defaults to `true`.
          type: boolean
          nullable: true
          default: true
        accounts_routing_number:
          description: Allow access to "accounts_routing_number". Only used by certain partners. If relevant to the partner and unset, defaults to `true`.
          type: boolean
          nullable: true
          default: true
        accounts_statements:
          description: Allow access to "accounts_statements". Only used by certain partners. If relevant to the partner and unset, defaults to `true`.
          type: boolean
          nullable: true
          default: true
        accounts_tax_statements:
          description: Allow access to "accounts_tax_statements". Only used by certain partners. If relevant to the partner and unset, defaults to `true`.
          type: boolean
          nullable: true
          default: true
        customers_profiles:
          description: Allow access to "customers_profiles". Only used by certain partners. If relevant to the partner and unset, defaults to `true`.
          type: boolean
          nullable: true
          default: true
    AccountAccess:
      description: Allow or disallow product access by account. Unlisted (e.g. missing) accounts will be considered `new_accounts`.
      type: object
      properties:
        unique_id:
          description: The unique account identifier for this account. This value must match that returned by the data access API for this account.
          type: string
        authorized:
          description: Allow the application to see this account (and associated details, including balance) in the list of accounts  If unset, defaults to `true`.
          type: boolean
          nullable: true
          default: true
        account_product_access:
          $ref: '#/components/schemas/AccountProductAccessNullable'
      required:
      - unique_id
    AccountProductAccessNullable:
      nullable: true
      description: Allow the application to access specific products on this account
      allOf:
      - $ref: '#/components/schemas/AccountProductAccess'
      - type: object
        additionalProperties: true
    AccountProductAccess:
      description: Allow the application to access specific products on this account
      type: object
      properties:
        account_data:
          description: Allow the application to access account data. Only used by certain partners. If relevant to the partner and unset, defaults to `true`.
          type: boolean
          nullable: true
          default: true
        statements:
          description: Allow the application to access bank statements. Only used by certain partners. If relevant to the partner and unset, defaults to `true`.
          type: boolean
          nullable: true
          default: true
        tax_documents:
          description: Allow the application to access tax documents. Only used by certain partners. If relevant to the partner and unset, defaults to `true`.
          type: boolean
          nullable: true
          default: true
    ScopesNullable:
      nullable: true
      description: The scopes object
      allOf:
      - $ref: '#/components/schemas/Scopes'
      - type: object
        additionalProperties: true
    Scopes:
      description: The scopes object
      type: object
      properties:
        product_access:
          $ref: '#/components/schemas/ProductAccess'
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/AccountAccess'
        new_accounts:
          description: Allow access to newly opened accounts as they are opened. If unset, defaults to `true`.
          type: boolean
          nullable: true
          default: true
    ScopesState:
      description: When scopes are updated during enrollment, this field must be populated with the state sent to the partner in the OAuth Login URI. This field is required when the context is `ENROLLMENT`.
      type: string
    ScopesContext:
      description: An indicator for when scopes are being updated. When scopes are updated via enrollment (i.e. OAuth), the partner must send `ENROLLMENT`. When scopes are updated in a post-enrollment view, the partner must send `PORTAL`.
      type: string
      enum:
      - ENROLLMENT
      - PORTAL
    ItemApplicationUnlinkRequest:
      description: ItemApplicationUnlinkRequest defines the request schema for `/item/application/unlink/`
      type: object
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        access_token:
          $ref: '#/components/schemas/AccessToken'
        application_id:
          $ref: '#/components/schemas/ApplicationID'
      required:
      - application_id
      - access_token
    ItemApplicationUnlinkResponse:
      description: ItemApplicationUnlinkResponse defines the response schema for `/item/application/unlink`
      additionalProperties: true
      type: object
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - request_id
    ItemApplicationScopesUpdateRequest:
      description: ItemApplicationScopesUpdateRequest defines the request schema for `/item/application/scopes/update`
      type: object
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        access_token:
          $ref: '#/components/schemas/AccessToken'
        application_id:
          $ref: '#/components/schemas/ApplicationID'
        scopes:
          $ref: '#/components/schemas/Scopes'
        state:
          $ref: '#/components/schemas/ScopesState'
        context:
          $ref: '#/components/schemas/ScopesContext'
      required:
      - application_id
      - access_token
      - scopes
      - context
    ItemApplicationScopesUpdateResponse:
      description: ItemApplicationScopesUpdateResponse defines the response schema for `/item/application/scopes/update`
      additionalProperties: true
      type: object
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - request_id
    ItemApplicationListRequest:
      description: Request to list connected applications for a user.
      type: object
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        access_token:
          $ref: '#/components/schemas/AccessTokenNullable'
    ItemApplicationListResponse:
      description: Describes the connected application for a particular end user.
      additionalProperties: true
      type: object
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
        applications:
          type: array
          description: A list of connected applications.
          items:
            $ref: '#/components/schemas/ConnectedApplication'
      required:
      - applications
    ConnectedApplication:
      description: Describes the connected application for a particular end user.
      type: object
      properties:
        application_id:
          $ref: '#/components/schemas/ApplicationID'
        name:
          type: string
          description: The name of the application
        display_name:
          type: string
          nullable: true
          description: A human-readable name of the application for display purposes
        logo_url:
          nullable: true
          type: string
          description: A URL that links to the application logo image.
        application_url:
          nullable: true
          type: string
          description: The URL for the application's website
        reason_for_access:
          nullable: true
          type: string
          description: A string provided by the connected app stating why they use their respective enabled products.
        created_at:
          type: string
          format: date-time
          description: The date this application was linked in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) (YYYY-MM-DD) format in UTC.
          example: "2020-01-01"
        scopes:
          $ref: '#/components/schemas/ScopesNullable'
      required:
      - application_id
      - name
      - created_at
    AccountSelectionCardinality:
      type: string
      description: |-
        The application requires that accounts be limited to a specific cardinality.
        `MULTI_SELECT`: indicates that the user should be allowed to pick multiple accounts.
        `SINGLE_SELECT`: indicates that the user should be allowed to pick only a single account.
        `ALL`: indicates that the user must share all of their accounts and should not be given the opportunity to de-select
      enum:
      - SINGLE_SELECT
      - MULTI_SELECT
      - ALL
    AccountFilter:
      type: object
      description: Enumerates the account subtypes that the application wishes for the user to be able to select from. For more details refer to Plaid documentation on account filters.
      properties:
        depository:
          $ref: '#/components/schemas/AccountFilterSubtypes'
        credit:
          $ref: '#/components/schemas/AccountFilterSubtypes'
        loan:
          $ref: '#/components/schemas/AccountFilterSubtypes'
        investment:
          $ref: '#/components/schemas/AccountFilterSubtypes'
    AccountFilterSubtypes:
      type: array
      description: A list of account subtypes to be filtered.
      items:
        type: string
        description: List of account subtypes.
    ItemActivityListRequest:
      description: Request to list a historical log of user consent events.
      type: object
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        access_token:
          $ref: '#/components/schemas/AccessToken'
        cursor:
          type: string
          description: Cursor used for pagination.
        count:
          type: integer
          minimum: 1
          maximum: 50
          default: 50
    ItemActivityListResponse:
      description: Describes a historical log of user consent events.
      additionalProperties: true
      type: object
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
        activities:
          type: array
          description: A list of activities.
          items:
            $ref: '#/components/schemas/Activity'
        last_data_access_times:
          type: array
          description: An array of objects containing timestamps for the last time each data type was accessed per application.
          items:
            $ref: '#/components/schemas/LastDataAccessTimes'
        cursor:
          type: string
          description: Cursor used for pagination.
      required:
      - activities
      - last_data_access_times
      - request_id
    LastDataAccessTimes:
      description: Describes the last time each datatype was accessed by an application.
      type: object
      additionalProperties: true
      properties:
        application_id:
          type: string
          description: ID of the application accessing data.
        account_balance_info:
          type: string
          nullable: true
          format: date-time
          description: The last time account_balance_info was accessed by this application in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format in UTC. null if never accessed.
          example: "2023-02-08T10:00:00Z"
        account_routing_number:
          type: string
          nullable: true
          format: date-time
          description: The last time account_routing_number was accessed by this application in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format in UTC. null if never accessed.
          example: "2023-02-08T10:00:00Z"
        contact_details:
          type: string
          nullable: true
          format: date-time
          description: The last time contact_details was accessed by this application in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format in UTC. null if never accessed.
          example: "2023-02-08T10:00:00Z"
        transactions:
          type: string
          nullable: true
          format: date-time
          description: The last time transactions was accessed by this application in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format in UTC. null if never accessed.
          example: "2023-02-08T10:00:00Z"
        credit_and_loans:
          type: string
          nullable: true
          format: date-time
          description: The last time credit_and_loans was accessed by this application in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format in UTC. null if never accessed.
          example: "2023-02-08T10:00:00Z"
        investments:
          type: string
          nullable: true
          format: date-time
          description: The last time investments was accessed by this application in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format in UTC. null if never accessed.
          example: "2023-02-08T10:00:00Z"
        payroll_info:
          type: string
          nullable: true
          format: date-time
          description: The last time payroll_info was accessed by this application in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format in UTC. null if never accessed.
          example: "2023-02-08T10:00:00Z"
        transaction_risk_info:
          type: string
          nullable: true
          format: date-time
          description: The last time transaction_risk_info was accessed by this application in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format in UTC. null if never accessed.
          example: "2023-02-08T10:00:00Z"
      required:
      - application_id
      - account_balance_info
      - account_routing_number
      - contact_details
      - transactions
      - credit_and_loans
      - investments
      - payroll_info
      - transaction_risk_info
    Activity:
      description: Describes a consent activity.
      type: object
      properties:
        activity:
          $ref: '#/components/schemas/ActivityType'
        initiated_date:
          type: string
          format: date
          description: The date this activity was initiated [ISO 8601](https://wikipedia.org/wiki/ISO_8601) (YYYY-MM-DD) format in UTC.
          example: "2020-01-01"
        id:
          type: string
          description: A unique identifier for the activity
        initiator:
          type: string
          description: Application ID of the client who initiated the activity.
        state:
          $ref: '#/components/schemas/ActionState'
        target_application_id:
          $ref: '#/components/schemas/ApplicationID'
        scopes:
          $ref: '#/components/schemas/ScopesNullable'
      required:
      - activity
      - initiated_date
      - id
      - initiator
      - state
    ActivityType:
      type: string
      description: Types of consent activities
      enum:
      - UNKNOWN
      - ITEM_CREATE
      - ITEM_IMPORT
      - ITEM_UPDATE
      - ITEM_UNLINK
      - PORTAL_UNLINK
      - PORTAL_ITEMS_DELETE
      - ITEM_REMOVE
      - INVARIANT_CHECKER_DELETION
      - SCOPES_UPDATE
    ActionState:
      type: string
      description: Enum representing the state of the action/activity.
      enum:
      - UNKNOWN
      - ATTEMPT
      - SUCCESS
      - FAILURE
      - SKIPPED
    SandboxIncomeFireWebhookRequest:
      title: SandboxIncomeFireWebhookRequest
      type: object
      description: SandboxIncomeFireWebhookRequest defines the request schema for `/sandbox/income/fire_webhook`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        item_id:
          type: string
          description: The Item ID associated with the verification.
        user_id:
          $ref: '#/components/schemas/UserId'
        webhook:
          type: string
          description: The URL to which the webhook should be sent.
        verification_status:
          type: string
          enum:
          - VERIFICATION_STATUS_PROCESSING_COMPLETE
          - VERIFICATION_STATUS_PROCESSING_FAILED
          - VERIFICATION_STATUS_PENDING_APPROVAL
          description: |-
            `VERIFICATION_STATUS_PROCESSING_COMPLETE`: The income verification status processing has completed. If the user uploaded multiple documents, this webhook will fire when all documents have finished processing. Call the `/income/verification/paystubs/get` endpoint and check the document metadata to see which documents were successfully parsed.

            `VERIFICATION_STATUS_PROCESSING_FAILED`: A failure occurred when attempting to process the verification documentation.

            `VERIFICATION_STATUS_PENDING_APPROVAL`: (deprecated) The income verification has been sent to the user for review.
        webhook_code:
          $ref: '#/components/schemas/SandboxIncomeWebhookFireRequestWebhookCode'
      required:
      - item_id
      - webhook
      - webhook_code
    SandboxIncomeWebhookFireRequestWebhookCode:
      type: string
      enum:
      - INCOME_VERIFICATION
      - INCOME_VERIFICATION_RISK_SIGNALS
      description: The webhook codes that can be fired by this test endpoint.
    SandboxIncomeFireWebhookResponse:
      title: SandboxIncomeFireWebhookResponse
      additionalProperties: true
      type: object
      description: SandboxIncomeFireWebhookResponse defines the response schema for `/sandbox/income/fire_webhook`
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - request_id
    SandboxBankIncomeFireWebhookRequest:
      title: SandboxBankIncomeFireWebhookRequest
      type: object
      description: SandboxBankIncomeFireWebhookRequest defines the request schema for `/sandbox/bank_income/fire_webhook`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        webhook_override:
          type: string
          description: The URL to which the webhook should be sent. If provided, this will override the URL set in the dashboard.
        webhook_code:
          $ref: '#/components/schemas/SandboxBankIncomeWebhookFireRequestWebhookCode'
        webhook_fields:
          $ref: '#/components/schemas/SandboxBankIncomeWebhookFireRequestWebhookFields'
      required:
      - webhook_code
      - webhook_fields
    SandboxBankIncomeWebhookFireRequestWebhookCode:
      type: string
      enum:
      - BANK_INCOME_REFRESH_UPDATE
      - BANK_INCOME_REFRESH_COMPLETE
      description: The webhook codes this endpoint can be used to test
    SandboxBankIncomeWebhookFireRequestWebhookFields:
      type: object
      properties:
        user_id:
          type: string
          description: The user id to be returned in INCOME webhooks
        bank_income_refresh_complete_result:
          $ref: '#/components/schemas/BankIncomeRefreshCompleteResult'
      description: Optional fields which will be populated in the simulated webhook
      required:
      - user_id
    SandboxBankIncomeFireWebhookResponse:
      title: SandboxBankIncomeFireWebhookResponse
      additionalProperties: true
      type: object
      description: SandboxBankIncomeFireWebhookResponse defines the response schema for `/sandbox/bank_income/fire_webhook`
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - request_id
    ItemApplicationListUserAuth:
      type: object
      nullable: true
      description: User authentication parameters, for clients making a request without an `access_token`. This is only allowed for select clients and will not be supported in the future. Most clients should call /item/import to obtain an access token before making a request.
      properties:
        user_id:
          nullable: true
          type: string
          description: Account username.
        fi_username_hash:
          nullable: true
          type: string
          description: Account username hashed by FI.
    TransferAuthorizationPaymentRisk:
      title: TransferAuthorizationPaymentRisk
      description: This object includes the scores and risk level. This response is offered as an add-on to /transfer/authorization/create. To request access to these fields please contact your Plaid account manager.
      type: object
      additionalProperties: true
      nullable: true
      properties:
        bank_initiated_return_score:
          nullable: true
          description: |-
            A score from 1-99 that indicates the transaction return risk: a higher risk score suggests a higher return likelihood.

            The score evaluates the transaction return risk because an account is overdrawn or because an ineligible account is used and covers return codes: "R01", "R02", "R03", "R04", "R06", "R08",  "R09", "R13",
            "R16", "R17", "R20", "R23". These returns have a turnaround time of 2 banking days.
          type: integer
          minimum: 1
          maximum: 99
        customer_initiated_return_score:
          nullable: true
          description: |-
            A score from 1-99 that indicates the transaction return risk: a higher risk score suggests a higher return likelihood.

            The score evaluates the transaction return risk of an unauthorized debit and covers return codes: "R05", "R07", "R10", "R11", "R29".
            These returns typically have a return time frame of up to 60 calendar days. During this period, the customer of financial institutions can dispute a transaction as unauthorized.
          type: integer
          minimum: 1
          maximum: 99
        risk_level:
          $ref: '#/components/schemas/TransferAuthorizationRiskLevel'
        warnings:
          type: array
          description: If bank information was not available to be used in the Signal model, this array contains warnings describing why bank data is missing. If you want to receive an API error instead of Signal scores in the case of missing bank data, file a support ticket or contact your Plaid account manager.
          items:
            $ref: '#/components/schemas/SignalWarning'
      required:
      - bank_initiated_return_score
      - customer_initiated_return_score
      - risk_level
      - warnings
    TransferAuthorizationRiskLevel:
      type: string
      nullable: true
      description: Comprises five risk categories (high risk, medium-high risk, medium risk, medium-low risk, low risk) based on the probability of return
      enum:
      - HIGH_RISK
      - MEDIUM_HIGH_RISK
      - MEDIUM_RISK
      - MEDIUM_LOW_RISK
      - LOW_RISK
    SandboxOauthSelectAccountsRequest:
      title: SandboxOauthSelectAccountsRequest
      type: object
      description: Defines the request schema for `sandbox/oauth/select_accounts`
      properties:
        oauth_state_id:
          type: string
        accounts:
          type: array
          items:
            type: string
      required:
      - oauth_state_id
      - accounts
    SandboxOauthSelectAccountsResponse:
      title: SandboxOauthSelectAccountsResponse
      additionalProperties: true
      type: object
      description: Defines the response schema for `/sandbox/oauth/select_accounts`
    NewAccountsAvailableWebhook:
      title: NewAccountsAvailableWebhook
      type: object
      description: Fired when Plaid detects a new account for Items created or updated with [Account Select v2](https://plaid.com/docs/link/customization/#account-select). Upon receiving this webhook, you can prompt your users to share new accounts with you through [Account Select v2 update mode](https://plaid.com/docs/link/update-mode/#using-update-mode-to-request-new-accounts).
      x-examples:
        example-1:
          webhook_type: ITEM
          webhook_code: NEW_ACCOUNTS_AVAILABLE
          item_id: gAXlMgVEw5uEGoQnnXZ6tn9E7Mn3LBc4PJVKZ
          error: null
          environment: production
      properties:
        webhook_type:
          type: string
          description: '`ITEM`'
        webhook_code:
          type: string
          description: '`NEW_ACCOUNTS_AVAILABLE`'
        item_id:
          $ref: '#/components/schemas/ItemId'
        error:
          $ref: '#/components/schemas/PlaidError'
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
    WalletCreateRequest:
      type: object
      description: WalletCreateRequest defines the request schema for `/wallet/create`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        iso_currency_code:
          $ref: '#/components/schemas/WalletISOCurrencyCode'
      required:
      - iso_currency_code
    WalletCreateResponse:
      type: object
      additionalProperties: true
      description: WalletCreateResponse defines the response schema for `/wallet/create`
      allOf:
      - $ref: '#/components/schemas/Wallet'
      - type: object
        properties:
          request_id:
            $ref: '#/components/schemas/RequestID'
      required:
      - wallet_id
      - balance
      - request_id
    WalletGetRequest:
      type: object
      description: WalletGetRequest defines the request schema for `/wallet/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        wallet_id:
          type: string
          description: The ID of the e-wallet
          minLength: 1
      required:
      - wallet_id
    WalletGetResponse:
      type: object
      additionalProperties: true
      description: WalletGetResponse defines the response schema for `/wallet/get`
      allOf:
      - $ref: '#/components/schemas/Wallet'
      - type: object
        properties:
          request_id:
            $ref: '#/components/schemas/RequestID'
      required:
      - wallet_id
      - balance
      - request_id
    WalletListRequest:
      type: object
      description: WalletListRequest defines the request schema for `/wallet/list`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        iso_currency_code:
          $ref: '#/components/schemas/WalletISOCurrencyCode'
        cursor:
          type: string
          maxLength: 256
          description: A base64 value representing the latest e-wallet that has already been requested. Set this to `next_cursor` received from the previous `/wallet/list` request. If provided, the response will only contain e-wallets created before that e-wallet. If omitted, the response will contain e-wallets starting from the most recent, and in descending order.
        count:
          type: integer
          description: The number of e-wallets to fetch
          minimum: 1
          maximum: 20
          default: 10
    WalletListResponse:
      type: object
      additionalProperties: true
      description: WalletListResponse defines the response schema for `/wallet/list`
      properties:
        wallets:
          type: array
          description: An array of e-wallets
          items:
            $ref: '#/components/schemas/Wallet'
        next_cursor:
          type: string
          description: Cursor used for fetching e-wallets created before the latest e-wallet provided in this response
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - wallets
      - request_id
    Wallet:
      title: Wallet
      type: object
      additionalProperties: true
      description: An object representing the e-wallet
      properties:
        wallet_id:
          type: string
          description: A unique ID identifying the e-wallet
        balance:
          $ref: '#/components/schemas/WalletBalance'
        numbers:
          $ref: '#/components/schemas/WalletNumbers'
        recipient_id:
          type: string
          description: The ID of the recipient that corresponds to the e-wallet account numbers
        status:
          $ref: '#/components/schemas/WalletStatus'
      required:
      - wallet_id
      - balance
      - numbers
      - status
    WalletNumbers:
      title: WalletNumbers
      type: object
      additionalProperties: true
      description: An object representing the e-wallet account numbers
      properties:
        bacs:
          $ref: '#/components/schemas/RecipientBACS'
        international:
          $ref: '#/components/schemas/NumbersInternationalIBAN'
    WalletBalance:
      title: WalletBalance
      type: object
      additionalProperties: true
      description: An object representing the e-wallet balance
      properties:
        iso_currency_code:
          type: string
          description: The ISO-4217 currency code of the balance
        current:
          type: number
          format: double
          description: The total amount of funds in the account
        available:
          type: number
          format: double
          description: The total amount of funds in the account after subtracting pending debit transaction amounts
      required:
      - iso_currency_code
      - current
      - available
    WalletISOCurrencyCode:
      type: string
      title: ISO Currency Code
      enum:
      - GBP
      - EUR
      description: An ISO-4217 currency code, used with e-wallets and transactions.
      minLength: 3
      maxLength: 3
    WalletStatus:
      type: string
      enum:
      - UNKNOWN
      - ACTIVE
      - CLOSED
      description: |-
        The status of the wallet.

        `UNKNOWN`: The wallet status is unknown.

        `ACTIVE`: The wallet is active and ready to send money to and receive money from.

        `CLOSED`: The wallet is closed. Any transactions made to or from this wallet will error.
    WalletTransactionExecuteRequest:
      type: object
      description: WalletTransactionExecuteRequest defines the request schema for `/wallet/transaction/execute`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        idempotency_key:
          $ref: '#/components/schemas/WalletTransactionIdempotencyKey'
        wallet_id:
          type: string
          description: The ID of the e-wallet to debit from
          minLength: 1
        counterparty:
          $ref: '#/components/schemas/WalletTransactionCounterparty'
        amount:
          $ref: '#/components/schemas/WalletTransactionAmount'
        reference:
          type: string
          maxLength: 18
          minLength: 6
          description: |-
            A reference for the transaction. This must be an alphanumeric string with 6 to 18 characters and must not contain any special characters or spaces.
            Ensure that the `reference` field is unique for each transaction.
      required:
      - idempotency_key
      - wallet_id
      - counterparty
      - amount
      - reference
    WalletTransactionIdempotencyKey:
      title: WalletTransactionIdempotencyKey
      type: string
      maxLength: 128
      minLength: 1
      description: |-
        A random key provided by the client, per unique wallet transaction. Maximum of 128 characters.

        The API supports idempotency for safely retrying requests without accidentally performing the same operation twice. If a request to execute a wallet transaction fails due to a network connection error, then after a minimum delay of one minute, you can retry the request with the same idempotency key to guarantee that only a single wallet transaction is created. If the request was successfully processed, it will prevent any transaction that uses the same idempotency key, and was received within 24 hours of the first request, from being processed.
    WalletTransactionCounterparty:
      title: WalletTransactionCounterparty
      type: object
      additionalProperties: true
      description: An object representing the e-wallet transaction's counterparty
      properties:
        name:
          type: string
          description: The name of the counterparty
          minLength: 1
        numbers:
          $ref: '#/components/schemas/WalletTransactionCounterpartyNumbers'
        address:
          $ref: '#/components/schemas/PaymentInitiationAddress'
        date_of_birth:
          type: string
          format: date
          nullable: true
          description: The counterparty's birthdate, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) (YYYY-MM-DD) format.
      required:
      - name
      - numbers
    WalletTransactionCounterpartyNumbers:
      title: WalletTransactionCounterpartyNumbers
      additionalProperties: true
      type: object
      description: The counterparty's bank account numbers. Exactly one of IBAN or BACS data is required.
      properties:
        bacs:
          $ref: '#/components/schemas/WalletTransactionCounterpartyBACS'
        international:
          $ref: '#/components/schemas/WalletTransactionCounterpartyInternational'
    WalletTransactionCounterpartyBACS:
      description: The account number and sort code of the counterparty's account
      allOf:
      - $ref: '#/components/schemas/RecipientBACS'
      - type: object
        additionalProperties: true
    WalletTransactionCounterpartyInternational:
      description: International Bank Account Number for a Wallet Transaction
      type: object
      nullable: true
      additionalProperties: true
      properties:
        iban:
          $ref: '#/components/schemas/NumbersIBAN'
    WalletTransactionAmount:
      title: WalletTransactionAmount
      type: object
      additionalProperties: true
      properties:
        iso_currency_code:
          $ref: '#/components/schemas/WalletISOCurrencyCode'
        value:
          type: number
          format: double
          minimum: 0.01
          description: The amount of the transaction. Must contain at most two digits of precision e.g. `1.23`.
      required:
      - iso_currency_code
      - value
      description: The amount and currency of a transaction
    WalletTransactionExecuteResponse:
      type: object
      additionalProperties: true
      description: WalletTransactionExecuteResponse defines the response schema for `/wallet/transaction/execute`
      properties:
        transaction_id:
          type: string
          description: A unique ID identifying the transaction
        status:
          $ref: '#/components/schemas/WalletTransactionStatus'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - transaction_id
      - status
      - request_id
    WalletTransactionStatus:
      type: string
      enum:
      - AUTHORISING
      - INITIATED
      - EXECUTED
      - SETTLED
      - BLOCKED
      - FAILED
      description: |-
        The status of the transaction.

        `AUTHORISING`: The transaction is being processed for validation and compliance.

        `INITIATED`: The transaction has been initiated and is currently being processed.

        `EXECUTED`: The transaction has been successfully executed and is considered complete. This is only applicable for debit transactions.

        `SETTLED`: The transaction has settled and funds are available for use. This is only applicable for credit transactions. A transaction will typically settle within seconds to several days, depending on which payment rail is used.

        `FAILED`: The transaction failed to process successfully. This is a terminal status.

        `BLOCKED`: The transaction has been blocked for violating compliance rules. This is a terminal status.
    WalletTransactionFailureReason:
      type: string
      nullable: true
      description: |-
        The error code of a failed transaction. Error codes include:
        `EXTERNAL_SYSTEM`: The transaction was declined by an external system.
        `EXPIRED`: The transaction request has expired.
        `CANCELLED`: The transaction request was rescinded.
        `INVALID`: The transaction did not meet certain criteria, such as an inactive account or no valid counterparty, etc.
        `UNKNOWN`: The transaction was unsuccessful, but the exact cause is unknown.
      enum:
      - EXTERNAL_SYSTEM
      - EXPIRED
      - CANCELLED
      - INVALID
      - UNKNOWN
    WalletTransactionGetRequest:
      type: object
      description: WalletTransactionGetRequest defines the request schema for `/wallet/transaction/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        transaction_id:
          type: string
          description: The ID of the transaction to fetch
          minLength: 1
      required:
      - transaction_id
    WalletTransactionGetResponse:
      title: WalletTransactionGetResponse
      type: object
      additionalProperties: true
      description: WalletTransactionGetResponse defines the response schema for `/wallet/transaction/get`
      allOf:
      - $ref: '#/components/schemas/WalletTransaction'
      - type: object
        properties:
          request_id:
            $ref: '#/components/schemas/RequestID'
      required:
      - transaction_id
      - reference
      - type
      - amount
      - counterparty
      - status
      - created_at
      - request_id
    WalletTransactionListRequest:
      type: object
      description: WalletTransactionListRequest defines the request schema for `/wallet/transaction/list`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        wallet_id:
          type: string
          description: The ID of the e-wallet to fetch transactions from
          minLength: 1
        cursor:
          type: string
          maxLength: 256
          description: A base64 value representing the latest transaction that has already been requested. Set this to `next_cursor` received from the previous `/wallet/transaction/list` request. If provided, the response will only contain transactions created before that transaction. If omitted, the response will contain transactions starting from the most recent, and in descending order by the `created_at` time.
        count:
          type: integer
          description: The number of transactions to fetch
          minimum: 1
          maximum: 200
          default: 10
        options:
          $ref: '#/components/schemas/WalletTransactionListRequestOptions'
      required:
      - wallet_id
    WalletTransactionsListRequest:
      type: object
      description: WalletTransactionListRequest defines the request schema for `/wallet/transaction/list`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        wallet_id:
          type: string
          description: The ID of the e-wallet to fetch transactions from
          minLength: 1
        cursor:
          type: string
          maxLength: 256
          description: A base64 value representing the latest transaction that has already been requested. Set this to `next_cursor` received from the previous `/wallet/transaction/list` request. If provided, the response will only contain transactions created before that transaction. If omitted, the response will contain transactions starting from the most recent, and in descending order by the `created_at` time.
        count:
          type: integer
          description: The number of transactions to fetch
          minimum: 1
          maximum: 200
          default: 10
        options:
          $ref: '#/components/schemas/WalletTransactionListRequestOptions'
      required:
      - wallet_id
    WalletTransactionListRequestOptions:
      type: object
      description: Additional wallet transaction options
      nullable: true
      properties:
        start_time:
          type: string
          description: Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DDThh:mm:ssZ) for filtering transactions, inclusive of the provided date.
          format: date-time
        end_time:
          type: string
          description: Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DDThh:mm:ssZ) for filtering transactions, inclusive of the provided date.
          format: date-time
    WalletTransactionListResponse:
      type: object
      additionalProperties: true
      description: WalletTransactionListResponse defines the response schema for `/wallet/transaction/list`
      properties:
        transactions:
          type: array
          description: An array of transactions of an e-wallet, associated with the given `wallet_id`
          items:
            $ref: '#/components/schemas/WalletTransaction'
        next_cursor:
          type: string
          description: Cursor used for fetching transactions created before the latest transaction provided in this response
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - transactions
      - request_id
    WalletTransaction:
      title: WalletTransaction
      type: object
      additionalProperties: true
      properties:
        transaction_id:
          type: string
          description: A unique ID identifying the transaction
        wallet_id:
          type: string
          description: The EMI (E-Money Institution) wallet that this payment is associated with, if any. This wallet is used as an intermediary account to enable Plaid to reconcile the settlement of funds for Payment Initiation requests.
        reference:
          type: string
          description: A reference for the transaction
        type:
          type: string
          enum:
          - BANK_TRANSFER
          - PAYOUT
          - PIS_PAY_IN
          - REFUND
          - FUNDS_SWEEP
          - RETURN
          description: |-
            The type of the transaction. The supported transaction types that are returned are:
            `BANK_TRANSFER:` a transaction which credits an e-wallet through an external bank transfer.

            `PAYOUT:` a transaction which debits an e-wallet by disbursing funds to a counterparty.

            `PIS_PAY_IN:` a payment which credits an e-wallet through Plaid's Payment Initiation Services (PIS) APIs. For more information see the [Payment Initiation endpoints](https://plaid.com/docs/api/products/payment-initiation/).

            `REFUND:` a transaction which debits an e-wallet by refunding a previously initiated payment made through Plaid's [PIS APIs](https://plaid.com/docs/api/products/payment-initiation/).

            `FUNDS_SWEEP`: an automated transaction which debits funds from an e-wallet to a designated client-owned account.

            `RETURN`: an automated transaction where a debit transaction was reversed and money moved back to originating account.
        scheme:
          $ref: '#/components/schemas/WalletPaymentScheme'
        amount:
          $ref: '#/components/schemas/WalletTransactionAmount'
        counterparty:
          $ref: '#/components/schemas/WalletTransactionCounterparty'
        status:
          $ref: '#/components/schemas/WalletTransactionStatus'
        created_at:
          type: string
          description: Timestamp when the transaction was created, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.
          format: date-time
        last_status_update:
          format: date-time
          type: string
          description: The date and time of the last time the `status` was updated, in IS0 8601 format
        payment_id:
          type: string
          nullable: true
          description: The payment id that this transaction is associated with, if any. This is present only for transaction types `PIS_PAY_IN` and `REFUND`.
        failure_reason:
          $ref: '#/components/schemas/WalletTransactionFailureReason'
      required:
      - transaction_id
      - wallet_id
      - reference
      - type
      - amount
      - counterparty
      - status
      - created_at
      - last_status_update
      description: The transaction details
    TransactionsEnhanceGetRequest:
      type: object
      description: TransactionsEnhanceGetRequest defines the request schema for `/transactions/enhance`.
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        account_type:
          type: string
          description: The type of account for the requested transactions (`depository` or `credit`).
        transactions:
          type: array
          description: An array of raw transactions to be enhanced.
          items:
            $ref: '#/components/schemas/ClientProvidedRawTransaction'
      required:
      - account_type
      - transactions
    TransactionsEnrichRequest:
      type: object
      description: TransactionsEnrichRequest defines the request schema for `/transactions/enrich`.
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        account_type:
          type: string
          description: The account type for the requested transactions (either `depository` or `credit`).
        transactions:
          type: array
          description: An array of transaction objects to be enriched by Plaid. Maximum of 100 transactions per request.
          items:
            $ref: '#/components/schemas/ClientProvidedTransaction'
        options:
          $ref: '#/components/schemas/TransactionsEnrichRequestOptions'
      required:
      - account_type
      - transactions
    TransactionsEnrichRequestOptions:
      type: object
      description: An optional object to be used with the request.
      properties:
        include_legacy_category:
          type: boolean
          default: false
          description: |-
            Include `legacy_category` and `legacy_category_id` in the response (in addition to the default `personal_finance_category`).

            Categories are based on Plaid's legacy taxonomy. For a full list of legacy categories, see [`/categories/get`](https://plaid.com/docs/api/products/transactions/#categoriesget).
    ClientProvidedTransaction:
      title: ClientProvidedTransaction
      type: object
      description: A client-provided transaction for Plaid to enrich.
      additionalProperties: true
      properties:
        id:
          type: string
          description: A unique ID for the transaction used to help you tie data back to your systems.
        client_user_id:
          x-hidden-from-docs: true
          type: string
          description: A unique user id used to group transactions for a given user, as a unique identifier from your application. Personally identifiable information, such as an email address or phone number, should not be used in the client_user_id.
        client_account_id:
          x-hidden-from-docs: true
          type: string
          description: A unique account id used to group transactions for a given account, as a unique identifier from your application. Personally identifiable information, such as an email address or phone number, should not be used in the client_account_id.
        account_type:
          x-hidden-from-docs: true
          type: string
          description: The account type associated with the transaction. For a full list of valid types and subtypes, see the [Account schema](https://plaid.com/docs/api/accounts#account-type-schema).
        account_subtype:
          x-hidden-from-docs: true
          type: string
          description: The account subtype associated with the transaction. For a full list of valid types and subtypes, see the [Account schema](https://plaid.com/docs/api/accounts#account-type-schema).
        description:
          type: string
          description: The raw description of the transaction. If you have location data in available an unstructured format, it may be appended to the `description` field.
        amount:
          type: number
          format: double
          description: The absolute value of the transaction (>= 0). When testing Enrich, note that `amount` data should be realistic. Unrealistic or inaccurate `amount` data may result in reduced quality output.
        direction:
          $ref: '#/components/schemas/EnrichTransactionDirection'
        iso_currency_code:
          type: string
          description: The ISO-4217 currency code of the transaction e.g. USD.
        location:
          $ref: '#/components/schemas/ClientProvidedTransactionLocation'
        mcc:
          type: string
          description: Merchant category codes (MCCs) are four-digit numbers that describe a merchant's primary business activities.
        date_posted:
          type: string
          format: date
          description: The date the transaction posted, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) (YYYY-MM-DD) format.
      required:
      - id
      - description
      - amount
      - direction
      - iso_currency_code
    EnrichTransactionDirection:
      title: EnrichTransactionDirection
      type: string
      enum:
      - INFLOW
      - OUTFLOW
      description: |-
        The direction of the transaction from the perspective of the account holder:

        `OUTFLOW` - Includes outgoing transfers, purchases, and fees. (Typically represented as a negative value on checking accounts and debit cards and a positive value on credit cards.)

        `INFLOW` - Includes incoming transfers, refunds, and income. (Typically represented as a positive value on checking accounts and debit cards and a negative value on credit cards.)
    ClientProvidedTransactionLocation:
      title: ClientProvidedTransactionLocation
      type: object
      description: |-
        A representation of where a transaction took place.

        Use this field to pass in structured location information you may have about your transactions. Providing location data is optional but can increase result quality. If you have unstructured location information, it may be appended to the `description` field.
      additionalProperties: true
      properties:
        country:
          type: string
          description: The country where the transaction occurred.
        region:
          type: string
          description: The region or state where the transaction occurred.
        city:
          type: string
          description: The city where the transaction occurred.
        address:
          type: string
          description: The street address where the transaction occurred.
        postal_code:
          type: string
          description: The postal code where the transaction occurred.
    ClientProvidedRawTransaction:
      title: ClientProvidedRawTransaction
      type: object
      description: A client-provided transaction for Plaid to enhance.
      additionalProperties: true
      properties:
        id:
          type: string
          description: A unique ID for the transaction used to help you tie data back to your systems.
        description:
          type: string
          description: The raw description of the transaction.
        amount:
          type: number
          format: double
          description: |-
            The value of the transaction with direction. (NOTE: this will affect enrichment results, so directions are important):.
              Negative (-) for credits (e.g., incoming transfers, refunds)
              Positive (+) for debits (e.g., purchases, fees, outgoing transfers)
        iso_currency_code:
          type: string
          description: The ISO-4217 currency code of the transaction e.g. USD.
      required:
      - id
      - description
      - amount
      - iso_currency_code
    TransactionsEnhanceGetResponse:
      type: object
      description: TransactionsEnhanceGetResponse defines the response schema for `/beta/transactions/v1/enhance`.
      x-examples: {}
      additionalProperties: true
      properties:
        enhanced_transactions:
          type: array
          description: An array of enhanced transactions.
          items:
            $ref: '#/components/schemas/ClientProvidedEnhancedTransaction'
      required:
      - enhanced_transactions
    TransactionsEnrichResponse:
      type: object
      description: TransactionsEnrichResponse defines the response schema for `/transactions/enrich`.
      x-examples: {}
      additionalProperties: true
      properties:
        enriched_transactions:
          type: array
          description: A list of enriched transactions.
          items:
            $ref: '#/components/schemas/ClientProvidedEnrichedTransaction'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - enriched_transactions
    ClientProvidedEnhancedTransaction:
      title: ClientProvidedEnhancedTransaction
      type: object
      description: A client-provided transaction that Plaid has enhanced.
      x-examples: {}
      additionalProperties: true
      properties:
        id:
          type: string
          description: Unique transaction identifier to tie transactions back to clients' systems.
        description:
          type: string
          description: The raw description of the transaction.
        amount:
          type: number
          format: double
          description: The value of the transaction, denominated in the account's currency, as stated in `iso_currency_code`. Positive values when money moves out of the account; negative values when money moves in. For example, debit card purchases are positive; credit card payments, direct deposits, and refunds are negative.
        iso_currency_code:
          type: string
          description: The ISO-4217 currency code of the transaction.
        enhancements:
          $ref: '#/components/schemas/Enhancements'
      required:
      - id
      - description
      - amount
      - iso_currency_code
      - enhancements
    ClientProvidedEnrichedTransaction:
      title: ClientProvidedEnrichedTransaction
      type: object
      description: A client-provided transaction that Plaid has enriched.
      x-examples: {}
      additionalProperties: true
      properties:
        id:
          type: string
          description: The unique ID for the transaction as provided by you in the request.
        client_user_id:
          x-hidden-from-docs: true
          type: string
          description: A unique user id used to group transactions for a given user, as a unique identifier from your application. Personally identifiable information, such as an email address or phone number, should not be used in the client_user_id.
        client_account_id:
          x-hidden-from-docs: true
          type: string
          description: A unique account id used to group transactions for a given account, as a unique identifier from your application. Personally identifiable information, such as an email address or phone number, should not be used in the client_account_id.
        account_type:
          x-hidden-from-docs: true
          type: string
          description: The account type associated with the transaction. For a full list of valid types and subtypes, see the [Account schema](https://plaid.com/docs/api/accounts#account-type-schema).
        account_subtype:
          x-hidden-from-docs: true
          type: string
          description: The account subtype associated with the transaction. For a full list of valid types and subtypes, see the [Account schema](https://plaid.com/docs/api/accounts#account-type-schema).
        description:
          type: string
          description: The raw description of the transaction.
        amount:
          type: number
          format: double
          description: The absolute value of the transaction (>= 0)
        direction:
          $ref: '#/components/schemas/EnrichTransactionDirection'
        iso_currency_code:
          type: string
          description: The ISO-4217 currency code of the transaction e.g. USD.
        enrichments:
          $ref: '#/components/schemas/Enrichments'
      required:
      - id
      - description
      - amount
      - iso_currency_code
      - enrichments
    PaymentChannel:
      title: Transaction Payment Channel
      type: string
      enum:
      - online
      - in store
      - other
      description: |-
        The channel used to make a payment.
        `online:` transactions that took place online.

        `in store:` transactions that were made at a physical location.

        `other:` transactions that relate to banks, e.g. fees or deposits.
    Enhancements:
      title: Enhancements
      type: object
      description: A grouping of the Plaid produced transaction enhancement fields.
      additionalProperties: true
      properties:
        merchant_name:
          type: string
          description: The name of the primary counterparty, such as the merchant or the financial institution, as extracted by Plaid from the raw description.
          nullable: true
        website:
          type: string
          description: The website associated with this transaction, if available.
          nullable: true
        logo_url:
          type: string
          description: The URL of a logo associated with this transaction, if available. The logo will always be 100×100 pixel PNG file.
          nullable: true
        check_number:
          type: string
          description: The check number of the transaction. This field is only populated for check transactions.
          nullable: true
        payment_channel:
          $ref: '#/components/schemas/PaymentChannel'
        category_id:
          description: The ID of the category to which this transaction belongs. For a full list of categories, see [`/categories/get`](https://plaid.com/docs/api/products/transactions/#categoriesget).
          type: string
          nullable: true
        category:
          type: array
          description: A hierarchical array of the categories to which this transaction belongs. For a full list of categories, see [`/categories/get`](https://plaid.com/docs/api/products/transactions/#categoriesget).
          items:
            type: string
        location:
          $ref: '#/components/schemas/Location'
        personal_finance_category:
          $ref: '#/components/schemas/PersonalFinanceCategory'
        personal_finance_category_icon_url:
          type: string
          description: The URL of an icon associated with the primary personal finance category. The icon will always be 100×100 pixel PNG file.
        counterparties:
          type: array
          description: The counterparties present in the transaction. Counterparties, such as the merchant or the financial institution, are extracted by Plaid from the raw description.
          items:
            $ref: '#/components/schemas/Counterparty'
      required:
      - payment_channel
      - location
      - category
      - category_id
    Enrichments:
      title: Enrichments
      type: object
      description: A grouping of the Plaid produced transaction enrichment fields.
      additionalProperties: true
      properties:
        check_number:
          x-hidden-from-docs: true
          type: string
          description: The check number of the transaction. This field is only populated for check transactions.
          nullable: true
        counterparties:
          type: array
          description: The counterparties present in the transaction. Counterparties, such as the merchant or the financial institution, are extracted by Plaid from the raw description.
          items:
            $ref: '#/components/schemas/Counterparty'
        entity_id:
          type: string
          description: A unique, stable, Plaid-generated ID that maps to the primary counterparty.
          nullable: true
        legacy_category_id:
          deprecated: true
          description: |-
            The ID of the legacy category to which this transaction belongs. For a full list of legacy categories, see [`/categories/get`](https://plaid.com/docs/api/products/transactions/#categoriesget).

            We recommend using the `personal_finance_category` for transaction categorization to obtain the best results.
          type: string
          nullable: true
        legacy_category:
          deprecated: true
          type: array
          description: |-
            A hierarchical array of the legacy categories to which this transaction belongs. For a full list of legacy categories, see [`/categories/get`](https://plaid.com/docs/api/products/transactions/#categoriesget).

            We recommend using the `personal_finance_category` for transaction categorization to obtain the best results.
          items:
            type: string
        location:
          $ref: '#/components/schemas/Location'
        logo_url:
          type: string
          description: The URL of a logo associated with this transaction, if available. The logo will always be 100×100 pixel PNG file.
          nullable: true
        merchant_name:
          type: string
          description: The name of the primary counterparty, such as the merchant or the financial institution, as extracted by Plaid from the raw description.
          nullable: true
        payment_channel:
          $ref: '#/components/schemas/PaymentChannel'
        phone_number:
          type: string
          description: The phone number associated with the primary_counterparty in E. 164 format. If there is a location match (i.e. a street address is returned in the location object), the phone number will be location specific.
          nullable: true
        personal_finance_category:
          $ref: '#/components/schemas/PersonalFinanceCategory'
        personal_finance_category_icon_url:
          type: string
          description: The URL of an icon associated with the primary personal finance category. The icon will always be 100×100 pixel PNG file.
        recurrence:
          $ref: '#/components/schemas/Recurrence'
        website:
          type: string
          description: The website associated with this transaction.
          nullable: true
      required:
      - payment_channel
      - location
      - personal_finance_category
      - personal_finance_category_icon_url
      - logo_url
      - website
      - counterparties
      - merchant_name
      - phone_number
    Recurrence:
      title: Recurrence
      nullable: true
      type: object
      description: |-
        Insights relating to expenses and deposits that are predicted to occur on a scheduled basis, such as biweekly, monthly, or annually.

        Common examples include loan payments, bill payments, subscriptions, and payroll income.

        This is a beta field, available to all users.
      additionalProperties: true
      properties:
        is_recurring:
          type: boolean
          description: Whether or not the transaction is periodically recurring.
          nullable: true
        frequency:
          $ref: '#/components/schemas/RecurringFrequency'
    RecurringFrequency:
      type: string
      title: RecurringFrequency
      nullable: true
      enum:
      - UNKNOWN
      - WEEKLY
      - BIWEEKLY
      - SEMI_MONTHLY
      - MONTHLY
      - ANNUALLY
      - DAILY
      - DYNAMIC
      - null
      description: |-
        Describes the frequency of the transaction stream.

        `WEEKLY`: Assigned to a transaction stream that occurs approximately every week.

        `BIWEEKLY`: Assigned to a transaction stream that occurs approximately every 2 weeks.

        `SEMI_MONTHLY`: Assigned to a transaction stream that occurs approximately twice per month. This frequency is typically seen for inflow transaction streams.

        `MONTHLY`: Assigned to a transaction stream that occurs approximately every month.

        `ANNUALLY`: Assigned to a transaction stream that occurs approximately every year.

        `DAILY`: Assigned to a transaction stream that occurs approximately every day.

        `DYNAMIC`: Assigned to a transaction stream that varies in recurrence frequency. This frequency is typically seen for inflow streams in the gig economy.

        `UNKNOWN`: Assigned to a transaction stream that isn't recurring in nature.
    TransactionsUserInsightsGetRequest:
      type: object
      description: TransactionsUserInsightsGetRequest defines the request schema for `/beta/transactions/user_insights/v1/get`.
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        client_user_id:
          type: string
          description: A unique client-provided user_id to retrieve insights for.
      required:
      - client_user_id
    TransactionsUserInsightsGetResponse:
      type: object
      description: TransactionsUserInsightsGetResponse defines the response schema for `/beta/transactions/user_insights/v1/get`.
      additionalProperties: true
      properties:
        user_data_overview:
          $ref: '#/components/schemas/UserDataOverview'
        counterparty_insights:
          $ref: '#/components/schemas/CounterpartyInsights'
        category_insights:
          $ref: '#/components/schemas/CategoryInsights'
        recurring_transactions:
          $ref: '#/components/schemas/RecurringTransactions'
      required:
      - user_data_overview
    UserDataOverview:
      type: object
      description: metadata for the set of insights provided in `TransactionsUserInsightsGetResponse`
      additionalProperties: true
      properties:
        transaction_count:
          type: integer
          description: The total number of transactions.
        oldest_transaction_date:
          type: string
          format: date
          description: The date of the oldest transaction processed to generate insights.
        newest_transaction_date:
          type: string
          format: date
          description: The date of the newest transaction processed to generate insights.
        days_available:
          type: integer
          description: The range of days of transactions available.
        total_outflows:
          type: number
          format: double
          description: Sum of outflow amounts.
        total_inflows:
          type: number
          format: double
          description: Sum of inflow amounts.
      required:
      - transaction_count
      - days_available
      - total_outflows
      - total_inflows
    CounterpartyInsights:
      type: object
      description: Insights around a user's counterparties
      additionalProperties: true
      properties:
        financial_institution_insights:
          type: array
          description: Insights related to a user’s transactions with other financial institutions, including detected account types.
          items:
            $ref: '#/components/schemas/FinancialInstitutionInsights'
        merchant_insights:
          type: array
          description: Insights about a user’s top merchants, ranked by spend.
          items:
            $ref: '#/components/schemas/MerchantInsights'
    FinancialInstitutionInsights:
      type: object
      description: Insights surrounding external financial institution counterparties associated with a user.
      properties:
        name:
          type: string
          description: Name of the financial institution counterparty.
        entity_id:
          type: string
          nullable: true
          description: A unique, stable, Plaid-generated id that maps to the counterparty.
        website:
          type: string
          nullable: true
          description: The website associated with the counterparty.
        detected_accounts:
          type: array
          description: Associated accounts, detected based on the nature of transfers to/from this institution.
          items:
            $ref: '#/components/schemas/DetectedAccount'
      required:
      - name
      - website
      - detected_accounts
    DetectedAccount:
      type: object
      description: A possible account detected to be associated with a transaction user.
      additionalProperties: true
      properties:
        account_type:
          type: string
          description: The detected account type (depository, credit, loan, investment etc.).
          nullable: true
        account_subtype:
          type: string
          description: The detected subtype of the account, based on the transactions to/from the institution.
          nullable: true
        transaction_count:
          type: integer
          description: The number of transactions associated with this detected account type at this financial institution.
        oldest_transaction_date:
          type: string
          format: date
          description: The date of the oldest transaction associated with this detected account type at this financial institution.
        newest_transaction_date:
          type: string
          format: date
          description: The date of the newest transaction associated with this detected account type at this financial institution.
        newest_transaction_amount:
          type: number
          format: double
          description: Amount of the most recent transaction associated with this detected account type at this financial institution.
        total_outflows:
          type: number
          format: double
          description: Sum of outflow amounts associated with this detected account type at this financial institution.
        total_inflows:
          type: number
          format: double
          description: Sum of inflow amounts associated with this detected account type at this financial institution.
      required:
      - account_type
      - account_subtype
      - transaction_count
      - total_outflows
      - total_inflows
    MerchantInsights:
      type: object
      description: Insights into a user’s top merchants.
      properties:
        name:
          type: string
          description: The counterparty name.
        entity_id:
          type: string
          nullable: true
          description: A unique, stable, Plaid-generated id that maps to the merchant.
        website:
          type: string
          nullable: true
          description: The website associated with the merchant.
        transaction_count:
          type: integer
          description: The number of transactions associated with merchant of this type.
        personal_finance_category_primary:
          type: string
          nullable: true
          description: The primary personal finance category associated with this merchant.
        personal_finance_category_detailed:
          type: string
          nullable: true
          description: The detailed personal finance category associated with this merchant.
        total_outflows:
          type: number
          format: double
          description: Sum of outflow amounts.
        total_inflows:
          type: number
          format: double
          description: Sum of inflow amounts.
      required:
      - name
      - website
      - transaction_count
      - personal_finance_category_primary
      - personal_finance_category_detailed
      - total_outflows
      - total_inflows
    CategoryInsights:
      type: object
      description: Insights on a user's top personal finance categories.
      additionalProperties: true
      properties:
        primary_category_insights:
          type: array
          description: List of insights of top primary personal finance categories ranked by outflow.
          items:
            $ref: '#/components/schemas/CategoryInsightDetails'
        detailed_category_insights:
          type: array
          description: List of insights of top detailed personal finance categories ranked by outflow.
          items:
            $ref: '#/components/schemas/CategoryInsightDetails'
    CategoryInsightDetails:
      type: object
      description: Insights object for categories.
      additionalProperties: true
      properties:
        name:
          type: string
          description: Category name.
        transaction_count:
          type: integer
          description: The number of transactions associated with this category.
        total_outflows:
          type: number
          format: double
          description: Sum of outflow amounts.
        total_inflows:
          type: number
          format: double
          description: Sum of inflow amounts.
        top_counterparties:
          type: array
          description: The most common counterparties associated with this category sorted by outflow.
          items:
            type: string
      required:
      - name
      - transaction_count
      - total_outflows
      - total_inflows
    RecurringTransactions:
      type: object
      description: Insights object for recurring transactions for `/beta/transactions/user_insights/v1/get` endpoint
      additionalProperties: true
      properties:
        inflow_streams:
          type: array
          description: An array of inflow transaction streams (e.g., income).
          items:
            $ref: '#/components/schemas/RecurringInsightsStream'
        outflow_streams:
          type: array
          description: An array of outflow transaction streams (e.g., subscriptions, bills, loan payments).
          items:
            $ref: '#/components/schemas/RecurringInsightsStream'
      required:
      - inflow_streams
      - outflow_streams
    RecurringInsightsStream:
      type: object
      description: Insights object for recurring transactions streams.
      additionalProperties: true
      properties:
        stream_id:
          type: string
          description: A unique id for the stream.
        description:
          type: string
          description: The client-provided raw description of the most recent transaction in the stream.
        merchant_name:
          type: string
          description: The merchant or primary counterparty associated with the transaction stream.
        oldest_transaction_date:
          type: string
          format: date
          description: The posted date of the earliest transaction in the stream.
        newest_transaction_date:
          type: string
          format: date
          description: The posted date of the latest transaction in the stream.
        average_days_apart:
          type: number
          format: double
          description: The average number of days between each of the recurring transactions.
        frequency:
          $ref: '#/components/schemas/RecurringTransactionFrequency'
        transaction_count:
          type: integer
          description: The number of transactions in this stream.
        transaction_ids:
          type: array
          description: An array of Plaid transaction IDs belonging to the stream, sorted by posted date.
          items:
            type: string
        average_amount:
          $ref: '#/components/schemas/TransactionStreamAmount'
        newest_transaction_amount:
          $ref: '#/components/schemas/TransactionStreamAmount'
        is_active:
          type: boolean
          description: Indicates whether the transaction stream is still live.
        status:
          $ref: '#/components/schemas/TransactionStreamStatus'
        personal_finance_category_primary:
          type: string
          description: The primary category associated with the transaction stream.
        personal_finance_category_detailed:
          type: string
          description: The detailed category associated with the transaction stream.
      required:
      - stream_id
      - merchant_name
      - average_days_apart
      - is_active
    PaymentProfileCreateRequest:
      type: object
      description: PaymentProfileCreateRequest defines the request schema for `/payment_profile/create`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
    PaymentProfileCreateResponse:
      type: object
      additionalProperties: true
      description: PaymentProfileCreateResponse defines the response schema for `/payment_profile/create`
      properties:
        payment_profile_token:
          $ref: '#/components/schemas/PaymentProfileToken'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - payment_profile_token
      - request_id
    PaymentProfileToken:
      type: string
      title: PaymentProfileToken
      description: A payment profile token associated with the Payment Profile data that is being requested.
      x-hidden-from-docs: true
    PaymentProfileGetRequest:
      type: object
      description: PaymentProfileGetRequest defines the request schema for `/payment_profile/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        payment_profile_token:
          $ref: '#/components/schemas/PaymentProfileToken'
      required:
      - payment_profile_token
    PaymentProfileGetResponse:
      type: object
      additionalProperties: true
      description: PaymentProfileGetResponse defines the response schema for `/payment_profile/get`
      properties:
        updated_at:
          type: string
          format: date-time
          description: Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (`YYYY-MM-DDTHH:mm:ssZ`) indicating the last time the given Payment Profile was updated at
        created_at:
          type: string
          format: date-time
          description: Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (`YYYY-MM-DDTHH:mm:ssZ`) indicating the time the given Payment Profile was created at
        deleted_at:
          type: string
          nullable: true
          format: date-time
          description: Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (`YYYY-MM-DDTHH:mm:ssZ`) indicating the time the given Payment Profile was deleted at. Always `null` if the Payment Profile has not been deleted
        status:
          $ref: '#/components/schemas/PaymentProfileStatus'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - request_id
      - status
      - created_at
      - updated_at
      - deleted_at
    PaymentProfileStatus:
      type: string
      enum:
      - PENDING
      - READY
      - REMOVED
      description: |-
        The status of the given Payment Profile.

        `READY`: This Payment Profile is ready to be used to create transfers using `/transfer/authorization/create` and `/transfer/create`.

        `PENDING`: This Payment Profile is not ready to be used. You’ll need to call `/link/token/create` and provide the `payment_profile_token` in the `transfer.payment_profile_token` field to initiate the account linking experience.

        `REMOVED`: This Payment Profile has been removed.
    PaymentProfileRemoveRequest:
      type: object
      description: PaymentProfileRemoveRequest defines the request schema for `/payment_profile/remove`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        payment_profile_token:
          $ref: '#/components/schemas/PaymentProfileToken'
      required:
      - payment_profile_token
    PaymentProfileRemoveResponse:
      type: object
      additionalProperties: true
      description: PaymentProfileRemoveResponse defines the response schema for `/payment_profile/remove`
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - request_id
    PartnerCustomerCreateRequest:
      description: Request schema for `/partner/customer/create`.
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        company_name:
          description: The company name of the end customer being created. This will be used to display the end customer in the Plaid Dashboard. It will not be shown to end users.
          type: string
        is_diligence_attested:
          description: Denotes whether or not the partner has completed attestation of diligence for the end customer to be created.
          type: boolean
        products:
          description: The products to be enabled for the end customer. If empty or `null`, this field will default to the products enabled for the reseller at the time this endpoint is called.
          type: array
          items:
            $ref: '#/components/schemas/Products'
          x-override-enum-values-shown:
          - assets
          - auth
          - balance
          - identity
          - income_verification
          - investments
          - liabilities
          - transactions
          - employment
        create_link_customization:
          description: If `true`, the end customer's default Link customization will be set to match the partner's. You can always change the end customer's Link customization in the Plaid Dashboard. See the [Link Customization docs](https://plaid.com/docs/link/customization/) for more information.
          type: boolean
        logo:
          description: Base64-encoded representation of the end customer's logo. Must be a PNG of size 1024x1024 under 4MB. The logo will be shared with financial institutions and shown to the end user during Link flows. A logo is required if `create_link_customization` is `true`. If `create_link_customization` is `false` and the logo is omitted, the partner's logo will be used if one exists, otherwise a stock logo will be used.
          type: string
        legal_entity_name:
          description: The end customer's legal name. This will be shared with financial institutions as part of the OAuth registration process. It will not be shown to end users.
          type: string
        website:
          description: The end customer's website.
          type: string
        application_name:
          description: The name of the end customer's application. This will be shown to end users when they go through the Plaid Link flow.
          type: string
        technical_contact:
          $ref: '#/components/schemas/PartnerEndCustomerTechnicalContact'
        billing_contact:
          $ref: '#/components/schemas/PartnerEndCustomerBillingContact'
        customer_support_info:
          $ref: '#/components/schemas/PartnerEndCustomerCustomerSupportInfo'
        address:
          $ref: '#/components/schemas/PartnerEndCustomerAddress'
        is_bank_addendum_completed:
          description: Denotes whether the partner has forwarded the Plaid bank addendum to the end customer.
          type: boolean
        assets_under_management:
          $ref: '#/components/schemas/PartnerEndCustomerAssetsUnderManagement'
        redirect_uris:
          description: A list of URIs indicating the destination(s) where a user can be forwarded after completing the Link flow; used to support OAuth authentication flows when launching Link in the browser or via a webview. URIs should not contain any query parameters. When used in Production or Development, URIs must use https. To specify any subdomain, use `*` as a wildcard character, e.g. `https://*.example.com/oauth.html`. To modify redirect URIs for an end customer after creating them, go to the end customer's [API page](https://dashboard.plaid.com/team/api) in the Dashboard.
          type: array
          items:
            type: string
        registration_number:
          description: The unique identifier assigned to a financial institution by regulatory authorities, if applicable. For banks, this is the FDIC Certificate Number. For credit unions, this is the Credit Union Charter Number.
          type: string
      required:
      - company_name
      - is_diligence_attested
      - legal_entity_name
      - website
      - application_name
      - address
      - is_bank_addendum_completed
    PartnerCustomerCreateResponse:
      description: Response schema for `/partner/customer/create`.
      type: object
      additionalProperties: true
      properties:
        end_customer:
          $ref: '#/components/schemas/PartnerEndCustomerWithSecrets'
        request_id:
          $ref: '#/components/schemas/RequestID'
    PartnerCustomerGetRequest:
      description: Request schema for `/partner/customer/get`.
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        end_customer_client_id:
          type: string
      required:
      - end_customer_client_id
    PartnerCustomerGetResponse:
      description: Response schema for `/partner/customer/get`.
      type: object
      additionalProperties: true
      properties:
        end_customer:
          $ref: '#/components/schemas/PartnerEndCustomer'
        request_id:
          $ref: '#/components/schemas/RequestID'
    PartnerCustomerEnableRequest:
      description: Request schema for `/partner/customer/enable`.
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        end_customer_client_id:
          type: string
      required:
      - end_customer_client_id
    PartnerCustomerEnableResponse:
      description: Response schema for `/partner/customer/enable`.
      type: object
      additionalProperties: true
      properties:
        production_secret:
          description: The end customer's secret key for the Production environment.
          type: string
        request_id:
          $ref: '#/components/schemas/RequestID'
    PartnerCustomerRemoveRequest:
      description: Request schema for `/partner/customer/remove`.
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        end_customer_client_id:
          type: string
          description: The `client_id` of the end customer to be removed.
      required:
      - end_customer_client_id
    PartnerCustomerRemoveResponse:
      description: Response schema for `/partner/customer/remove`.
      type: object
      additionalProperties: true
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
    PartnerCustomerOAuthInstitutionsGetRequest:
      description: Request schema for `/partner/customer/oauth_institutions/get`.
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        end_customer_client_id:
          type: string
      required:
      - end_customer_client_id
    PartnerCustomerOAuthInstitutionsGetResponse:
      description: Response schema for `/partner/customer/oauth_institutions/get`.
      type: object
      additionalProperties: true
      properties:
        flowdown_status:
          $ref: '#/components/schemas/PartnerEndCustomerFlowdownStatus'
        questionnaire_status:
          $ref: '#/components/schemas/PartnerEndCustomerQuestionnaireStatus'
        institutions:
          type: array
          description: The OAuth institutions with which the end customer's application is being registered.
          items:
            $ref: '#/components/schemas/PartnerEndCustomerOAuthInstitution'
        request_id:
          $ref: '#/components/schemas/RequestID'
    PartnerEndCustomerFlowdownStatus:
      type: string
      enum:
      - NOT_STARTED
      - IN_REVIEW
      - NEGOTIATION
      - COMPLETE
      description: The status of the addendum to the Plaid MSA ("flowdown") for the end customer.
    PartnerEndCustomerQuestionnaireStatus:
      type: string
      enum:
      - NOT_STARTED
      - RECEIVED
      - COMPLETE
      description: The status of the end customer's security questionnaire.
    PartnerEndCustomerOAuthInstitution:
      description: The OAuth registration information for an institution.
      type: object
      additionalProperties: true
      properties:
        name:
          type: string
        institution_id:
          type: string
        environments:
          $ref: '#/components/schemas/PartnerEndCustomerOAuthInstitutionEnvironments'
        production_enablement_date:
          type: string
          description: The date on which the end customer's application was approved by the institution, or an empty string if their application has not yet been approved.
          nullable: true
        classic_disablement_date:
          type: string
          description: The date on which non-OAuth Item adds will no longer be supported for this institution, or an empty string if no such date has been set by the institution.
          nullable: true
    PartnerEndCustomerOAuthInstitutionEnvironments:
      description: Registration statuses by environment.
      type: object
      additionalProperties: true
      properties:
        development:
          $ref: '#/components/schemas/PartnerEndCustomerOAuthInstitutionApplicationStatus'
        production:
          $ref: '#/components/schemas/PartnerEndCustomerOAuthInstitutionApplicationStatus'
    PartnerEndCustomerOAuthInstitutionApplicationStatus:
      type: string
      enum:
      - NOT_STARTED
      - PROCESSING
      - APPROVED
      - ENABLED
      - ATTENTION_REQUIRED
      description: The registration status for the end customer's application.
    PartnerEndCustomer:
      description: The details for an end customer.
      type: object
      additionalProperties: true
      properties:
        client_id:
          type: string
          description: The `client_id` of the end customer.
        company_name:
          type: string
          description: The company name associated with the end customer.
        status:
          $ref: '#/components/schemas/PartnerEndCustomerStatus'
    PartnerEndCustomerWithSecrets:
      description: The details for the newly created end customer, including secrets for non-Production environments.
      type: object
      additionalProperties: true
      allOf:
      - $ref: '#/components/schemas/PartnerEndCustomer'
      - type: object
        properties:
          secrets:
            $ref: '#/components/schemas/PartnerEndCustomerSecrets'
    PartnerEndCustomerStatus:
      type: string
      enum:
      - UNDER_REVIEW
      - PENDING_ENABLEMENT
      - ACTIVE
      - DENIED
      description: |-
        The status of the given end customer.

        `UNDER_REVIEW`: The end customer has been created and enabled in the non-Production environments. The end customer must be manually reviewed by the Plaid team before it can be enabled in production, at which point its status will automatically transition to `PENDING_ENABLEMENT` or `DENIED`.

        `PENDING_ENABLEMENT`: The end customer is ready to be enabled in the Production environment. Call the `/partner/customer/enable` endpoint to enable the end customer in Production.

        `ACTIVE`: The end customer has been enabled in all environments.

        `DENIED`: The end customer has been created and enabled in the non-Production environments, but it did not pass review by the Plaid team and therefore cannot be enabled in the Production environment. Talk to your Account Manager for more information.
    PartnerEndCustomerSecrets:
      description: The secrets for the newly created end customer in non-Production environments.
      type: object
      additionalProperties: true
      properties:
        sandbox:
          description: The end customer's secret key for the Sandbox environment.
          type: string
        development:
          description: The end customer's secret key for the Development environment.
          type: string
    PartnerEndCustomerTechnicalContact:
      description: The technical contact for the end customer. Defaults to partner's technical contact if omitted.
      type: object
      additionalProperties: true
      properties:
        given_name:
          type: string
        family_name:
          type: string
        email:
          type: string
    PartnerEndCustomerCustomerSupportInfo:
      description: This information is public. Users of your app will see this information when managing connections between your app and their bank accounts in Plaid Portal. Defaults to partner's customer support info if omitted.
      type: object
      additionalProperties: true
      properties:
        email:
          type: string
        phone_number:
          type: string
        contact_url:
          type: string
        link_update_url:
          type: string
    PartnerEndCustomerAssetsUnderManagement:
      description: Assets under management for the given end customer. Required for end customers with monthly service commitments.
      type: object
      additionalProperties: true
      properties:
        amount:
          type: number
          format: double
        iso_currency_code:
          type: string
      required:
      - amount
      - iso_currency_code
    PartnerEndCustomerBillingContact:
      description: The billing contact for the end customer. Defaults to partner's billing contact if omitted.
      type: object
      additionalProperties: true
      properties:
        given_name:
          type: string
        family_name:
          type: string
        email:
          type: string
    PartnerEndCustomerAddress:
      description: The end customer's address.
      type: object
      additionalProperties: true
      properties:
        city:
          type: string
        street:
          type: string
        region:
          type: string
        postal_code:
          type: string
        country_code:
          description: ISO-3166-1 alpha-2 country code standard.
          type: string
    LinkDeliverySessionStatus:
      type: string
      enum:
      - CREATED
      - OPENED
      - EXITED
      - COMPLETED
      - EXPIRED
      description: |-
        The status of the given Hosted Link session.

        `CREATED`: The session is created but not yet accessed by the user

        `OPENED`: The session is opened by the user but not yet completed

        `EXITED`: The session has been exited by the user

        `COMPLETED`: The session has been completed by the user

        `EXPIRED`: The session has expired
    LinkDeliveryDeliveryMethod:
      type: string
      enum:
      - SMS
      - EMAIL
      description: |-
        The delivery method to be used to deliver the Hosted Link session URL.

        `SMS`: The URL will be delivered through SMS

        `EMAIL`: The URL will be delivered through email
    LinkDeliveryCommunicationMethod:
      type: object
      description: The communication method containing both the type and address to send the URL.
      properties:
        method:
          $ref: '#/components/schemas/LinkDeliveryDeliveryMethod'
        address:
          type: string
          description: The phone number / email address that Hosted Link sessions are delivered to. Phone numbers must be in E.164 format.
    LinkDeliveryRecipient:
      type: object
      description: Metadata related to the recipient. If the information required to populate this field is not available, leave it blank.
      properties:
        communication_methods:
          type: array
          items:
            $ref: '#/components/schemas/LinkDeliveryCommunicationMethod'
          description: The list of communication methods to send the Hosted Link session URL to. If delivery is not required, leave this field blank.
        first_name:
          type: string
          description: First name of the recipient. Will be used in the body of the email / text (if configured). If this information is not available, leave this field blank.
    LinkDeliveryOptions:
      type: object
      description: Optional metadata related to the Hosted Link session
      properties:
        recipient:
          $ref: '#/components/schemas/LinkDeliveryRecipient'
    LinkDeliveryCreateRequest:
      type: object
      description: LinkDeliveryCreateRequest defines the request schema for `/link_delivery/create`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        link_token:
          type: string
          description: A `link_token` from a previous invocation of `/link/token/create`.
        options:
          $ref: '#/components/schemas/LinkDeliveryOptions'
      required:
      - link_token
    LinkDeliveryCreateResponse:
      type: object
      additionalProperties: true
      description: LinkDeliveryCreateResponse defines the response schema for `/link_delivery/create`
      properties:
        link_delivery_url:
          type: string
          description: The URL to the Hosted Link session, which will be delivered by the specified delivery method.
        link_delivery_session_id:
          type: string
          description: The ID for the Hosted Link session. Same as the `link_token` string excluding the "link-{env}-" prefix.
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - link_delivery_url
      - link_delivery_session_id
      - request_id
    LinkDeliveryGetRequest:
      type: object
      description: LinkDeliveryGetRequest defines the request schema for `/link_delivery/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        link_delivery_session_id:
          type: string
          description: The ID for the Hosted Link session from a previous invocation of `/link_delivery/create`.
      required:
      - link_delivery_session_id
    LinkDeliveryGetResponse:
      type: object
      additionalProperties: true
      description: LinkDeliveryGetRequest defines the response schema for `/link_delivery/get`
      properties:
        status:
          $ref: '#/components/schemas/LinkDeliverySessionStatus'
        created_at:
          type: string
          format: date-time
          description: Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (`YYYY-MM-DDTHH:mm:ssZ`) indicating the time the given Hosted Link session was created at.
        completed_at:
          type: string
          format: date-time
          nullable: true
          description: Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (`YYYY-MM-DDTHH:mm:ssZ`) indicating the time the given Hosted Link session was completed at.
        request_id:
          $ref: '#/components/schemas/RequestID'
        access_tokens:
          type: array
          items:
            $ref: '#/components/schemas/AccessToken'
          nullable: true
          description: An array of access tokens associated with the Hosted Link session.
        item_ids:
          type: array
          items:
            $ref: '#/components/schemas/ItemId'
          nullable: true
          description: An array of `item_id`s associated with the Hosted Link session.
      required:
      - status
      - created_at
      - request_id
    LinkUserDeliveryStatusWebhook:
      title: LinkUserDeliveryStatusWebhook
      x-hidden-from-docs: true
      description: Webhook indicating that the status of the delivery of the Hosted Link session to a user
      type: object
      additionalProperties: true
      properties:
        webhook_type:
          type: string
          description: '`LINK_DELIVERY`'
        webhook_code:
          type: string
          description: '`DELIVERY_STATUS`'
        link_delivery_session_id:
          type: string
          description: The ID of the Hosted Link session.
        timestamp:
          type: string
          description: Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.
        link_delivery_metadata:
          $ref: '#/components/schemas/LinkDeliveryMetadata'
      required:
      - webhook_type
      - webhook_code
      - link_delivery_session_id
      - timestamp
      - link_delivery_metadata
      x-examples: {}
    LinkDeliveryCallbackWebhook:
      title: LinkDeliveryCallbackWebhook
      x-hidden-from-docs: true
      description: Webhook containing metadata proxied over from Link callback e.g `onEvent`, `onExit`, `onSuccess`.
      type: object
      additionalProperties: true
      properties:
        webhook_type:
          type: string
          description: '`LINK_DELIVERY`'
        webhook_code:
          type: string
          description: '`LINK_CALLBACK`'
        link_delivery_session_id:
          type: string
          description: The ID of the Hosted Link session.
        timestamp:
          type: string
          description: Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.
        error:
          $ref: '#/components/schemas/PlaidError'
        link_callback_metadata:
          $ref: '#/components/schemas/LinkCallbackMetadata'
      required:
      - webhook_type
      - webhook_code
      - link_delivery_session_id
      - timestamp
      - link_callback_metadata
      x-examples: {}
    CreditCategory:
      title: CreditCategory
      nullable: true
      type: object
      additionalProperties: true
      description: |-
        Information describing the intent of the transaction. Most relevant for credit use cases, but not limited to such use cases.

        See the [`taxonomy csv file`](https://plaid.com/documents/credit-category-taxonomy.csv) for a full list of credit categories.
      properties:
        primary:
          type: string
          description: A high level category that communicates the broad category of the transaction.
        detailed:
          type: string
          description: A granular category conveying the transaction's intent. This field can also be used as a unique identifier for the category.
      required:
      - primary
      - detailed
    UserAccountRevokedWebhook:
      title: UserAccountRevokedWebhook
      type: object
      additionalProperties: true
      description: The `USER_ACCOUNT_REVOKED` webhook is fired when an end user has revoked access to their account on the Data Provider's portal. The user can restore access to the revoked account by regranting permissions on the Data Provider's portal. This webhook is currently in beta. It will be available in GA in Jan 2024.
      x-examples:
        example-1:
          webhook_type: '`ITEM`'
          webhook_code: USER_ACCOUNT_REVOKED
          error:
            error_code: ACCESS_NOT_GRANTED
            error_message: the user has revoked the account permissions for your application to access it
            error_type: ITEM_ERROR
            status: 400
          item_id: gAXlMgVEw5uEGoQnnXZ6tn9E7Mn3LBc4PJVKZ
          account_id: BxBXxLj1m4HMXBm9WZJyUg9XLd4rKEhw8Pb1J
          environment: production
      properties:
        webhook_type:
          type: string
          description: '`ITEM`'
        webhook_code:
          type: string
          description: '`USER_ACCOUNT_REVOKED`'
        item_id:
          $ref: '#/components/schemas/ItemId'
        account_id:
          type: string
          description: The external account ID of the affected account
        error:
          $ref: '#/components/schemas/PlaidError'
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - item_id
      - account_id
      - environment
    StatementsRefreshCompleteWebhook:
      type: object
      title: StatementsRefreshCompleteWebhook
      description: Fired when refreshed statements extraction is completed or failed to be completed. Triggered by calling `/statements/refresh`.
      additionalProperties: true
      properties:
        webhook_type:
          type: string
          description: '`STATEMENTS`'
        webhook_code:
          type: string
          description: '`STATEMENTS_REFRESH_COMPLETE`'
        item_id:
          type: string
          description: The Plaid Item ID. The `item_id` is always unique; linking the same account at the same institution twice will result in two Items with different `item_id` values. Like all Plaid identifiers, the `item_id` is case-sensitive.
        result:
          $ref: '#/components/schemas/StatementsRefreshCompleteResult'
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - item_id
      - result
      - environment
      x-examples:
        example-1:
          webhook_type: STATEMENTS
          webhook_code: STATEMENTS_REFRESH_COMPLETE
          item_id: eVBnVMp7zdTJLkRNr33Rs6zr7KNJqBFL9DrE6
          result: SUCCESS
          environment: production
    StatementsRefreshCompleteResult:
      type: string
      enum:
      - SUCCESS
      - FAILURE
      description: |-
        The result of the statement refresh extraction

        `SUCCESS`: The statements were successfully extracted and can be listed via `/statements/list/` and downloaded via `/statements/download/`.

        `FAILURE`: The statements failed to be extracted.
    BaseReportsProductReadyWebhook:
      title: BaseReportsProductReadyWebhook
      type: object
      x-hidden-from-docs: true
      additionalProperties: true
      description: Fired when the Base Report has been generated and `/cra/base_report/get` is ready to be called.  If you attempt to retrieve a Base Report before this webhook has fired, you’ll receive a response with the HTTP status code 400 and a Plaid error code of `PRODUCT_NOT_READY`.
      properties:
        webhook_type:
          type: string
          description: '`BASE_REPORT`'
        webhook_code:
          type: string
          description: '`PRODUCT_READY`'
        user_id:
          type: string
          description: The `user_id` corresponding to the User ID the webhook has fired for.
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - user_id
      - environment
      x-examples:
        example-1:
          webhook_type: BASE_REPORT
          webhook_code: PRODUCT_READY
          user_id: wz666MBjYWTp2PDzzggYhM6oWWmBb
    BaseReportsErrorWebhook:
      title: BaseReportsErrorWebhook
      type: object
      x-hidden-from-docs: true
      additionalProperties: true
      description: Fired when Base Report generation has failed. The resulting `error` will have an `error_type` of `BASE_REPORT_ERROR`.
      x-examples:
        example-1:
          webhook_type: BASE_REPORT
          webhook_code: ERROR
          user_id: wz666MBjYWTp2PDzzggYhM6oWWmBb
          error:
            display_message: null
            error_code: PRODUCT_NOT_ENABLED
            error_message: 'The following products are not supported by this institution: Identity'
            error_type: BASE_REPORT_ERROR
            request_id: m8MDnv9okwxFNBV
      properties:
        webhook_type:
          type: string
          description: '`BASE_REPORT`'
        webhook_code:
          type: string
          description: '`ERROR`'
        error:
          $ref: '#/components/schemas/PlaidError'
        user_id:
          type: string
          description: The `user_id` corresponding to the User ID the webhook has fired for.
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - error
      - user_id
      - environment
    CraBankIncomeCompleteWebhook:
      type: object
      title: CraBankIncomeCompleteWebhook
      description: Fired when a bank income report has finished generating or failed to generate, triggered by calling `/cra/bank_income/get`.
      additionalProperties: true
      properties:
        webhook_type:
          type: string
          description: '`CRA_INCOME`'
        webhook_code:
          type: string
          description: '`BANK_INCOME_COMPLETE`'
        user_id:
          type: string
          description: The `user_id` corresponding to the user the webhook has fired for.
        result:
          $ref: '#/components/schemas/CraBankIncomeCompleteResult'
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - user_id
      - result
      - environment
      x-examples:
        example-1:
          webhook_type: CRA_INCOME
          webhook_code: BANK_INCOME_COMPLETE
          user_id: wz666MBjYWTp2PDzzggYhM6oWWmBb
          result: SUCCESS
          environment: production
    CraBankIncomeCompleteResult:
      type: string
      enum:
      - SUCCESS
      - FAILURE
      description: |-
        The result of the bank income report generation

        `SUCCESS`: The bank income report was successfully generated and can be retrieved via `/cra/bank_income/get`.

        `FAILURE`: The bank income report failed to be generated
    BankIncomeCompleteWebhook:
      type: object
      title: BankIncomeCompleteWebhook
      description: Fired when a bank income report has finished generating or failed to generate, triggered by calling `/credit/bank_income/get` in CRA enabled client.
      additionalProperties: true
      properties:
        webhook_type:
          type: string
          description: '`INCOME`'
        webhook_code:
          type: string
          description: '`BANK_INCOME_COMPLETE`'
        user_id:
          type: string
          description: The `user_id` corresponding to the user the webhook has fired for.
        result:
          $ref: '#/components/schemas/BankIncomeCompleteResult'
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - user_id
      - result
      - environment
      x-examples:
        example-1:
          webhook_type: INCOME
          webhook_code: BANK_INCOME_COMPLETE
          user_id: wz666MBjYWTp2PDzzggYhM6oWWmBb
          result: SUCCESS
          environment: production
    BankIncomeCompleteResult:
      type: string
      enum:
      - SUCCESS
      - FAILURE
      description: |-
        The result of the bank income report generation

        `SUCCESS`: The bank income report was successfully generated and can be retrieved via `/credit/bank_income/get`.

        `FAILURE`: The bank income report failed to be generated
    IncomeVerificationRefreshReconnectNeededWebhook:
      type: object
      title: IncomeVerificationRefreshReconnectNeededWebhook
      description: Fired when the attempt to refresh Payroll Income data for a user via `/credit/payroll_income/refresh` failed because the user must re-connect their payroll account.
      additionalProperties: true
      properties:
        webhook_type:
          type: string
          description: '`INCOME`'
        webhook_code:
          type: string
          description: '`INCOME_VERIFICATION_REFRESH_RECONNECT_NEEDED`'
        user_id:
          type: string
          description: The `user_id` corresponding to the user the webhook has fired for.
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - user_id
      - environment
      x-examples:
        example-1:
          webhook_type: INCOME
          webhook_code: INCOME_VERIFICATION_REFRESH_RECONNECT_NEEDED
          user_id: wz666MBjYWTp2PDzzggYhM6oWWmBb
          environment: production
    BankIncomeRefreshUpdateWebhook:
      type: object
      title: BankIncomeRefreshUpdateWebhook
      description: Fired when a change to the user's income is detected. You should call `/credit/bank_income/refresh` to get updated income data for the user. To receive this webhook, subscribe in the [Dashboard](https://dashboard.plaid.com/developers/webhooks).
      additionalProperties: true
      properties:
        webhook_type:
          type: string
          description: '`INCOME`'
        webhook_code:
          type: string
          description: '`BANK_INCOME_REFRESH_UPDATE`'
        user_id:
          type: string
          description: The `user_id` corresponding to the user the webhook has fired for.
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - user_id
      - environment
      x-examples:
        example-1:
          webhook_type: INCOME
          webhook_code: BANK_INCOME_REFRESH_UPDATE
          user_id: wz666MBjYWTp2PDzzggYhM6oWWmBb
          environment: production
    BankIncomeRefreshCompleteWebhook:
      type: object
      title: BankIncomeRefreshCompleteWebhook
      description: Fired when a refreshed bank income report has finished generating or failed to generate, triggered by calling `/credit/bank_income/refresh`. To get this webhook, subscribe via the [Dashboard](https://dashboard.plaid.com/developers/webhooks).
      additionalProperties: true
      properties:
        webhook_type:
          type: string
          description: '`INCOME`'
        webhook_code:
          type: string
          description: '`BANK_INCOME_REFRESH_COMPLETE`'
        user_id:
          type: string
          description: The `user_id` corresponding to the user the webhook has fired for.
        result:
          $ref: '#/components/schemas/BankIncomeRefreshCompleteResult'
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - user_id
      - result
      - environment
      x-examples:
        example-1:
          webhook_type: INCOME
          webhook_code: BANK_INCOME_REFRESH_COMPLETE
          user_id: wz666MBjYWTp2PDzzggYhM6oWWmBb
          result: SUCCESS
          environment: production
    BankIncomeRefreshCompleteResult:
      type: string
      enum:
      - SUCCESS
      - FAILURE
      description: |-
        The result of the bank income refresh report generation

        `SUCCESS`: The refreshed report was successfully generated and can be retrieved via `/credit/bank_income/get`.

        `FAILURE`: The refreshed report failed to be generated
    LinkEventMetadata:
      type: object
      title: LinkEventMetadata
      description: Metadata about an event that occured while the user was going through Link
      x-hidden-from-docs: true
      additionalProperties: true
      properties:
        error_code:
          type: string
          description: The error code that the user encountered. Emitted by `ERROR`, `EXIT`.
        error_message:
          type: string
          description: 'The error message that the user encountered. Emitted by: `ERROR`, `EXIT`.'
        error_type:
          type: string
          description: 'The error type that the user encountered. Emitted by: `ERROR`, `EXIT`.'
        exit_status:
          type: string
          description: 'The status key indicates the point at which the user exited the Link flow. Emitted by: `EXIT`.'
        institution_id:
          type: string
          description: 'The ID of the selected institution. Emitted by: all events.'
        institution_name:
          type: string
          description: 'The name of the selected institution. Emitted by: all events.'
        institution_search_query:
          type: string
          description: 'The query used to search for institutions. Emitted by: `SEARCH_INSTITUTION`.'
        request_id:
          type: string
          description: 'The request ID for the last request made by Link. This can be shared with Plaid Support to expedite investigation. Emitted by: all events.'
        mfa_type:
          type: string
          description: 'If set, the user has encountered one of the following MFA types: code, device, questions, selections. Emitted by: `SUBMIT_MFA` and `TRANSITION_VIEW` when view_name is `MFA`.'
        view_name:
          type: string
          description: 'The name of the view that is being transitioned to. Emitted by: `TRANSITION_VIEW`.'
        selection:
          type: string
          description: 'Either the verification method for a matched institution selected by the user or the Auth Type Select flow type selected by the user. If selection is used to describe selected verification method, then possible values are `phoneotp` or `password`;  if selection is used to describe the selected Auth Type Select flow, then possible values are `flow_type_manual` or `flow_type_instant`. Emitted by: `MATCHED_SELECT_VERIFY_METHOD` and `SELECT_AUTH_TYPE`.'
        brand_name:
          type: string
          description: The name of the selected brand.
        match_reason:
          type: string
          description: 'The reason this institution was matched, which will be either `returning_user` or `routing_number`. Emitted by: `MATCHED_SELECT_INSTITUTION`.'
        routing_number:
          type: string
          description: The routing number submitted by user at the micro-deposits routing number pane. Emitted by `SUBMIT_ROUTING_NUMBER`.
        account_number_mask:
          type: string
          description: The account number mask extracted from the user-provided account number. If the user-inputted account number is four digits long, `account_number_mask` is empty. Emitted by `SUBMIT_ACCOUNT_NUMBER`.
      required:
      - request_id
    LinkEvent:
      type: object
      title: LinkEvent
      x-hidden-from-docs: true
      description: An event that occurred while the user was going through Link
      additionalProperties: true
      properties:
        event_name:
          type: string
          description: Event name
        timestamp:
          type: string
          description: Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.
        event_id:
          type: string
          description: UUID that can be used to deduplicate events
      required:
      - event_id
      - timestamp
      - event_name
      - event_metdata
    LinkEventsWebhook:
      x-hidden-from-docs: true
      title: LinkEventsWebhook
      type: object
      additionalProperties: true
      description: Contains a summary of the events from a link session
      properties:
        webhook_type:
          type: string
          description: '`LINK`'
        webhook_code:
          type: string
          description: '`EVENTS`'
        events:
          type: array
          description: The link events emitted during the link session
          items:
            $ref: '#/components/schemas/LinkEvent'
        link_session_id:
          type: string
          description: An identifier for the link session these events occurred in
        link_token:
          type: string
          description: The link token used to create the link session these events are from
      required:
      - webhook_type
      - webhook_code
      - events
      - link_session_id
      - link_token
    LinkSessionFinishedWebhook:
      title: LinkSessionFinishedWebhook
      type: object
      additionalProperties: true
      description: Contains the state of a completed Link session, along with the public token if available.
      properties:
        webhook_type:
          type: string
          description: '`LINK`'
        webhook_code:
          type: string
          description: '`SESSION_FINISHED`'
        status:
          type: string
          description: The final status of the Link session. Will always be "SUCCESS" or "EXITED".
        link_session_id:
          type: string
          description: The identifier for the Link session.
        link_token:
          type: string
          description: The link token used to create the Link session.
        public_token:
          type: string
          description: The public token generated by the Link session.
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - status
      - link_session_id
      - link_token
      - environment
      x-examples:
        example-1:
          webhook_type: LINK
          webhook_code: SESSION_FINISHED
          status: SUCCESS
          link_session_id: 356dbb28-7f98-44d1-8e6d-0cec580f3171
          link_token: link-sandbox-af1a0311-da53-4636-b754-dd15cc058176
          public_token: public-sandbox-b0e2c4ee-a763-4df5-bfe9-46a46bce993d
          environment: sandbox
    HostedMMDVerificationWebhook:
      x-hidden-from-docs: true
      title: HostedMMDVerificationWebhook
      type: object
      additionalProperties: true
      description: Contains the state of a hosted same-day microdeposits verification session.
      properties:
        webhook_type:
          type: string
          description: '`AUTH`'
        webhook_code:
          type: string
          description: '`HOSTED_VERIFICATION`'
        status:
          type: string
          description: The final status of the same-day microdeposits verification. Will always be "MANUALLY_VERIFIED" or "VERIFICATION_FAILED".
        item_id:
          $ref: '#/components/schemas/ItemId'
        account_id:
          type: string
          description: The external account ID of the affected account
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - status
      - item_id
      - account_id
    InstitutionStatusAlertWebhook:
      title: InstitutionStatusAlertWebhook
      description: Fired when institution status meets the conditions configured in the developer dashboard.
      type: object
      additionalProperties: true
      properties:
        webhook_type:
          type: string
          description: '`DASHBOARD_CONFIGURED_ALERT`'
        webhook_code:
          type: string
          description: '`INSTITUTION_STATUS_ALERT_TRIGGERED`'
        institution_id:
          type: string
          description: The ID of the associated institution.
        institution_overall_success_rate:
          type: number
          format: double
          description: The global success rate of the institution, calculated based on item add health.
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - institution_id
      - institution_overall_success_rate
      - environment
      x-examples:
        example-1:
          webhook_type: DASHBOARD_CONFIGURED_ALERT
          webhook_code: INSTITUTION_STATUS_ALERT_TRIGGERED
          institution_id: ins_3
          institution_overall_success_rate: 0.9
          environment: production
    AssetReportCreateRequest:
      type: object
      description: AssetReportCreateRequest defines the request schema for `/asset_report/create`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        access_tokens:
          type: array
          description: An array of access tokens corresponding to the Items that will be included in the report. The `assets` product must have been initialized for the Items during link; the Assets product cannot be added after initialization.
          items:
            $ref: '#/components/schemas/AccessToken'
          minItems: 1
          maxItems: 99
        days_requested:
          type: integer
          maximum: 731
          minimum: 0
          description: |-
            The maximum integer number of days of history to include in the Asset Report. If using Fannie Mae Day 1 Certainty, `days_requested` must be at least 61 for new originations or at least 31 for refinancings.

            An Asset Report requested with "Additional History" (that is, with more than 61 days of transaction history) will incur an Additional History fee.
        options:
          $ref: '#/components/schemas/AssetReportCreateRequestOptions'
      required:
      - days_requested
    AssetReportCreateRequestOptions:
      type: object
      description: An optional object to filter `/asset_report/create` results. If provided, must be non-`null`. The optional `user` object is required for the report to be eligible for Fannie Mae's Day 1 Certainty program.
      properties:
        client_report_id:
          type: string
          nullable: true
          description: Client-generated identifier, which can be used by lenders to track loan applications.
        webhook:
          type: string
          description: URL to which Plaid will send Assets webhooks, for example when the requested Asset Report is ready.
          nullable: true
        include_fast_report:
          deprecated: true
          type: boolean
          description: true to return balance and identity earlier as a fast report. Defaults to false if omitted.
          nullable: true
          x-hidden-from-docs: true
        products:
          deprecated: true
          type: array
          description: 'Additional information that can be included in the asset report. Possible values: `"investments"`'
          x-hidden-from-docs: true
          items:
            type: string
        add_ons:
          type: array
          description: 'Use this field to request a `fast_asset` report. When Fast Assets is requested, Plaid will create two versions of the Asset Report: first, the Fast Asset Report, which will contain only current identity and balance information, and later, the Full Asset Report, which will also contain historical balance information and transaction data. A `PRODUCT_READY` webhook will be fired for each Asset Report when it is ready, and the `report_type` field will indicate whether the webhook is firing for the `full` or `fast` Asset Report. To retrieve the Fast Asset Report, call `/asset_report/get` with `fast_report` set to `true`. There is no additional charge for using Fast Assets.'
          items:
            $ref: '#/components/schemas/AssetReportAddOns'
        user:
          $ref: '#/components/schemas/AssetReportUser'
    AssetReportCreateResponse:
      type: object
      additionalProperties: true
      description: AssetReportCreateResponse defines the response schema for `/asset_report/create`
      properties:
        asset_report_token:
          $ref: '#/components/schemas/AssetReportToken'
        asset_report_id:
          $ref: '#/components/schemas/AssetReportId'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - asset_report_token
      - asset_report_id
      - request_id
    AssetReportRefreshRequest:
      type: object
      description: AssetReportRefreshRequest defines the request schema for `/asset_report/refresh`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        asset_report_token:
          $ref: '#/components/schemas/AssetReportRefreshAssetReportToken'
        days_requested:
          type: integer
          minimum: 0
          maximum: 731
          description: The maximum number of days of history to include in the Asset Report. Must be an integer. If not specified, the value from the original call to `/asset_report/create` will be used.
          nullable: true
        options:
          $ref: '#/components/schemas/AssetReportRefreshRequestOptions'
      required:
      - asset_report_token
    AssetReportRefreshRequestOptions:
      description: An optional object to filter `/asset_report/refresh` results. If provided, cannot be `null`. If not specified, the `options` from the original call to `/asset_report/create` will be used.
      type: object
      properties:
        client_report_id:
          type: string
          nullable: true
          description: Client-generated identifier, which can be used by lenders to track loan applications.
        webhook:
          type: string
          description: URL to which Plaid will send Assets webhooks, for example when the requested Asset Report is ready.
          nullable: true
        user:
          $ref: '#/components/schemas/AssetReportUser'
    AssetReportRefreshResponse:
      type: object
      additionalProperties: true
      description: AssetReportRefreshResponse defines the response schema for `/asset_report/refresh`
      properties:
        asset_report_id:
          $ref: '#/components/schemas/AssetReportId'
        asset_report_token:
          $ref: '#/components/schemas/AssetReportToken'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - asset_report_id
      - asset_report_token
      - request_id
    AssetReportRemoveRequest:
      type: object
      description: AssetReportRemoveRequest defines the request schema for `/asset_report/remove`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        asset_report_token:
          $ref: '#/components/schemas/AssetReportToken'
      required:
      - asset_report_token
    AssetReportRemoveResponse:
      type: object
      additionalProperties: true
      description: AssetReportRemoveResponse defines the response schema for `/asset_report/remove`
      properties:
        removed:
          type: boolean
          description: '`true` if the Asset Report was successfully removed.'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - removed
      - request_id
    AssetReportFilterRequest:
      type: object
      description: AssetReportFilterRequest defines the request schema for `/asset_report/filter`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        asset_report_token:
          $ref: '#/components/schemas/AssetReportToken'
        account_ids_to_exclude:
          type: array
          description: The accounts to exclude from the Asset Report, identified by `account_id`.
          items:
            type: string
      required:
      - asset_report_token
      - account_ids_to_exclude
    AssetReportFilterResponse:
      type: object
      additionalProperties: true
      description: AssetReportFilterResponse defines the response schema for `/asset_report/filter`
      properties:
        asset_report_token:
          $ref: '#/components/schemas/AssetReportToken'
        asset_report_id:
          $ref: '#/components/schemas/AssetReportId'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - asset_report_token
      - asset_report_id
      - request_id
    AssetReportGetRequest:
      type: object
      description: AssetReportGetRequest defines the request schema for `/asset_report/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        asset_report_token:
          $ref: '#/components/schemas/AssetReportTokenNullable'
        user_token:
          type: string
          description: The user token associated with the User for which to create an asset report for. The latest asset report associated with the User will be returned
          x-hidden-from-docs: true
        include_insights:
          type: boolean
          default: false
          description: '`true` if you would like to retrieve the Asset Report with Insights, `false` otherwise. This field defaults to `false` if omitted.'
        fast_report:
          type: boolean
          default: false
          description: '`true` to fetch "fast" version of asset report. Defaults to false if omitted. Can only be used if `/asset_report/create` was called with `options.add_ons` set to `["fast_assets"]`.'
        options:
          $ref: '#/components/schemas/AssetReportGetRequestOptions'
    AssetReportGetRequestOptions:
      type: object
      description: An optional object to filter or add data to `/asset_report/get` results. If provided, must be non-`null`.
      properties:
        days_to_include:
          type: integer
          maximum: 731
          minimum: 0
          nullable: true
          description: The maximum number of days of history to include in the Asset Report.
    AssetReportGetResponse:
      type: object
      additionalProperties: true
      description: AssetReportGetResponse defines the response schema for `/asset_report/get`
      properties:
        report:
          $ref: '#/components/schemas/AssetReport'
        warnings:
          type: array
          description: If the Asset Report generation was successful but identity information cannot be returned, this array will contain information about the errors causing identity information to be missing
          items:
            $ref: '#/components/schemas/Warning'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - report
      - warnings
      - request_id
    AssetReportPDFGetRequest:
      type: object
      description: AssetReportPDFGetRequest defines the request schema for `/asset_report/pdf/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        asset_report_token:
          $ref: '#/components/schemas/AssetReportToken'
        options:
          $ref: '#/components/schemas/AssetReportPDFGetRequestOptions'
      required:
      - asset_report_token
    AssetReportPDFGetRequestOptions:
      type: object
      description: An optional object to filter or add data to `/asset_report/get` results. If provided, must be non-`null`.
      properties:
        days_to_include:
          type: integer
          maximum: 731
          minimum: 0
          nullable: true
          description: The maximum integer number of days of history to include in the Asset Report.
    AssetReportPDFGetResponse:
      format: binary
      type: string
      description: AssetReportPDFGetResponse defines the response schema for `/asset_report/pdf/get`
    AssetReportAuditCopyCreateRequest:
      type: object
      description: AssetReportAuditCopyCreateRequest defines the request schema for `/asset_report/audit_copy/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        asset_report_token:
          $ref: '#/components/schemas/AssetReportToken'
        auditor_id:
          type: string
          description: The `auditor_id` of the third party with whom you would like to share the Asset Report.
      required:
      - asset_report_token
    AssetReportAuditCopyCreateResponse:
      type: object
      additionalProperties: true
      description: AssetReportAuditCopyCreateResponse defines the response schema for `/asset_report/audit_copy/get`
      properties:
        audit_copy_token:
          type: string
          description: A token that can be shared with a third party auditor to allow them to obtain access to the Asset Report. This token should be stored securely.
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - audit_copy_token
      - request_id
    AssetReportAuditCopyGetRequest:
      title: AssetReportAuditCopyGetRequest
      type: object
      description: AssetReportAuditCopyGetRequest defines the request schema for `/asset_report/audit_copy/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        audit_copy_token:
          type: string
          description: The `audit_copy_token` granting access to the Audit Copy you would like to get.
      required:
      - audit_copy_token
    AssetReportAuditCopyRemoveRequest:
      type: object
      description: AssetReportAuditCopyRemoveRequest defines the request schema for `/asset_report/audit_copy/remove`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        audit_copy_token:
          type: string
          description: The `audit_copy_token` granting access to the Audit Copy you would like to revoke.
      required:
      - audit_copy_token
    AssetReportAuditCopyRemoveResponse:
      type: object
      additionalProperties: true
      description: AssetReportAuditCopyRemoveResponse defines the response schema for `/asset_report/audit_copy/remove`
      properties:
        removed:
          type: boolean
          description: '`true` if the Audit Copy was successfully removed.'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - removed
      - request_id
    BaseReportGetRequest:
      type: object
      x-hidden-from-docs: true
      description: BaseReportGetRequest defines the request schema for `/cra/base_report/get`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        user_token:
          $ref: '#/components/schemas/UserToken'
      required:
      - user_token
    BaseReportGetResponse:
      type: object
      x-hidden-from-docs: true
      additionalProperties: true
      description: BaseReportGetResponse defines the response schema for `/cra/base_report/get`
      properties:
        report:
          $ref: '#/components/schemas/BaseReport'
        warnings:
          type: array
          description: If the Base Report generation was successful but identity information cannot be returned, this array will contain information about the errors causing identity information to be missing
          items:
            $ref: '#/components/schemas/BaseReportWarning'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - report
      - request_id
    BaseReportWarning:
      title: BaseReportWarning
      type: object
      additionalProperties: true
      description: It is possible for an Base Report to be returned with missing account owner information. In such cases, the Base Report will contain warning data in the response, indicating why obtaining the owner information failed.
      properties:
        warning_type:
          type: string
          description: The warning type, which will always be `BASE_REPORT_WARNING`
        warning_code:
          $ref: '#/components/schemas/BaseReportWarningCode'
        cause:
          $ref: '#/components/schemas/Cause'
      required:
      - warning_type
      - warning_code
      - cause
    BaseReportWarningCode:
      type: string
      description: The warning code identifies a specific kind of warning. `OWNERS_UNAVAILABLE` indicates that account-owner information is not available. `TRANSACTIONS_UNAVAILABLE` indicates that transactions information associated with Credit and Depository accounts are unavailable.
      enum:
      - OWNERS_UNAVAILABLE
      - TRANSACTIONS_UNAVAILABLE
    HistoricalBalance:
      title: HistoricalBalance
      type: object
      additionalProperties: true
      description: An object representing a balance held by an account in the past
      properties:
        date:
          type: string
          format: date
          description: The date of the calculated historical balance, in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD)
        current:
          type: number
          format: double
          description: |-
            The total amount of funds in the account, calculated from the `current` balance in the `balance` object by subtracting inflows and adding back outflows according to the posted date of each transaction.

            If the account has any pending transactions, historical balance amounts on or after the date of the earliest pending transaction may differ if retrieved in subsequent Asset Reports as a result of those pending transactions posting.
        iso_currency_code:
          type: string
          description: The ISO-4217 currency code of the balance. Always `null` if `unofficial_currency_code` is non-`null`.
          nullable: true
        unofficial_currency_code:
          type: string
          description: |-
            The unofficial currency code associated with the balance. Always `null` if `iso_currency_code` is non-`null`.

            See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `unofficial_currency_code`s.
          nullable: true
      required:
      - date
      - current
      - iso_currency_code
      - unofficial_currency_code
    AssetsProductReadyWebhook:
      title: AssetsProductReadyWebhook
      type: object
      additionalProperties: true
      description: Fired when the Asset Report has been generated and `/asset_report/get` is ready to be called.  If you attempt to retrieve an Asset Report before this webhook has fired, you’ll receive a response with the HTTP status code 400 and a Plaid error code of `PRODUCT_NOT_READY`.
      properties:
        webhook_type:
          type: string
          description: '`ASSETS`'
        webhook_code:
          type: string
          description: '`PRODUCT_READY`'
        asset_report_id:
          type: string
          description: The `asset_report_id` corresponding to the Asset Report the webhook has fired for.
        user_id:
          type: string
          description: The `user_id` corresponding to the User ID the webhook has fired for.
        report_type:
          type: string
          description: The report type, indicating whether the Asset Report is a `full` or `fast` report.
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - asset_report_id
      - environment
      x-examples:
        example-1:
          webhook_type: ASSETS
          webhook_code: PRODUCT_READY
          asset_report_id: 47dfc92b-bba3-4583-809e-ce871b321f05
          report_type: full
    AssetsErrorWebhook:
      title: AssetsErrorWebhook
      type: object
      additionalProperties: true
      description: Fired when Asset Report generation has failed. The resulting `error` will have an `error_type` of `ASSET_REPORT_ERROR`.
      x-examples:
        example-1:
          webhook_type: ASSETS
          webhook_code: ERROR
          asset_report_id: 47dfc92b-bba3-4583-809e-ce871b321f05
          error:
            display_message: null
            error_code: PRODUCT_NOT_ENABLED
            error_message: 'the ''assets'' product is not enabled for the following access tokens: access-sandbox-fb88b20c-7b74-4197-8d01-0ab122dad0bc. please ensure that ''assets'' is included in the ''product'' array when initializing Link and create the Item(s) again.'
            error_type: ASSET_REPORT_ERROR
            request_id: m8MDnv9okwxFNBV
      properties:
        webhook_type:
          type: string
          description: '`ASSETS`'
        webhook_code:
          type: string
          description: '`ERROR`'
        error:
          $ref: '#/components/schemas/PlaidError'
        asset_report_id:
          type: string
          description: The ID associated with the Asset Report.
        user_id:
          type: string
          description: The `user_id` corresponding to the User ID the webhook has fired for.
        environment:
          $ref: '#/components/schemas/WebhookEnvironmentValues'
      required:
      - webhook_type
      - webhook_code
      - error
      - asset_report_id
      - environment
    Warning:
      title: Warning
      type: object
      additionalProperties: true
      description: It is possible for an Asset Report to be returned with missing account owner information. In such cases, the Asset Report will contain warning data in the response, indicating why obtaining the owner information failed.
      properties:
        warning_type:
          type: string
          description: The warning type, which will always be `ASSET_REPORT_WARNING`
        warning_code:
          type: string
          enum:
          - OWNERS_UNAVAILABLE
          - INVESTMENTS_UNAVAILABLE
          - TRANSACTIONS_UNAVAILABLE
          description: The warning code identifies a specific kind of warning. `OWNERS_UNAVAILABLE` indicates that account-owner information is not available.`INVESTMENTS_UNAVAILABLE` indicates that Investments specific information is not available. `TRANSACTIONS_UNAVAILABLE` indicates that transactions information associated with Credit and Depository accounts are unavailable.
        cause:
          $ref: '#/components/schemas/Cause'
      required:
      - warning_type
      - warning_code
      - cause
      x-examples:
        example-1:
          warning_type: ASSET_REPORT_WARNING
          warning_code: OWNERS_UNAVAILABLE
          cause:
            error_type: ITEM_ERROR
            http_code: 400
            error_code: PRODUCTS_NOT_SUPPORTED
            error_message: 'The following products are not supported by this institution: Identity'
            display_message: null
            request_id: s32PXYOyplhGTHd
    AssetReportUser:
      title: AssetReportUser
      type: object
      additionalProperties: true
      description: The user object allows you to provide additional information about the user to be appended to the Asset Report. All fields are optional. The `first_name`, `last_name`, and `ssn` fields are required if you would like the Report to be eligible for Fannie Mae’s Day 1 Certainty™ program.
      properties:
        client_user_id:
          type: string
          nullable: true
          description: An identifier you determine and submit for the user.
        first_name:
          type: string
          nullable: true
          description: The user's first name. Required for the Fannie Mae Day 1 Certainty™ program.
        middle_name:
          type: string
          nullable: true
          description: The user's middle name
        last_name:
          type: string
          nullable: true
          description: The user's last name.  Required for the Fannie Mae Day 1 Certainty™ program.
        ssn:
          type: string
          nullable: true
          description: |-
            The user's Social Security Number. Required for the Fannie Mae Day 1 Certainty™ program.

            Format: "ddd-dd-dddd"
        phone_number:
          type: string
          nullable: true
          description: 'The user''s phone number, in E.164 format: +{countrycode}{number}. For example: "+14151234567". Phone numbers provided in other formats will be parsed on a best-effort basis.'
        email:
          type: string
          nullable: true
          description: The user's email address.
    AssetReportAddOns:
      title: AssetReportAddOns
      enum:
      - investments
      - fast_assets
      description: |-
        A list of add-ons that should be included in the Asset Report.

        `fast_assets`: When Fast Assets is requested, Plaid will create two versions of the Asset Report: the Fast Asset Report, which will contain only Identity and Balance information, and the Full Asset Report, which will also contain Transactions information. A `PRODUCT_READY` webhook will be fired for each Asset Report when it is ready, and the `report_type` field will indicate whether the webhook is firing for the `full` or `fast` Asset Report. To retrieve the Fast Asset Report, call `/asset_report/get` with `fast_report` set to `true`. There is no additional charge for using Fast Assets. To create a Fast Asset Report, Plaid must successfully retrieve both Identity and Balance data; if Plaid encounters an error obtaining this data, the Fast Asset Report will not be created. However, as long as Plaid can obtain Transactions data, the Full Asset Report will still be available.

        `investments`: Request an Asset Report with Investments. This add-on is in closed beta and not generally available.
      type: string
    AssetReportId:
      title: AssetReportId
      description: A unique ID identifying an Asset Report. Like all Plaid identifiers, this ID is case sensitive.
      type: string
    AssetReportToken:
      title: AssetReportToken
      type: string
      description: A token that can be provided to endpoints such as `/asset_report/get` or `/asset_report/pdf/get` to fetch or update an Asset Report.
    AssetReportTokenNullable:
      title: AssetReportTokenNullable
      type: string
      description: A token that can be provided to endpoints such as `/asset_report/get` or `/asset_report/pdf/get` to fetch or update an Asset Report.
    AssetReportRefreshAssetReportToken:
      title: AssetReportRefreshAssetReportToken
      type: string
      description: The `asset_report_token` returned by the original call to `/asset_report/create`
    AssetReport:
      title: AssetReport
      type: object
      additionalProperties: true
      description: An object representing an Asset Report
      properties:
        asset_report_id:
          $ref: '#/components/schemas/AssetReportId'
        client_report_id:
          type: string
          nullable: true
          description: An identifier you determine and submit for the Asset Report.
        date_generated:
          type: string
          format: date-time
          description: The date and time when the Asset Report was created, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (e.g. "2018-04-12T03:32:11Z").
        days_requested:
          type: number
          description: The duration of transaction history you requested
        user:
          $ref: '#/components/schemas/AssetReportUser'
        items:
          type: array
          description: Data returned by Plaid about each of the Items included in the Asset Report.
          items:
            $ref: '#/components/schemas/AssetReportItem'
      required:
      - asset_report_id
      - client_report_id
      - date_generated
      - days_requested
      - user
      - items
    AssetReportItem:
      title: AssetReportItem
      type: object
      additionalProperties: true
      description: A representation of an Item within an Asset Report.
      properties:
        item_id:
          $ref: '#/components/schemas/ItemId'
        institution_name:
          type: string
          description: The full financial institution name associated with the Item.
        institution_id:
          description: The id of the financial institution associated with the Item.
          type: string
        date_last_updated:
          type: string
          format: date-time
          description: The date and time when this Item’s data was last retrieved from the financial institution, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.
        accounts:
          type: array
          description: Data about each of the accounts open on the Item.
          items:
            $ref: '#/components/schemas/AccountAssets'
      required:
      - item_id
      - institution_name
      - institution_id
      - date_last_updated
      - accounts
    AccountAssets:
      title: AccountAssets
      description: Asset information about an account
      allOf:
      - $ref: '#/components/schemas/AccountBase'
      - type: object
        additionalProperties: true
        properties:
          days_available:
            type: number
            description: The duration of transaction history available for this Item, typically defined as the time since the date of the earliest transaction in that account.
          transactions:
            type: array
            description: Transaction history associated with the account.
            items:
              $ref: '#/components/schemas/AssetReportTransaction'
          investments:
            $ref: '#/components/schemas/AssetReportInvestments'
          owners:
            type: array
            description: Data returned by the financial institution about the account owner or owners.For business accounts, the name reported may be either the name of the individual or the name of the business, depending on the institution. Multiple owners on a single account will be represented in the same `owner` object, not in multiple owner objects within the array. In API versions 2018-05-22 and earlier, the `owners` object is not returned, and instead identity information is returned in the top level `identity` object. For more details, see [Plaid API versioning](https://plaid.com/docs/api/versioning/#version-2019-05-29)
            items:
              $ref: '#/components/schemas/Owner'
          ownership_type:
            $ref: '#/components/schemas/OwnershipType'
          historical_balances:
            type: array
            description: Calculated data about the historical balances on the account.
            items:
              $ref: '#/components/schemas/HistoricalBalance'
      required:
      - days_available
      - transactions
      - owners
      - historical_balances
    AssetReportInvestments:
      title: AssetReportInvestments
      type: object
      additionalProperties: true
      description: A transaction within an investment account.
      properties:
        investment_transaction_id:
          type: string
          description: The ID of the Investment transaction, unique across all Plaid transactions. Like all Plaid identifiers, the `investment_transaction_id` is case sensitive.
        account_id:
          type: string
          description: The `account_id` of the account against which this transaction posted.
        security_id:
          type: string
          description: The `security_id` to which this transaction is related.
          nullable: true
        date:
          type: string
          format: date
          description: The [ISO 8601](https://wikipedia.org/wiki/ISO_8601) posting date for the transaction.
        name:
          type: string
          description: The institution’s description of the transaction.
        quantity:
          type: number
          format: double
          description: The number of units of the security involved in this transaction. Positive for buy transactions; negative for sell transactions.
        amount:
          description: The complete value of the transaction. Positive values when cash is debited, e.g. purchases of stock; negative values when cash is credited, e.g. sales of stock. Treatment remains the same for cash-only movements unassociated with securities.
          type: number
          format: double
        price:
          description: The price of the security at which this transaction occurred.
          type: number
          format: double
        fees:
          type: number
          format: double
          description: The combined value of all fees applied to this transaction
          nullable: true
        type:
          $ref: '#/components/schemas/InvestmentTransactionType'
        subtype:
          $ref: '#/components/schemas/InvestmentTransactionSubtype'
        iso_currency_code:
          type: string
          description: The ISO-4217 currency code of the transaction. Always `null` if `unofficial_currency_code` is non-`null`.
          nullable: true
        unofficial_currency_code:
          type: string
          description: |-
            The unofficial currency code associated with the holding. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.

            See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
          nullable: true
      required:
      - investment_transaction_id
      - account_id
      - security_id
      - date
      - name
      - quantity
      - amount
      - price
      - fees
      - type
      - subtype
      - iso_currency_code
      - unofficial_currency_code
    AssetReportInvestmentHolding:
      title: AssetReportInvestmentHolding
      type: object
      additionalProperties: true
      description: A securities holding at an institution.
      properties:
        account_id:
          type: string
          description: The Plaid `account_id` associated with the holding.
        security_id:
          type: string
          description: The Plaid `security_id` associated with the holding. Security data is not specific to a user's account; any user who held the same security at the same financial institution at the same time would have identical security data. The `security_id` for the same security will typically be the same across different institutions, but this is not guaranteed. The `security_id` does not typically change, but may change if inherent details of the security change due to a corporate action, for example, in the event of a ticker symbol change or CUSIP change.
        ticker_symbol:
          type: string
          nullable: true
          description: The holding's trading symbol for publicly traded holdings, and otherwise a short identifier if available.
        institution_price:
          type: number
          format: double
          description: The last price given by the institution for this security.
        institution_price_as_of:
          type: string
          format: date
          description: The date at which `institution_price` was current.
          nullable: true
        institution_value:
          type: number
          format: double
          description: The value of the holding, as reported by the institution.
        cost_basis:
          type: number
          format: double
          description: The original total value of the holding. This field is calculated by Plaid as the sum of the purchase price of all of the shares in the holding.
          nullable: true
        quantity:
          description: The total quantity of the asset held, as reported by the financial institution. If the security is an option, `quantity` will reflect the total number of options (typically the number of contracts multiplied by 100), not the number of contracts.
          type: number
          format: double
        iso_currency_code:
          type: string
          description: The ISO-4217 currency code of the holding. Always `null` if `unofficial_currency_code` is non-`null`.
          nullable: true
        unofficial_currency_code:
          type: string
          description: |
            The unofficial currency code associated with the holding. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.

            See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
          nullable: true
      required:
      - account_id
      - security_id
      - ticker_symbol
      - institution_price
      - institution_value
      - cost_basis
      - quantity
      - iso_currency_code
      - unofficial_currency_code
    AssetReportInvestmentSecurity:
      title: AssetReportInvestmentSecurity
      type: object
      additionalProperties: true
      description: Investment security associated with the account.
      properties:
        security_id:
          type: string
          description: A unique, Plaid-specific identifier for the security, used to associate securities with holdings. Like all Plaid identifiers, the `security_id` is case sensitive. The `security_id` may change if inherent details of the security change due to a corporate action, for example, in the event of a ticker symbol change or CUSIP change.
        name:
          nullable: true
          type: string
          description: A descriptive name for the security, suitable for display.
        ticker_symbol:
          type: string
          nullable: true
          description: The security’s trading symbol for publicly traded securities, and otherwise a short identifier if available.
        type:
          nullable: true
          type: string
          description: |-
            The security type of the holding. Valid security types are:

            `cash`: Cash, currency, and money market funds

            `cryptocurrency`: Digital or virtual currencies

            `derivative`: Options, warrants, and other derivative instruments

            `equity`: Domestic and foreign equities

            `etf`: Multi-asset exchange-traded investment funds

            `fixed income`: Bonds and certificates of deposit (CDs)

            `loan`: Loans and loan receivables

            `mutual fund`: Open- and closed-end vehicles pooling funds of multiple investors

            `other`: Unknown or other investment types
      required:
      - security_id
      - name
      - ticker_symbol
      - type
    OwnershipType:
      description: |-
        How an asset is owned.

        `association`: Ownership by a corporation, partnership, or unincorporated association, including for-profit and not-for-profit organizations.
        `individual`: Ownership by an individual.
        `joint`: Joint ownership by multiple parties.
        `trust`: Ownership by a revocable or irrevocable trust.
      nullable: true
      type: string
      enum:
      - null
      - individual
      - joint
      - association
      - trust
    AssetReportTransaction:
      title: AssetReportTransaction
      description: A transaction on the asset report
      type: object
      additionalProperties: true
      properties:
        account_id:
          type: string
          description: The ID of the account in which this transaction occurred.
        amount:
          type: number
          format: double
          description: The settled value of the transaction, denominated in the transaction's currency, as stated in `iso_currency_code` or `unofficial_currency_code`. Positive values when money moves out of the account; negative values when money moves in. For example, debit card purchases are positive; credit card payments, direct deposits, and refunds are negative.
        iso_currency_code:
          type: string
          description: The ISO-4217 currency code of the transaction. Always `null` if `unofficial_currency_code` is non-null.
          nullable: true
        unofficial_currency_code:
          type: string
          description: |-
            The unofficial currency code associated with the transaction. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.

            See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `unofficial_currency_code`s.
          nullable: true
        original_description:
          type: string
          description: The string returned by the financial institution to describe the transaction.
          nullable: true
        category:
          type: array
          description: |-
            A hierarchical array of the categories to which this transaction belongs. For a full list of categories, see [`/categories/get`](https://plaid.com/docs/api/products/transactions/#categoriesget).

            This field will only appear in an Asset Report with Insights.
          nullable: true
          items:
            type: string
        category_id:
          description: |-
            The ID of the category to which this transaction belongs. For a full list of categories, see [`/categories/get`](https://plaid.com/docs/api/products/transactions/#categoriesget).

            This field will only appear in an Asset Report with Insights.
          type: string
          nullable: true
        credit_category:
          $ref: '#/components/schemas/CreditCategory'
        check_number:
          type: string
          description: The check number of the transaction. This field is only populated for check transactions.
          nullable: true
        date:
          type: string
          format: date
          description: For pending transactions, the date that the transaction occurred; for posted transactions, the date that the transaction posted. Both dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format ( `YYYY-MM-DD` ).
        date_transacted:
          type: string
          nullable: true
          description: The date on which the transaction took place, in IS0 8601 format.
        location:
          $ref: '#/components/schemas/Location'
        name:
          type: string
          description: |-
            The merchant name or transaction description.

            This field will only appear in an Asset Report with Insights.
        merchant_name:
          type: string
          description: The merchant name, as enriched by Plaid from the `name` field. This is typically a more human-readable version of the merchant counterparty in the transaction. For some bank transactions (such as checks or account transfers) where there is no meaningful merchant name, this value will be `null`.
          nullable: true
        payment_meta:
          $ref: '#/components/schemas/PaymentMeta'
        pending:
          type: boolean
          description: When `true`, identifies the transaction as pending or unsettled. Pending transaction details (name, type, amount, category ID) may change before they are settled.
        pending_transaction_id:
          type: string
          description: The ID of a posted transaction's associated pending transaction, where applicable.
          nullable: true
        account_owner:
          type: string
          description: The name of the account owner. This field is not typically populated and only relevant when dealing with sub-accounts.
          nullable: true
        transaction_id:
          type: string
          description: The unique ID of the transaction. Like all Plaid identifiers, the `transaction_id` is case sensitive.
        transaction_type:
          $ref: '#/components/schemas/AssetReportTransactionType'
        income_source_id:
          type: string
          description: A unique identifier for an income source.
          x-hidden-from-docs: true
      required:
      - transaction_id
      - pending
      - date
      - unofficial_currency_code
      - iso_currency_code
      - amount
      - account_id
      - original_description
    AssetReportTransactionType:
      title: AssetReportTransactionType
      type: string
      enum:
      - digital
      - place
      - special
      - unresolved
      description: |
        `digital:` transactions that took place online.

        `place:` transactions that were made at a physical location.

        `special:` transactions that relate to banks, e.g. fees or deposits.

        `unresolved:` transactions that do not fit into the other three types.
    BaseReport:
      title: BaseReport
      type: object
      additionalProperties: true
      description: An object representing a Base Report
      x-hidden-from-docs: true
      properties:
        report_id:
          $ref: '#/components/schemas/BaseReportId'
        date_generated:
          type: string
          format: date-time
          description: The date and time when the Base Report was created, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (e.g. "2018-04-12T03:32:11Z").
        days_requested:
          type: number
          description: The number of days of transaction history requested.
        items:
          type: array
          description: Data returned by Plaid about each of the Items included in the Base Report.
          items:
            $ref: '#/components/schemas/BaseReportItem'
      required:
      - report_id
      - date_generated
      - days_requested
      - items
    BaseReportItem:
      title: BaseReportItem
      type: object
      additionalProperties: true
      description: A representation of an Item within a Base Report.
      x-hidden-from-docs: true
      properties:
        institution_name:
          type: string
          description: The full financial institution name associated with the Item.
        institution_id:
          description: The id of the financial institution associated with the Item.
          type: string
        date_last_updated:
          type: string
          format: date-time
          description: The date and time when this Item’s data was last retrieved from the financial institution, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.
        accounts:
          type: array
          description: Data about each of the accounts open on the Item.
          items:
            $ref: '#/components/schemas/BaseReportAccount'
      required:
      - institution_name
      - institution_id
      - date_last_updated
      - accounts
    BaseReportAccount:
      title: BaseReportAccount
      description: Base Report information about an account
      x-hidden-from-docs: true
      type: object
      additionalProperties: true
      properties:
        balances:
          $ref: '#/components/schemas/BaseReportAccountBalances'
        mask:
          type: string
          nullable: true
          description: The last 2-4 alphanumeric characters of an account's official account number. Note that the mask may be non-unique between an Item's accounts, and it may also not match the mask that the bank displays to the user.
        name:
          type: string
          description: The name of the account, either assigned by the user or by the financial institution itself
        official_name:
          type: string
          nullable: true
          description: The official name of the account as given by the financial institution
        type:
          $ref: '#/components/schemas/AccountType'
        subtype:
          $ref: '#/components/schemas/AccountSubtype'
        days_available:
          type: number
          description: The duration of transaction history available for this Item, typically defined as the time since the date of the earliest transaction in that account. Only returned by Base Report endpoints.
        transactions:
          type: array
          description: Transaction history associated with the account. Only returned by Base Report endpoints. Transaction history returned by endpoints such as `/transactions/get` or `/investments/transactions/get` will be returned in the top-level `transactions` field instead.
          items:
            $ref: '#/components/schemas/BaseReportTransaction'
        owners:
          type: array
          description: Data returned by the financial institution about the account owner or owners. For business accounts, the name reported may be either the name of the individual or the name of the business, depending on the institution. Multiple owners on a single account will be represented in the same `owner` object, not in multiple owner objects within the array.
          items:
            $ref: '#/components/schemas/Owner'
        ownership_type:
          $ref: '#/components/schemas/OwnershipType'
        historical_balances:
          type: array
          description: Calculated data about the historical balances on the account. Only returned by Base Report endpoints and currently not supported by `brokerage` or `investment` accounts.
          items:
            $ref: '#/components/schemas/HistoricalBalance'
        account_insights:
          $ref: '#/components/schemas/BaseReportAccountInsights'
      required:
      - balances
      - mask
      - name
      - official_name
      - type
      - subtype
      - days_available
      - transactions
      - owners
      - ownership_type
      - historical_balances
    BaseReportAccountBalances:
      title: BaseReportAccountBalances
      description: Base Report information about an account's balances
      x-hidden-from-docs: true
      type: object
      additionalProperties: true
      allOf:
      - $ref: '#/components/schemas/AccountBalance'
      - type: object
        additionalProperties: true
        properties:
          average_balance:
            type: number
            format: double
            description: The average historical balance for the entire report
            nullable: true
          average_monthly_balances:
            type: array
            description: The average historical balance of each calendar month
            items:
              $ref: '#/components/schemas/BaseReportAverageMonthlyBalances'
          most_recent_thirty_day_average_balance:
            type: number
            format: double
            description: The average historical balance from the most recent 30 days
            nullable: true
    BaseReportId:
      title: BaseReportId
      x-hidden-from-docs: true
      description: A unique ID identifying an Base Report. Like all Plaid identifiers, this ID is case sensitive.
      type: string
    BaseReportTransaction:
      title: BaseReportTransaction
      description: A transaction on the Base Report
      x-hidden-from-docs: true
      type: object
      additionalProperties: true
      properties:
        amount:
          type: number
          format: double
          description: The settled value of the transaction, denominated in the transaction's currency, as stated in `iso_currency_code` or `unofficial_currency_code`. Positive values when money moves out of the account; negative values when money moves in. For example, debit card purchases are positive; credit card payments, direct deposits, and refunds are negative.
        iso_currency_code:
          type: string
          description: The ISO-4217 currency code of the transaction. Always `null` if `unofficial_currency_code` is non-null.
          nullable: true
        unofficial_currency_code:
          type: string
          description: |-
            The unofficial currency code associated with the transaction. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.

            See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `unofficial_currency_code`s.
          nullable: true
        original_description:
          type: string
          description: The string returned by the financial institution to describe the transaction.
          nullable: true
        credit_category:
          $ref: '#/components/schemas/CreditCategory'
        check_number:
          type: string
          description: The check number of the transaction. This field is only populated for check transactions.
          nullable: true
        date:
          type: string
          format: date
          description: For pending transactions, the date that the transaction occurred; for posted transactions, the date that the transaction posted. Both dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format ( `YYYY-MM-DD` ).
        date_transacted:
          type: string
          nullable: true
          description: The date on which the transaction took place, in IS0 8601 format.
        location:
          $ref: '#/components/schemas/Location'
        merchant_name:
          type: string
          description: The merchant name, as enriched by Plaid from the `name` field. This is typically a more human-readable version of the merchant counterparty in the transaction. For some bank transactions (such as checks or account transfers) where there is no meaningful merchant name, this value will be `null`.
          nullable: true
        pending:
          type: boolean
          description: When `true`, identifies the transaction as pending or unsettled. Pending transaction details (name, type, amount, category ID) may change before they are settled.
        account_owner:
          type: string
          description: The name of the account owner. This field is not typically populated and only relevant when dealing with sub-accounts.
          nullable: true
      required:
      - pending
      - date
      - unofficial_currency_code
      - iso_currency_code
      - amount
      - original_description
    BaseReportAccountInsights:
      title: BaseReportAccountInsights
      description: Calculated insights derived from transaction-level data.
      x-hidden-from-docs: true
      type: object
      additionalProperties: true
      properties:
        oldest_transaction_date:
          type: string
          format: date
          description: Date of the earliest transaction in the base report for the account.
        most_recent_transaction_date:
          type: string
          format: date
          description: Date of the most recent transaction in the base report for the account.
        days_available:
          type: integer
          description: Number of days days available in the base report for the account.
        average_days_between_transactions:
          type: number
          description: Average number of days between sequential transactions
        longest_gap_between_transactions:
          type: array
          description: Longest gap between sequential transactions
          items:
            $ref: '#/components/schemas/BaseReportLongestGapInsights'
        number_of_inflows:
          type: array
          nullable: true
          description: The number of debits into the account. This field will be null for non-depository accounts.
          items:
            $ref: '#/components/schemas/BaseReportNumberFlowInsights'
        average_inflow_amount:
          type: array
          nullable: true
          description: Average amount of debit transactions into account. This field will be null for non-depository accounts. This field only takes into account USD transactions from the account.
          items:
            $ref: '#/components/schemas/BaseReportAverageFlowInsights'
        number_of_outflows:
          type: array
          nullable: true
          description: The number of credit into the account. This field will be null for non-depository accounts.
          items:
            $ref: '#/components/schemas/BaseReportNumberFlowInsights'
        average_outflow_amount:
          type: array
          nullable: true
          description: Average amount of credit transactions into account. This field will be null for non-depository accounts. This field only takes into account USD transactions from the account.
          items:
            $ref: '#/components/schemas/BaseReportAverageFlowInsights'
        number_of_days_no_transactions:
          type: integer
          description: Number of days with no transactions
    BaseReportLongestGapInsights:
      title: BaseReportLongestGapInsights
      description: Largest number of days between sequential transactions per calendar month
      x-hidden-from-docs: true
      type: object
      additionalProperties: true
      properties:
        start_date:
          type: string
          format: date
          description: |-
            The start date of this time period.
            The date will be returned in an ISO 8601 format (YYYY-MM-DD).
        end_date:
          type: string
          format: date
          description: |-
            The end date of this time period.
            The date will be returned in an ISO 8601 format (YYYY-MM-DD).
        days:
          type: integer
          description: Largest number of days between sequential transactions for this time period.
    BaseReportNumberFlowInsights:
      title: BaseReportNumberFlowInsights
      description: The number of credits or debits out of the account. This field will only added for depository accounts
      x-hidden-from-docs: true
      type: object
      additionalProperties: true
      properties:
        start_date:
          type: string
          format: date
          description: |-
            The start date of this time period.
            The date will be returned in an ISO 8601 format (YYYY-MM-DD).
        end_date:
          type: string
          format: date
          description: |-
            The end date of this time period.
            The date will be returned in an ISO 8601 format (YYYY-MM-DD).
        count:
          type: integer
          description: The number of credits or debits out of the account for this time period.
    BaseReportAverageFlowInsights:
      title: BaseReportAverageFlowInsights
      description: Average dollar amount of credit or debit transactions out of the account. This field will only added for depository accounts
      x-hidden-from-docs: true
      type: object
      additionalProperties: true
      properties:
        start_date:
          type: string
          format: date
          description: |-
            The start date of this time period.
            The date will be returned in an ISO 8601 format (YYYY-MM-DD).
        end_date:
          type: string
          format: date
          description: |-
            The end date of this time period.
            The date will be returned in an ISO 8601 format (YYYY-MM-DD).
        total_amount:
          $ref: '#/components/schemas/CreditAmountWithCurrency'
    BaseReportAverageMonthlyBalances:
      title: BaseReportAverageMonthlyBalances
      description: Average balance in dollar amount per month
      x-hidden-from-docs: true
      type: object
      additionalProperties: true
      properties:
        start_date:
          type: string
          description: |-
            The start date of this time period.
            The date will be returned in an ISO 8601 format (YYYY-MM-DD).
        end_date:
          type: string
          description: |-
            The end date of this time period.
            The date will be returned in an ISO 8601 format (YYYY-MM-DD).
        average_balance:
          $ref: '#/components/schemas/CreditAmountWithCurrency'
    AddressPurposeLabel:
      description: |-
        Field describing whether the associated address is being used for commercial or residential purposes.

        Note: This value will be `no_data` when Plaid does not have sufficient data to determine the address's use.
      type: string
      enum:
      - residential
      - commercial
      - no_data
      example: residential
    BeaconAuditTrail:
      type: object
      title: BeaconAuditTrail
      description: Information about the last change made to the parent object specifying what caused the change as well as when it occurred.
      properties:
        source:
          $ref: '#/components/schemas/BeaconAuditTrailSource'
        dashboard_user_id:
          $ref: '#/components/schemas/DashboardUserIDNullable'
      required:
      - source
      - dashboard_user_id
      additionalProperties: true
    BeaconAuditTrailSource:
      type: string
      enum:
      - dashboard
      - api
      - system
      - bulk_import
      description: |-
        A type indicating what caused a resource to be changed or updated.


        `dashboard` - The resource was created or updated by a member of your team via the Plaid dashboard.

        `api` - The resource was created or updated via the Plaid API.

        `system` - The resource was created or updated automatically by a part of the Plaid Beacon system. For example, if another business using Plaid Beacon created a fraud report that matched one of your users, your matching user's status would automatically be updated and the audit trail source would be `system`.

        `bulk_import` - The resource was created or updated as part of a bulk import process. For example, if your company provided a CSV of user data as part of your initial onboarding, the audit trail source would be `bulk_import`.
    BeaconDuplicateGetRequest:
      description: Request input for getting a Beacon Duplicate
      type: object
      properties:
        beacon_duplicate_id:
          $ref: '#/components/schemas/BeaconDuplicateID'
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
      required:
      - beacon_duplicate_id
    BeaconDuplicateGetResponse:
      description: A Beacon Duplicate represents a pair of matching Beacon Users and an analysis of the fields they matched on.
      additionalProperties: true
      properties:
        id:
          $ref: '#/components/schemas/BeaconDuplicateID'
        beacon_user1:
          $ref: '#/components/schemas/BeaconUserRevision'
        beacon_user2:
          $ref: '#/components/schemas/BeaconUserRevision'
        analysis:
          $ref: '#/components/schemas/BeaconMatchSummaryAnalysis'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - id
      - beacon_user1
      - beacon_user2
      - analysis
      - request_id
      type: object
    BeaconDuplicateID:
      type: string
      title: BeaconDuplicateID
      example: becdup_11111111111111
      description: ID of the associated Beacon Duplicate.
    BeaconMatchSummaryAnalysis:
      type: object
      title: BeaconMatchSummaryAnalysis
      description: Analysis of which fields matched between one Beacon User and another.
      properties:
        address:
          $ref: '#/components/schemas/BeaconMatchSummaryCode'
        date_of_birth:
          $ref: '#/components/schemas/BeaconMatchSummaryCode'
        email_address:
          $ref: '#/components/schemas/BeaconMatchSummaryCode'
        name:
          $ref: '#/components/schemas/BeaconMatchSummaryCode'
        id_number:
          $ref: '#/components/schemas/BeaconMatchSummaryCode'
        ip_address:
          $ref: '#/components/schemas/BeaconMatchSummaryCode'
        phone_number:
          $ref: '#/components/schemas/BeaconMatchSummaryCode'
      required:
      - address
      - date_of_birth
      - email_address
      - name
      - id_number
      - ip_address
      - phone_number
      additionalProperties: true
    BeaconMatchSummaryCode:
      description: |-
        An enum indicating the match type between two Beacon Users.


        `match` indicates that the provided input data was a strong match against the other Beacon User.

        `partial_match` indicates the data approximately matched the other Beacon User. For example, "Knope" vs. "Knope-Wyatt" for last name.

        `no_match` indicates that Plaid was able to compare this field against the other Beacon User and it did not match the provided input data.

        `no_data` indicates that Plaid was unable to compare this field against the original Beacon User because the field was not present in one of the Beacon Users.
      type: string
      title: BeaconMatchSummaryCode
      enum:
      - match
      - partial_match
      - no_match
      - no_data
      example: match
    BeaconProgramID:
      type: string
      title: BeaconProgramID
      example: becprg_11111111111111
      description: ID of the associated Beacon Program.
    BeaconReport:
      type: object
      title: BeaconReport
      description: |-
        A Beacon Report describes the type of fraud committed by a user as well as the date the fraud was committed and the total amount of money lost due to the fraud incident.

        This information is used to block similar fraud attempts on your platform as well as alert other companies who screen a user with matching identity information.
        Other companies will not receive any new identity information, just what matched, plus information such as industry, type of fraud, and date of fraud.

        You can manage your fraud reports by adding, deleting, or editing reports as you get additional information on fraudulent users.
      properties:
        id:
          $ref: '#/components/schemas/BeaconReportID'
        beacon_user_id:
          $ref: '#/components/schemas/BeaconUserID'
        created_at:
          $ref: '#/components/schemas/Timestamp'
        type:
          $ref: '#/components/schemas/BeaconReportType'
        fraud_date:
          $ref: '#/components/schemas/ISO8601Date'
        fraud_amount:
          $ref: '#/components/schemas/FraudAmount'
        audit_trail:
          $ref: '#/components/schemas/BeaconAuditTrail'
      required:
      - id
      - beacon_user_id
      - created_at
      - type
      - fraud_date
      - fraud_amount
      - audit_trail
      additionalProperties: true
    BeaconReportCreateRequest:
      description: Request input for creating a Beacon Report
      type: object
      properties:
        beacon_user_id:
          $ref: '#/components/schemas/BeaconUserID'
        type:
          $ref: '#/components/schemas/BeaconReportType'
        fraud_date:
          $ref: '#/components/schemas/ISO8601Date'
        fraud_amount:
          $ref: '#/components/schemas/FraudAmount'
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
      required:
      - beacon_user_id
      - type
      - fraud_date
    BeaconReportCreateResponse:
      description: |-
        A Beacon Report describes the type of fraud committed by a user as well as the date the fraud was committed and the total amount of money lost due to the fraud incident.

        This information is used to block similar fraud attempts on your platform as well as alert other companies who screen a user with matching identity information.
        Other companies will not receive any new identity information, just what matched, plus information such as industry, type of fraud, and date of fraud.

        You can manage your fraud reports by adding, deleting, or editing reports as you get additional information on fraudulent users.
      additionalProperties: true
      properties:
        id:
          $ref: '#/components/schemas/BeaconReportID'
        beacon_user_id:
          $ref: '#/components/schemas/BeaconUserID'
        created_at:
          $ref: '#/components/schemas/Timestamp'
        type:
          $ref: '#/components/schemas/BeaconReportType'
        fraud_date:
          $ref: '#/components/schemas/ISO8601Date'
        fraud_amount:
          $ref: '#/components/schemas/FraudAmount'
        audit_trail:
          $ref: '#/components/schemas/BeaconAuditTrail'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - id
      - beacon_user_id
      - created_at
      - type
      - fraud_date
      - fraud_amount
      - audit_trail
      - request_id
      type: object
    BeaconReportGetRequest:
      description: Request input for getting a Beacon Report
      type: object
      properties:
        beacon_report_id:
          $ref: '#/components/schemas/BeaconReportID'
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
      required:
      - beacon_report_id
    BeaconReportGetResponse:
      description: |-
        A Beacon Report describes the type of fraud committed by a user as well as the date the fraud was committed and the total amount of money lost due to the fraud incident.

        This information is used to block similar fraud attempts on your platform as well as alert other companies who screen a user with matching identity information.
        Other companies will not receive any new identity information, just what matched, plus information such as industry, type of fraud, and date of fraud.

        You can manage your fraud reports by adding, deleting, or editing reports as you get additional information on fraudulent users.
      additionalProperties: true
      properties:
        id:
          $ref: '#/components/schemas/BeaconReportID'
        beacon_user_id:
          $ref: '#/components/schemas/BeaconUserID'
        created_at:
          $ref: '#/components/schemas/Timestamp'
        type:
          $ref: '#/components/schemas/BeaconReportType'
        fraud_date:
          $ref: '#/components/schemas/ISO8601Date'
        fraud_amount:
          $ref: '#/components/schemas/FraudAmount'
        audit_trail:
          $ref: '#/components/schemas/BeaconAuditTrail'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - id
      - beacon_user_id
      - created_at
      - type
      - fraud_date
      - fraud_amount
      - audit_trail
      - request_id
      type: object
    BeaconReportID:
      type: string
      title: BeaconReportID
      example: becrpt_11111111111111
      description: ID of the associated Beacon Report.
    BeaconReportIDNullable:
      type: string
      title: BeaconReportID
      example: becrpt_11111111111111
      description: ID of the associated Beacon Report.
      nullable: true
    BeaconReportListRequest:
      description: Request input for listing Beacon Reports
      type: object
      properties:
        beacon_user_id:
          $ref: '#/components/schemas/BeaconUserID'
        cursor:
          $ref: '#/components/schemas/Cursor'
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
      required:
      - beacon_user_id
    BeaconReportListResponse:
      description: The response schema for `/beacon/report/list`
      additionalProperties: true
      properties:
        beacon_reports:
          type: array
          items:
            $ref: '#/components/schemas/BeaconReport'
        next_cursor:
          $ref: '#/components/schemas/Cursor'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - beacon_reports
      - next_cursor
      - request_id
      type: object
    BeaconReportSyndication:
      type: object
      title: BeaconReportSyndication
      description: |-
        A Beacon Report Syndication represents a Beacon Report created either by your organization or another Beacon customer that matches a specific Beacon User you've created.

        The `analysis` field in the response indicates which fields matched between the originally reported Beacon User and the Beacon User that the report was syndicated to.

        The `report` field in the response contains a subset of information from the original report.
      properties:
        id:
          $ref: '#/components/schemas/BeaconReportSyndicationID'
        report:
          $ref: '#/components/schemas/BeaconReportSyndicationOriginalReport'
        analysis:
          $ref: '#/components/schemas/BeaconReportSyndicationAnalysis'
      required:
      - id
      - report
      - analysis
      additionalProperties: true
    BeaconReportSyndicationAnalysis:
      type: object
      title: BeaconReportSyndicationAnalysis
      description: Analysis of which fields matched between the originally reported Beacon User and the Beacon User that the report was syndicated to.
      properties:
        address:
          $ref: '#/components/schemas/BeaconMatchSummaryCode'
        date_of_birth:
          $ref: '#/components/schemas/BeaconMatchSummaryCode'
        email_address:
          $ref: '#/components/schemas/BeaconMatchSummaryCode'
        name:
          $ref: '#/components/schemas/BeaconMatchSummaryCode'
        id_number:
          $ref: '#/components/schemas/BeaconMatchSummaryCode'
        ip_address:
          $ref: '#/components/schemas/BeaconMatchSummaryCode'
        phone_number:
          $ref: '#/components/schemas/BeaconMatchSummaryCode'
      required:
      - address
      - date_of_birth
      - email_address
      - name
      - id_number
      - ip_address
      - phone_number
      additionalProperties: true
    BeaconReportSyndicationGetRequest:
      description: Request input for getting a Beacon Report Syndication
      type: object
      properties:
        beacon_report_syndication_id:
          $ref: '#/components/schemas/BeaconReportSyndicationID'
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
      required:
      - beacon_report_syndication_id
    BeaconReportSyndicationGetResponse:
      description: |-
        A Beacon Report Syndication represents a Beacon Report created either by your organization or another Beacon customer that matches a specific Beacon User you've created.

        The `analysis` field in the response indicates which fields matched between the originally reported Beacon User and the Beacon User that the report was syndicated to.

        The `report` field in the response contains a subset of information from the original report.
      additionalProperties: true
      properties:
        id:
          $ref: '#/components/schemas/BeaconReportSyndicationID'
        report:
          $ref: '#/components/schemas/BeaconReportSyndicationOriginalReport'
        analysis:
          $ref: '#/components/schemas/BeaconReportSyndicationAnalysis'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - id
      - report
      - analysis
      - request_id
      type: object
    BeaconReportSyndicationID:
      type: string
      title: BeaconReportSyndicationID
      example: becrsn_11111111111111
      description: ID of the associated Beacon Report Syndication.
    BeaconReportSyndicationListRequest:
      description: Request input for listing Beacon Report Syndications
      type: object
      properties:
        beacon_user_id:
          $ref: '#/components/schemas/BeaconUserID'
        cursor:
          $ref: '#/components/schemas/Cursor'
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
      required:
      - beacon_user_id
    BeaconReportSyndicationListResponse:
      description: The response schema for `/beacon/report_syndication/list`
      additionalProperties: true
      properties:
        beacon_report_syndications:
          type: array
          items:
            $ref: '#/components/schemas/BeaconReportSyndication'
        next_cursor:
          $ref: '#/components/schemas/Cursor'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - beacon_report_syndications
      - next_cursor
      - request_id
      type: object
    BeaconReportSyndicationOriginalReport:
      type: object
      title: BeaconReportSyndicationOriginalReport
      description: |-
        A subset of information from a Beacon Report that has been syndicated to a matching Beacon User in your program.

        The `id` field in the response is the ID of the original report that was syndicated. If the original report was created by your organization, the field will be filled with the ID of the report. Otherwise, the field will be `null` indicating that the original report was created by another Beacon customer.
      properties:
        id:
          $ref: '#/components/schemas/BeaconReportIDNullable'
        created_at:
          $ref: '#/components/schemas/Timestamp'
        type:
          $ref: '#/components/schemas/BeaconReportType'
        fraud_date:
          $ref: '#/components/schemas/ISO8601Date'
      required:
      - id
      - created_at
      - type
      - fraud_date
      additionalProperties: true
    BeaconReportType:
      type: string
      title: BeaconReportType
      description: |-
        The type of Beacon Report.

        `first_party`: If this is the same individual as the one who submitted the KYC.

        `stolen`: If this is a different individual from the one who submitted the KYC.

        `synthetic`: If this is an individual using fabricated information.

        `account_takeover`: If this individual's account was compromised.

        `unknown`: If you aren't sure who committed the fraud.
      enum:
      - first_party
      - stolen
      - synthetic
      - account_takeover
      - unknown
    BeaconUserAddress:
      type: object
      title: BeaconUserAddress
      description: |-
        Even if an address has been collected, some fields may be null depending on the region's addressing system. For example:


        Addresses from the United Kingdom will not include a region


        Addresses from Hong Kong will not include a postal code
      properties:
        street:
          $ref: '#/components/schemas/Street'
        street2:
          $ref: '#/components/schemas/Street2'
        city:
          $ref: '#/components/schemas/City'
        region:
          $ref: '#/components/schemas/Region'
        postal_code:
          $ref: '#/components/schemas/PostalCode'
        country:
          $ref: '#/components/schemas/GenericCountryCode'
      required:
      - street
      - street2
      - city
      - region
      - postal_code
      - country
      additionalProperties: true
    BeaconUserCreateRequest:
      description: |-
        Request input for creating a Beacon User.

        The primary use for this endpoint is to add a new end user to Beacon for fraud and duplicate scanning.
        This endpoint can also be used to import historical fraud cases into the Beacon Network without being charged
        for creating a Beacon User. To import historical fraud cases, embed the fraud report in the optional `report`
        section of the request payload.
      type: object
      properties:
        program_id:
          $ref: '#/components/schemas/BeaconProgramID'
        client_user_id:
          $ref: '#/components/schemas/ClientUserID'
        user:
          $ref: '#/components/schemas/BeaconUserRequestData'
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
      required:
      - program_id
      - client_user_id
      - user
    BeaconUserCreateResponse:
      description: A Beacon User represents an end user that has been scanned against the Beacon Network.
      additionalProperties: true
      properties:
        id:
          $ref: '#/components/schemas/BeaconUserID'
        created_at:
          $ref: '#/components/schemas/Timestamp'
        updated_at:
          $ref: '#/components/schemas/UpdatedAtTimestamp'
        status:
          $ref: '#/components/schemas/BeaconUserStatus'
        program_id:
          $ref: '#/components/schemas/BeaconProgramID'
        client_user_id:
          $ref: '#/components/schemas/ClientUserID'
        user:
          $ref: '#/components/schemas/BeaconUserData'
        audit_trail:
          $ref: '#/components/schemas/BeaconAuditTrail'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - id
      - created_at
      - updated_at
      - status
      - program_id
      - client_user_id
      - user
      - audit_trail
      - request_id
      type: object
    BeaconUserData:
      type: object
      title: BeaconUserData
      description: A Beacon User's data and resulting analysis when checked against duplicate records and the Beacon Fraud Network.
      properties:
        date_of_birth:
          $ref: '#/components/schemas/ISO8601Date'
        name:
          $ref: '#/components/schemas/BeaconUserName'
        address:
          $ref: '#/components/schemas/BeaconUserAddress'
        email_address:
          $ref: '#/components/schemas/EmailAddressNullable'
        phone_number:
          $ref: '#/components/schemas/BeaconUserPhoneNumber'
        id_number:
          $ref: '#/components/schemas/BeaconUserIDNumber'
        ip_address:
          $ref: '#/components/schemas/IPAddress'
      required:
      - date_of_birth
      - name
      - address
      - email_address
      - phone_number
      - id_number
      - ip_address
      additionalProperties: true
    BeaconUserGetRequest:
      description: Request input for fetching a Beacon User
      type: object
      properties:
        beacon_user_id:
          $ref: '#/components/schemas/BeaconUserID'
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
      required:
      - beacon_user_id
    BeaconUserGetResponse:
      description: A Beacon User represents an end user that has been scanned against the Beacon Network.
      additionalProperties: true
      properties:
        id:
          $ref: '#/components/schemas/BeaconUserID'
        created_at:
          $ref: '#/components/schemas/Timestamp'
        updated_at:
          $ref: '#/components/schemas/UpdatedAtTimestamp'
        status:
          $ref: '#/components/schemas/BeaconUserStatus'
        program_id:
          $ref: '#/components/schemas/BeaconProgramID'
        client_user_id:
          $ref: '#/components/schemas/ClientUserID'
        user:
          $ref: '#/components/schemas/BeaconUserData'
        audit_trail:
          $ref: '#/components/schemas/BeaconAuditTrail'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - id
      - created_at
      - updated_at
      - status
      - program_id
      - client_user_id
      - user
      - audit_trail
      - request_id
      type: object
    BeaconUserID:
      type: string
      title: BeaconUserID
      example: becusr_42cF1MNo42r9Xj
      description: ID of the associated Beacon User.
    BeaconUserIDNumber:
      type: object
      title: BeaconUserIDNumber
      description: The ID number associated with a Beacon User.
      properties:
        value:
          $ref: '#/components/schemas/IDNumberValue'
        type:
          $ref: '#/components/schemas/IDNumberType'
      required:
      - value
      - type
      nullable: true
      additionalProperties: true
    BeaconUserName:
      type: object
      title: BeaconUserName
      description: The full name for a given Beacon User.
      properties:
        given_name:
          $ref: '#/components/schemas/GivenNameField'
        family_name:
          $ref: '#/components/schemas/FamilyNameField'
      required:
      - given_name
      - family_name
      additionalProperties: true
    BeaconUserNameNullable:
      type: object
      title: BeaconUserName
      description: The full name for a given Beacon User.
      properties:
        given_name:
          $ref: '#/components/schemas/GivenNameField'
        family_name:
          $ref: '#/components/schemas/FamilyNameField'
      required:
      - given_name
      - family_name
      nullable: true
      additionalProperties: true
    BeaconUserPhoneNumber:
      type: string
      title: BeaconUserPhoneNumber
      description: A phone number in E.164 format.
      example: "+19876543212"
      nullable: true
    BeaconUserRequestAddress:
      type: object
      title: BeaconUserRequestAddress
      description: Home address for the associated user. For more context on this field, see [Input Validation by Country](https://plaid.com/docs/identity-verification/hybrid-input-validation/#input-validation-by-country).
      properties:
        street:
          $ref: '#/components/schemas/Street'
        street2:
          $ref: '#/components/schemas/Street2'
        city:
          $ref: '#/components/schemas/City'
        region:
          $ref: '#/components/schemas/Region'
        postal_code:
          $ref: '#/components/schemas/PostalCode'
        country:
          $ref: '#/components/schemas/GenericCountryCode'
      required:
      - street
      - city
      - country
      additionalProperties: true
    BeaconUserRequestAddressNullable:
      type: object
      title: BeaconUserRequestAddress
      description: Home address for the associated user. For more context on this field, see [Input Validation by Country](https://plaid.com/docs/identity-verification/hybrid-input-validation/#input-validation-by-country).
      properties:
        street:
          $ref: '#/components/schemas/Street'
        street2:
          $ref: '#/components/schemas/Street2'
        city:
          $ref: '#/components/schemas/City'
        region:
          $ref: '#/components/schemas/Region'
        postal_code:
          $ref: '#/components/schemas/PostalCode'
        country:
          $ref: '#/components/schemas/GenericCountryCode'
      required:
      - street
      - city
      - country
      nullable: true
      additionalProperties: true
    BeaconUserRequestData:
      type: object
      title: BeaconUserRequestData
      description: A Beacon User's data which is used to check against duplicate records and the Beacon Fraud Network.
      properties:
        date_of_birth:
          $ref: '#/components/schemas/ISO8601Date'
        name:
          $ref: '#/components/schemas/BeaconUserName'
        address:
          $ref: '#/components/schemas/BeaconUserRequestAddress'
        email_address:
          $ref: '#/components/schemas/EmailAddress'
        phone_number:
          $ref: '#/components/schemas/BeaconUserPhoneNumber'
        id_number:
          $ref: '#/components/schemas/BeaconUserIDNumber'
        ip_address:
          $ref: '#/components/schemas/IPAddress'
      required:
      - date_of_birth
      - name
      - address
      additionalProperties: true
    BeaconUserReviewRequest:
      description: Request input for updating the status of a Beacon User
      type: object
      properties:
        beacon_user_id:
          $ref: '#/components/schemas/BeaconUserID'
        status:
          $ref: '#/components/schemas/BeaconUserStatus'
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
      required:
      - beacon_user_id
      - status
    BeaconUserRevision:
      type: object
      title: BeaconUserRevision
      description: A Beacon User Revision identifies a Beacon User at some point in its revision history.
      properties:
        id:
          $ref: '#/components/schemas/BeaconUserID'
        version:
          type: integer
          description: The `version` field begins with 1 and increments with each subsequent revision.
          example: 1
      required:
      - id
      - version
      additionalProperties: true
    BeaconUserStatus:
      type: string
      title: BeaconUserStatus
      description: |-
        A status of a Beacon User.

        `rejected`: The Beacon User has been rejected for fraud. Users can be automatically or manually rejected.

        `pending_review`: The Beacon User has been marked for review.

        `cleared`: The Beacon User has been cleared of fraud.
      enum:
      - rejected
      - pending_review
      - cleared
      example: cleared
    BeaconUserUpdateRequest:
      description: Request input for updating the identity data of a Beacon User.
      type: object
      properties:
        beacon_user_id:
          $ref: '#/components/schemas/BeaconUserID'
        user:
          $ref: '#/components/schemas/BeaconUserUpdateRequestData'
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
      required:
      - beacon_user_id
      - user
    BeaconUserUpdateRequestData:
      type: object
      title: BeaconUserUpdateRequestData
      description: A subset of a Beacon User's data which is used to patch the existing identity data associated with a Beacon User. At least one field must be provided,.
      properties:
        date_of_birth:
          $ref: '#/components/schemas/ISO8601Date'
        name:
          $ref: '#/components/schemas/BeaconUserNameNullable'
        address:
          $ref: '#/components/schemas/BeaconUserRequestAddressNullable'
        email_address:
          $ref: '#/components/schemas/EmailAddress'
        phone_number:
          $ref: '#/components/schemas/BeaconUserPhoneNumber'
        id_number:
          $ref: '#/components/schemas/BeaconUserIDNumber'
        ip_address:
          $ref: '#/components/schemas/IPAddress'
      additionalProperties: true
    BeaconUserUpdateResponse:
      description: A Beacon User represents an end user that has been scanned against the Beacon Network.
      additionalProperties: true
      properties:
        id:
          $ref: '#/components/schemas/BeaconUserID'
        created_at:
          $ref: '#/components/schemas/Timestamp'
        updated_at:
          $ref: '#/components/schemas/UpdatedAtTimestamp'
        status:
          $ref: '#/components/schemas/BeaconUserStatus'
        program_id:
          $ref: '#/components/schemas/BeaconProgramID'
        client_user_id:
          $ref: '#/components/schemas/ClientUserID'
        user:
          $ref: '#/components/schemas/BeaconUserData'
        audit_trail:
          $ref: '#/components/schemas/BeaconAuditTrail'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - id
      - created_at
      - updated_at
      - status
      - program_id
      - client_user_id
      - user
      - audit_trail
      - request_id
      type: object
    City:
      type: string
      example: Pawnee
      title: CityName
      description: City from the end user's address
    CityNullable:
      type: string
      example: Pawnee
      title: CityName
      description: City from the end user's address
      nullable: true
    ClientUserID:
      type: string
      title: ClientUserID
      minLength: 1
      example: your-db-id-3b24110
      description: A unique ID that identifies the end user in your system. This ID can also be used to associate user-specific data from other Plaid products. Financial Account Matching requires this field and the `/link/token/create` `client_user_id` to be consistent. Personally identifiable information, such as an email address or phone number, should not be used in the `client_user_id`.
    ClientUserIDNullable:
      type: string
      title: ClientUserID
      minLength: 1
      example: your-db-id-3b24110
      description: A unique ID that identifies the end user in your system. This ID can also be used to associate user-specific data from other Plaid products. Financial Account Matching requires this field and the `/link/token/create` `client_user_id` to be consistent. Personally identifiable information, such as an email address or phone number, should not be used in the `client_user_id`.
      nullable: true
    Cursor:
      description: An identifier that determines which page of results you receive.
      type: string
      example: eyJkaXJlY3Rpb24iOiJuZXh0Iiwib2Zmc2V0IjoiMTU5NDM
      nullable: true
    DashboardUser:
      title: DashboardUser
      type: object
      description: Account information associated with a team member with access to the Plaid dashboard.
      properties:
        id:
          $ref: '#/components/schemas/DashboardUserID'
        created_at:
          $ref: '#/components/schemas/Timestamp'
        email_address:
          $ref: '#/components/schemas/EmailAddress'
        status:
          $ref: '#/components/schemas/DashboardUserStatus'
      required:
      - id
      - created_at
      - email_address
      - status
      additionalProperties: true
    DashboardUserGetRequest:
      description: Request input for fetching a dashboard user
      type: object
      properties:
        dashboard_user_id:
          $ref: '#/components/schemas/DashboardUserID'
        secret:
          $ref: '#/components/schemas/APISecret'
        client_id:
          $ref: '#/components/schemas/APIClientID'
      required:
      - dashboard_user_id
    DashboardUserGetResponse:
      description: Account information associated with a team member with access to the Plaid dashboard.
      additionalProperties: true
      properties:
        id:
          $ref: '#/components/schemas/DashboardUserID'
        created_at:
          $ref: '#/components/schemas/Timestamp'
        email_address:
          $ref: '#/components/schemas/EmailAddress'
        status:
          $ref: '#/components/schemas/DashboardUserStatus'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - id
      - created_at
      - email_address
      - status
      - request_id
      type: object
    DashboardUserID:
      type: string
      title: DashboardUserID
      example: 54350110fedcbaf01234ffee
      description: ID of the associated user.
    DashboardUserIDNullable:
      type: string
      title: DashboardUserID
      example: 54350110fedcbaf01234ffee
      description: ID of the associated user.
      nullable: true
    DashboardUserListRequest:
      description: Request input for listing dashboard users
      type: object
      properties:
        secret:
          $ref: '#/components/schemas/APISecret'
        client_id:
          $ref: '#/components/schemas/APIClientID'
        cursor:
          $ref: '#/components/schemas/Cursor'
    DashboardUserListResponse:
      description: Paginated list of dashboard users
      additionalProperties: true
      properties:
        dashboard_users:
          description: List of dashboard users
          type: array
          items:
            $ref: '#/components/schemas/DashboardUser'
        next_cursor:
          $ref: '#/components/schemas/Cursor'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - dashboard_users
      - next_cursor
      - request_id
      type: object
    DashboardUserStatus:
      type: string
      example: active
      description: The current status of the user.
      enum:
      - invited
      - active
      - deactivated
    DateRange:
      type: object
      description: A date range with a start and end date
      example:
        ending: "1966-06-30"
        beginning: "1966-06-01"
      properties:
        beginning:
          $ref: '#/components/schemas/ISO8601Date'
        ending:
          $ref: '#/components/schemas/ISO8601Date'
      required:
      - beginning
      - ending
      title: DateRange
      additionalProperties: true
    DeprecatedClientUserID:
      type: string
      title: CustomerReference
      deprecated: true
      minLength: 1
      example: your-db-id-3b24110
      description: Specifying `user.client_user_id` is deprecated. Please provide `client_user_id` at the root level instead.
      nullable: true
    DocumentAnalysis:
      description: High level descriptions of how the associated document was processed. If a document fails verification, the details in the `analysis` object should help clarify why the document was rejected.
      type: object
      properties:
        authenticity:
          $ref: '#/components/schemas/DocumentAuthenticityMatchCode'
        image_quality:
          $ref: '#/components/schemas/ImageQuality'
        extracted_data:
          $ref: '#/components/schemas/PhysicalDocumentExtractedDataAnalysis'
      required:
      - authenticity
      - image_quality
      - extracted_data
      additionalProperties: true
    DocumentAuthenticityMatchCode:
      description: |-
        High level summary of whether the document in the provided image matches the formatting rules and security checks for the associated jurisdiction.

        For example, most identity documents have formatting rules like the following:


        The image of the person's face must have a certain contrast in order to highlight skin tone


        The subject in the document's image must remove eye glasses and pose in a certain way


        The informational fields (name, date of birth, ID number, etc.) must be colored and aligned according to specific rules


        Security features like watermarks and background patterns must be present

        So a `match` status for this field indicates that the document in the provided image seems to conform to the various formatting and security rules associated with the detected document.
      type: string
      enum:
      - match
      - partial_match
      - no_match
      - no_data
      example: match
    DocumentDateOfBirthMatchCode:
      description: A match summary describing the cross comparison between the subject's date of birth, extracted from the document image, and the date of birth they separately provided to the identity verification attempt.
      type: string
      enum:
      - match
      - partial_match
      - no_match
      example: match
    DocumentImage__Back:
      type: string
      example: https://example.plaid.com/verifications/idv_52xR9LKo77r1Np/documents/1/original_back.jpeg
      description: Temporary URL that expires after 60 seconds for downloading the original image of the back of the document. Might be null if the back of the document was not collected.
      nullable: true
    DocumentImage__CroppedBack:
      type: string
      example: https://example.plaid.com/verifications/idv_52xR9LKo77r1Np/documents/1/cropped_back.jpeg
      description: Temporary URL that expires after 60 seconds for downloading a cropped image containing just the back of the document. Might be null if the back of the document was not collected.
      nullable: true
    DocumentImage__CroppedFront:
      type: string
      example: https://example.plaid.com/verifications/idv_52xR9LKo77r1Np/documents/1/cropped_front.jpeg
      description: Temporary URL that expires after 60 seconds for downloading a cropped image containing just the front of the document.
      nullable: true
    DocumentImage__Face:
      type: string
      example: https://example.plaid.com/verifications/idv_52xR9LKo77r1Np/documents/1/face.jpeg
      description: Temporary URL that expires after 60 seconds for downloading a crop of just the user's face from the document image. Might be null if the document does not contain a face photo.
      nullable: true
    DocumentImage__Front:
      type: string
      example: https://example.plaid.com/verifications/idv_52xR9LKo77r1Np/documents/1/original_front.jpeg
      description: Temporary URL that expires after 60 seconds for downloading the uncropped original image of the front of the document.
      nullable: true
    DocumentNameMatchCode:
      description: A match summary describing the cross comparison between the subject's name, extracted from the document image, and the name they separately provided to identity verification attempt.
      type: string
      enum:
      - match
      - partial_match
      - no_match
      example: match
    DocumentStatus:
      type: string
      enum:
      - success
      - failed
      - manually_approved
      example: success
      title: DocumentStatus
      description: An outcome status for this specific document submission. Distinct from the overall `documentary_verification.status` that summarizes the verification outcome from one or more documents.
    DocumentaryVerification:
      description: Data, images, analysis, and results from the `documentary_verification` step. This field will be `null` unless `steps.documentary_verification` has reached a terminal state of either `success` or `failed`.
      title: DocumentaryVerification
      type: object
      properties:
        status:
          type: string
          description: The outcome status for the associated Identity Verification attempt's `documentary_verification` step. This field will always have the same value as `steps.documentary_verification`.
          example: success
        documents:
          description: |-
            An array of documents submitted to the `documentary_verification` step. Each entry represents one user submission, where each submission will contain both a front and back image, or just a front image, depending on the document type.

            Note: Plaid will automatically let a user submit a new set of document images up to three times if we detect that a previous attempt might have failed due to user error. For example, if the first set of document images are blurry or obscured by glare, the user will be asked to capture their documents again, resulting in at least two separate entries within `documents`. If the overall `documentary_verification` is `failed`, the user has exhausted their retry attempts.
          type: array
          items:
            $ref: '#/components/schemas/DocumentaryVerificationDocument'
      required:
      - status
      - documents
      nullable: true
      additionalProperties: true
    DocumentaryVerificationDocument:
      type: object
      description: Images, extracted data, and analysis from a user's identity document
      additionalProperties: true
      properties:
        status:
          $ref: '#/components/schemas/DocumentStatus'
        attempt:
          example: 1
          type: integer
          description: The `attempt` field begins with 1 and increments with each subsequent document upload.
        images:
          $ref: '#/components/schemas/PhysicalDocumentImages'
        extracted_data:
          $ref: '#/components/schemas/PhysicalDocumentExtractedData'
        analysis:
          $ref: '#/components/schemas/DocumentAnalysis'
        redacted_at:
          $ref: '#/components/schemas/TimestampNullable'
      required:
      - analysis
      - attempt
      - extracted_data
      - images
      - status
      - redacted_at
    EmailAddress:
      type: string
      format: email
      example: user@example.com
      title: EmailAddress
      description: A valid email address.
    EmailAddressNullable:
      type: string
      format: email
      example: user@example.com
      title: EmailAddress
      description: A valid email address.
      nullable: true
    EntityDocument:
      title: EntityDocument
      type: object
      description: An official document, usually issued by a governing body or institution, with an associated identifier.
      properties:
        type:
          $ref: '#/components/schemas/EntityDocumentType'
        number:
          $ref: '#/components/schemas/WatchlistScreeningDocumentValue'
      required:
      - type
      - number
      additionalProperties: true
    EntityDocumentType:
      type: string
      enum:
      - bik
      - business_number
      - imo
      - other
      - swift
      - tax_id
      title: EntityDocumentType
      example: swift
      description: |-
        The kind of official document represented by this object.

        `bik` - Russian bank code

        `business_number` - A number that uniquely identifies the business within a category of businesses

        `imo` - Number assigned to the entity by the International Maritime Organization

        `other` - Any document not covered by other categories

        `swift` - Number identifying a bank and branch.

        `tax_id` - Identification issued for the purpose of collecting taxes
    EntityScreeningHitAnalysis:
      type: object
      description: Analysis information describing why a screening hit matched the provided entity information
      properties:
        documents:
          $ref: '#/components/schemas/MatchSummaryCode'
        email_addresses:
          $ref: '#/components/schemas/MatchSummaryCode'
        locations:
          $ref: '#/components/schemas/MatchSummaryCode'
        names:
          $ref: '#/components/schemas/MatchSummaryCode'
        phone_numbers:
          $ref: '#/components/schemas/MatchSummaryCode'
        urls:
          $ref: '#/components/schemas/MatchSummaryCode'
        search_terms_version:
          type: integer
          description: The version of the entity screening's `search_terms` that were compared when the entity screening hit was added. entity screening hits are immutable once they have been reviewed. If changes are detected due to updates to the entity screening's `search_terms`, the associated entity program, or the list's source data prior to review, the entity screening hit will be updated to reflect those changes.
          example: 1
      required:
      - search_terms_version
      additionalProperties: true
    EntityScreeningHitData:
      type: object
      description: Information associated with the entity watchlist hit
      properties:
        documents:
          description: Documents associated with the watchlist hit
          type: array
          items:
            $ref: '#/components/schemas/EntityScreeningHitDocumentsItems'
        email_addresses:
          description: Email addresses associated with the watchlist hit
          type: array
          items:
            $ref: '#/components/schemas/EntityScreeningHitEmailsItems'
        locations:
          description: Locations associated with the watchlist hit
          type: array
          items:
            $ref: '#/components/schemas/GenericScreeningHitLocationItems'
        names:
          description: Names associated with the watchlist hit
          type: array
          items:
            $ref: '#/components/schemas/EntityScreeningHitNamesItems'
        phone_numbers:
          description: Phone numbers associated with the watchlist hit
          type: array
          items:
            $ref: '#/components/schemas/EntityScreeningHitsPhoneNumberItems'
        urls:
          description: URLs associated with the watchlist hit
          type: array
          items:
            $ref: '#/components/schemas/EntityScreeningHitUrlsItems'
      additionalProperties: true
    EntityScreeningHitDocumentsItems:
      type: object
      description: Analyzed documents for the associated hit
      properties:
        analysis:
          $ref: '#/components/schemas/MatchSummary'
        data:
          $ref: '#/components/schemas/EntityDocument'
      additionalProperties: true
    EntityScreeningHitEmails:
      type: object
      description: Email address information for the associated entity watchlist hit
      properties:
        email_address:
          $ref: '#/components/schemas/EmailAddress'
      required:
      - email_address
      additionalProperties: true
    EntityScreeningHitEmailsItems:
      type: object
      description: Analyzed emails for the associated hit
      properties:
        analysis:
          $ref: '#/components/schemas/MatchSummary'
        data:
          $ref: '#/components/schemas/EntityScreeningHitEmails'
      additionalProperties: true
    EntityScreeningHitNames:
      type: object
      description: Name information for the associated entity watchlist hit
      properties:
        full:
          type: string
          example: Al Qaida
          description: The full name of the entity.
        is_primary:
          type: boolean
          example: false
          description: Primary names are those most commonly used to refer to this entity. Only one name will ever be marked as primary.
        weak_alias_determination:
          $ref: '#/components/schemas/WeakAliasDetermination'
      required:
      - full
      - is_primary
      - weak_alias_determination
      additionalProperties: true
    EntityScreeningHitNamesItems:
      type: object
      description: Analyzed names for the associated hit
      properties:
        analysis:
          $ref: '#/components/schemas/MatchSummary'
        data:
          $ref: '#/components/schemas/EntityScreeningHitNames'
      additionalProperties: true
    EntityScreeningHitPhoneNumbers:
      type: object
      description: Phone number information associated with the entity screening hit
      properties:
        type:
          $ref: '#/components/schemas/PhoneType'
        phone_number:
          $ref: '#/components/schemas/WatchlistScreeningPhoneNumber'
      required:
      - type
      - phone_number
      additionalProperties: true
    EntityScreeningHitUrls:
      type: object
      description: URLs associated with the entity screening hit
      properties:
        url:
          $ref: '#/components/schemas/URL'
      required:
      - url
      additionalProperties: true
    EntityScreeningHitUrlsItems:
      type: object
      description: Analyzed URLs for the associated hit
      properties:
        analysis:
          $ref: '#/components/schemas/MatchSummary'
        data:
          $ref: '#/components/schemas/EntityScreeningHitUrls'
      additionalProperties: true
    EntityScreeningHitsPhoneNumberItems:
      type: object
      description: Analyzed phone numbers for the associated hit
      properties:
        analysis:
          $ref: '#/components/schemas/MatchSummary'
        data:
          $ref: '#/components/schemas/EntityScreeningHitPhoneNumbers'
      additionalProperties: true
    EntityWatchlistCode:
      type: string
      enum:
      - CA_CON
      - EU_CON
      - IZ_SOE
      - IZ_UNC
      - IZ_WBK
      - US_CAP
      - US_FSE
      - US_MBS
      - US_SDN
      - US_SSI
      - US_CMC
      - US_UVL
      - AU_CON
      - UK_HMC
      example: EU_CON
      description: |-
        Shorthand identifier for a specific screening list for entities.
         `AU_CON`: Australia Department of Foreign Affairs and Trade Consolidated List
         `CA_CON`: Government of Canada Consolidated List of Sanctions
         `EU_CON`: European External Action Service Consolidated List
         `IZ_SOE`: State Owned Enterprise List
         `IZ_UNC`: United Nations Consolidated Sanctions
         `IZ_WBK`: World Bank Listing of Ineligible Firms and Individuals
         `US_CAP`: US OFAC Correspondent Account or Payable-Through Account Sanctions
         `US_FSE`: US OFAC Foreign Sanctions Evaders
         `US_MBS`: US Non-SDN Menu-Based Sanctions
         `US_SDN`: US Specially Designated Nationals List
         `US_SSI`: US OFAC Sectoral Sanctions Identifications
         `US_CMC`: US OFAC Non-SDN Chinese Military-Industrial Complex List
         `US_UVL`: Bureau of Industry and Security Unverified List
         `UK_HMC`: UK HM Treasury Consolidated List
      title: EntityWatchlistCode
    EntityWatchlistProgram:
      type: object
      description: A program that configures the active lists, search parameters, and other behavior for initial and ongoing screening of entities.
      title: EntityWatchlistProgram
      properties:
        id:
          $ref: '#/components/schemas/EntityWatchlistProgramID'
        created_at:
          $ref: '#/components/schemas/Timestamp'
        is_rescanning_enabled:
          description: Indicator specifying whether the program is enabled and will perform daily rescans.
          type: boolean
          example: true
        lists_enabled:
          description: Watchlists enabled for the associated program
          type: array
          example:
          - EU_CON
          uniqueItems: true
          items:
            $ref: '#/components/schemas/EntityWatchlistCode'
        name:
          $ref: '#/components/schemas/EntityWatchlistScreeningProgramName'
        name_sensitivity:
          $ref: '#/components/schemas/ProgramNameSensitivity'
        audit_trail:
          $ref: '#/components/schemas/WatchlistScreeningAuditTrail'
        is_archived:
          $ref: '#/components/schemas/ProgramArchived'
      required:
      - id
      - created_at
      - is_rescanning_enabled
      - lists_enabled
      - name
      - name_sensitivity
      - audit_trail
      - is_archived
      additionalProperties: true
    EntityWatchlistProgramID:
      type: string
      example: entprg_2eRPsDnL66rZ7H
      title: EntityWatchlistProgramID
      description: ID of the associated entity program.
    EntityWatchlistScreening:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/EntityWatchlistScreeningID'
        search_terms:
          $ref: '#/components/schemas/EntityWatchlistScreeningSearchTerms'
        assignee:
          $ref: '#/components/schemas/DashboardUserIDNullable'
        status:
          $ref: '#/components/schemas/WatchlistScreeningStatus'
        client_user_id:
          $ref: '#/components/schemas/ClientUserIDNullable'
        audit_trail:
          $ref: '#/components/schemas/WatchlistScreeningAuditTrail'
      required:
      - id
      - search_terms
      - assignee
      - status
      - client_user_id
      - audit_trail
      title: EntityWatchlistScreening
      description: 'The entity screening object allows you to represent an entity in your system, update its profile, and search for it on various watchlists. Note: Rejected entity screenings will not receive new hits, regardless of entity program configuration.'
      additionalProperties: true
    EntityWatchlistScreeningHit:
      type: object
      description: Data from a government watchlist that has been attached to the screening.
      title: EntityWatchlistScreeningHit
      properties:
        id:
          $ref: '#/components/schemas/EntityWatchlistScreeningHitID'
        review_status:
          $ref: '#/components/schemas/WatchlistScreeningHitStatus'
        first_active:
          $ref: '#/components/schemas/Timestamp'
        inactive_since:
          $ref: '#/components/schemas/TimestampNullable'
        historical_since:
          $ref: '#/components/schemas/TimestampNullable'
        list_code:
          $ref: '#/components/schemas/EntityWatchlistCode'
        plaid_uid:
          $ref: '#/components/schemas/InternalUID'
        source_uid:
          $ref: '#/components/schemas/SourceUID'
        analysis:
          $ref: '#/components/schemas/EntityScreeningHitAnalysis'
        data:
          $ref: '#/components/schemas/EntityScreeningHitData'
      required:
      - id
      - review_status
      - first_active
      - inactive_since
      - historical_since
      - list_code
      - plaid_uid
      - source_uid
      additionalProperties: true
    EntityWatchlistScreeningHitID:
      type: string
      example: enthit_52xR9LKo77r1Np
      title: EntityWatchlistScreeningHitID
      description: ID of the associated entity screening hit.
    EntityWatchlistScreeningID:
      type: string
      example: entscr_52xR9LKo77r1Np
      title: EntityWatchlistScreeningID
      description: ID of the associated entity screening.
    EntityWatchlistScreeningName:
      type: string
      title: EntityWatchlistScreeningName
      minLength: 1
      example: Al-Qaida
      description: The name of the organization being screened.
    EntityWatchlistScreeningProgramName:
      type: string
      title: EntityWatchlistScreeningProgramName
      example: Sample Program
      minLength: 1
      description: A name for the entity program to define its purpose. For example, "High Risk Organizations" or "Applicants".
    EntityWatchlistScreeningReview:
      title: EntityWatchlistScreeningReview
      type: object
      description: |-
        A review submitted by a team member for an entity watchlist screening. A review can be either a comment on the current screening state, actions taken
        against hits attached to the watchlist screening, or both.
      properties:
        id:
          $ref: '#/components/schemas/EntityWatchlistScreeningReviewID'
        confirmed_hits:
          type: array
          description: Hits marked as a true positive after thorough manual review. These hits will never recur or be updated once dismissed. In most cases, confirmed hits indicate that the customer should be rejected.
          items:
            $ref: '#/components/schemas/EntityWatchlistScreeningHitID'
        dismissed_hits:
          type: array
          description: Hits marked as a false positive after thorough manual review. These hits will never recur or be updated once dismissed.
          items:
            $ref: '#/components/schemas/EntityWatchlistScreeningHitID'
        comment:
          $ref: '#/components/schemas/ReviewComment'
        audit_trail:
          $ref: '#/components/schemas/WatchlistScreeningAuditTrail'
      required:
      - id
      - confirmed_hits
      - dismissed_hits
      - comment
      - audit_trail
      additionalProperties: true
    EntityWatchlistScreeningReviewID:
      type: string
      title: EntityWatchlistScreeningReviewID
      example: entrev_aCLNRxK3UVzn2r
      description: ID of the associated entity review.
    EntityWatchlistScreeningSearchTerms:
      type: object
      description: Search terms associated with an entity used for searching against watchlists
      properties:
        entity_watchlist_program_id:
          $ref: '#/components/schemas/EntityWatchlistProgramID'
        legal_name:
          $ref: '#/components/schemas/EntityWatchlistScreeningName'
        document_number:
          $ref: '#/components/schemas/WatchlistScreeningDocumentValueNullable'
        email_address:
          $ref: '#/components/schemas/EmailAddressNullable'
        country:
          $ref: '#/components/schemas/GenericCountryCodeNullable'
        phone_number:
          $ref: '#/components/schemas/WatchlistScreeningPhoneNumberNullable'
        url:
          $ref: '#/components/schemas/URLNullable'
        version:
          type: integer
          description: The current version of the search terms. Starts at `1` and increments with each edit to `search_terms`.
          example: 1
      required:
      - entity_watchlist_program_id
      - legal_name
      - document_number
      - email_address
      - country
      - phone_number
      - url
      - version
      additionalProperties: true
    EntityWatchlistSearchTerms:
      type: object
      required:
      - entity_watchlist_program_id
      - legal_name
      description: Search inputs for creating an entity watchlist screening
      properties:
        entity_watchlist_program_id:
          $ref: '#/components/schemas/EntityWatchlistProgramID'
        legal_name:
          $ref: '#/components/schemas/EntityWatchlistScreeningName'
        document_number:
          $ref: '#/components/schemas/WatchlistScreeningDocumentValueNullable'
        email_address:
          $ref: '#/components/schemas/EmailAddressNullable'
        country:
          $ref: '#/components/schemas/GenericCountryCodeNullable'
        phone_number:
          $ref: '#/components/schemas/WatchlistScreeningPhoneNumberNullable'
        url:
          $ref: '#/components/schemas/URLNullable'
    ExpirationDate:
      description: |-
        A description of whether the associated document was expired when the verification was performed.

        Note: In the case where an expiration date is not present on the document or failed to be extracted, this value will be `no_data`.
      type: string
      enum:
      - not_expired
      - expired
      - no_data
      example: not_expired
    FamilyNameField:
      type: string
      example: Knope
      title: FamilyName
      description: A string with at least one non-whitespace character, with a max length of 100 characters.
    FraudAmount:
      type: object
      title: FraudAmount
      description: |-
        The amount and currency of the fraud or attempted fraud.
        `fraud_amount` should be omitted to indicate an unknown fraud amount.
      properties:
        iso_currency_code:
          $ref: '#/components/schemas/ISOCurrencyCode'
        value:
          type: number
          format: double
          example: 100
          description: |-
            The amount value.
            This value can be 0 to indicate no money was lost.
            Must not contain more than two digits of precision (e.g., `1.23`).
      required:
      - iso_currency_code
      - value
      nullable: true
      additionalProperties: true
    GenericCountryCode:
      type: string
      title: GenericCountryCode
      minLength: 2
      example: US
      description: Valid, capitalized, two-letter ISO code representing the country of this object. Must be in ISO 3166-1 alpha-2 form.
    GenericCountryCodeNullable:
      type: string
      title: GenericCountryCode
      minLength: 2
      example: US
      description: Valid, capitalized, two-letter ISO code representing the country of this object. Must be in ISO 3166-1 alpha-2 form.
      nullable: true
    GenericScreeningHitLocationItems:
      type: object
      description: Analyzed location information for the associated hit
      properties:
        analysis:
          $ref: '#/components/schemas/MatchSummary'
        data:
          $ref: '#/components/schemas/WatchlistScreeningHitLocations'
      additionalProperties: true
    GivenNameField:
      type: string
      example: Leslie
      title: GivenName
      description: A string with at least one non-whitespace character, with a max length of 100 characters.
    IDNumberType:
      description: A globally unique and human readable ID type, specific to the country and document category. For more context on this field, see [Hybrid Input Validation](https://plaid.com/docs/identity-verification/hybrid-input-validation).
      type: string
      enum:
      - ar_dni
      - au_drivers_license
      - au_passport
      - br_cpf
      - ca_sin
      - cl_run
      - cn_resident_card
      - co_nit
      - dk_cpr
      - eg_national_id
      - es_dni
      - es_nie
      - hk_hkid
      - in_pan
      - it_cf
      - jo_civil_id
      - jp_my_number
      - ke_huduma_namba
      - kw_civil_id
      - mx_curp
      - mx_rfc
      - my_nric
      - ng_nin
      - nz_drivers_license
      - om_civil_id
      - ph_psn
      - pl_pesel
      - ro_cnp
      - sa_national_id
      - se_pin
      - sg_nric
      - tr_tc_kimlik
      - us_ssn
      - us_ssn_last_4
      - za_smart_id
      example: us_ssn
      title: IDNumberType
    IDNumberValue:
      type: string
      example: "123456789"
      title: IDNumberValue
      description: Value of identity document value typed in by user. Alpha-numeric, with all formatting characters stripped.
    IPAddress:
      description: An IPv4 or IPV6 address.
      type: string
      example: 192.0.2.42
      title: IPAddress
      nullable: true
    ISO8601Date:
      type: string
      format: date
      title: ISO8601Date
      example: "1990-05-29"
      description: A date in the format YYYY-MM-DD (RFC 3339 Section 5.6).
    ISO8601DateNullable:
      type: string
      format: date
      title: ISO8601Date
      example: "1990-05-29"
      description: A date in the format YYYY-MM-DD (RFC 3339 Section 5.6).
      nullable: true
    ISOCurrencyCode:
      type: string
      title: ISOCurrencyCode
      enum:
      - USD
      description: An ISO-4217 currency code.
      minLength: 3
    IdempotencyFlag:
      type: boolean
      example: true
      title: IdempotencyFlag
      description: |-
        An optional flag specifying how you would like Plaid to handle attempts to create an Identity Verification when an Identity Verification already exists for the provided `client_user_id` and `template_id`.
        If idempotency is enabled, Plaid will return the existing Identity Verification. If idempotency is disabled, Plaid will reject the request with a `400 Bad Request` status code if an Identity Verification already exists for the supplied `client_user_id` and `template_id`.
      nullable: true
    IdentityVerification:
      type: object
      description: A identity verification attempt represents a customer's attempt to verify their identity, reflecting the required steps for completing the session, the results for each step, and information collected in the process.
      additionalProperties: true
      properties:
        id:
          $ref: '#/components/schemas/IdentityVerificationID'
        client_user_id:
          $ref: '#/components/schemas/ClientUserID'
        created_at:
          $ref: '#/components/schemas/Timestamp'
        completed_at:
          $ref: '#/components/schemas/TimestampNullable'
        previous_attempt_id:
          $ref: '#/components/schemas/PreviousIdentityVerificationAttemptID'
        shareable_url:
          $ref: '#/components/schemas/ShareableURL'
        template:
          $ref: '#/components/schemas/IdentityVerificationTemplateReference'
        user:
          $ref: '#/components/schemas/IdentityVerificationUserData'
        status:
          $ref: '#/components/schemas/IdentityVerificationStatus'
        steps:
          $ref: '#/components/schemas/IdentityVerificationStepSummary'
        documentary_verification:
          $ref: '#/components/schemas/DocumentaryVerification'
        selfie_check:
          $ref: '#/components/schemas/SelfieCheck'
        kyc_check:
          $ref: '#/components/schemas/KYCCheckDetails'
        risk_check:
          $ref: '#/components/schemas/RiskCheckDetails'
        watchlist_screening_id:
          $ref: '#/components/schemas/WatchlistScreeningIndividualIDNullable'
        redacted_at:
          $ref: '#/components/schemas/TimestampNullable'
      required:
      - id
      - client_user_id
      - created_at
      - completed_at
      - previous_attempt_id
      - shareable_url
      - template
      - user
      - status
      - steps
      - documentary_verification
      - selfie_check
      - kyc_check
      - risk_check
      - watchlist_screening_id
      - redacted_at
    IdentityVerificationAutofillAddress:
      description: |-
        Even if an address has been autofilled, some fields may be null depending on the region's addressing system. For example:

        Addresses from the United Kingdom will not include a region

        Addresses from Hong Kong will not include postal code
      type: object
      properties:
        street:
          $ref: '#/components/schemas/Street'
        street2:
          $ref: '#/components/schemas/Street2'
        city:
          $ref: '#/components/schemas/CityNullable'
        region:
          $ref: '#/components/schemas/Region'
        postal_code:
          $ref: '#/components/schemas/PostalCode'
        country:
          $ref: '#/components/schemas/GenericCountryCode'
        po_box:
          $ref: '#/components/schemas/POBoxStatus'
        type:
          $ref: '#/components/schemas/AddressPurposeLabel'
      required:
      - street
      - street2
      - city
      - region
      - postal_code
      - country
      - po_box
      - type
      nullable: true
      additionalProperties: true
    IdentityVerificationAutofillCreateRequest:
      type: object
      description: Request input to autofill an Identity Verification
      properties:
        identity_verification_id:
          $ref: '#/components/schemas/IdentityVerificationID'
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
      required:
      - identity_verification_id
    IdentityVerificationAutofillCreateResponse:
      description: Autofill represents unverified customer information. This needs to be confirmed by the customer before using.
      additionalProperties: true
      properties:
        status:
          $ref: '#/components/schemas/IdentityVerificationAutofillStatus'
        user:
          $ref: '#/components/schemas/IdentityVerificationAutofillUserData'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - status
      - user
      - request_id
      type: object
    IdentityVerificationAutofillStatus:
      description: A status enum indicating whether autofill succeeded or failed.
      type: string
      enum:
      - success
      - failed
      example: success
      title: IdentityVerificationAutofillStatus
    IdentityVerificationAutofillUserData:
      description: User information that was autofilled. All this information should be confirmed by the user before using.
      type: object
      properties:
        name:
          $ref: '#/components/schemas/IdentityVerificationResponseUserName'
        address:
          $ref: '#/components/schemas/IdentityVerificationAutofillAddress'
        id_number:
          $ref: '#/components/schemas/UserIDNumber'
      required:
      - name
      - address
      - id_number
      nullable: true
      additionalProperties: true
    IdentityVerificationConsent:
      type: boolean
      example: true
      default: false
      title: IdentityVerificationConsent
      description: |-
        A flag specifying whether the end user has already agreed to a privacy policy specifying that their data will be shared with Plaid for verification purposes.

        If `gave_consent` is set to `true`, the `accept_tos` step will be marked as `skipped` and the end user's session will start at the next step requirement.
    IdentityVerificationCreateRequest:
      type: object
      properties:
        client_user_id:
          $ref: '#/components/schemas/ClientUserID'
        is_shareable:
          type: boolean
          example: true
          title: EnableSharableLink
          description: A flag specifying whether you would like Plaid to expose a shareable URL for the verification being created.
        template_id:
          $ref: '#/components/schemas/IdentityVerificationTemplateID'
        gave_consent:
          $ref: '#/components/schemas/IdentityVerificationConsent'
        user:
          $ref: '#/components/schemas/IdentityVerificationCreateRequestUser'
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        is_idempotent:
          $ref: '#/components/schemas/IdempotencyFlag'
      required:
      - is_shareable
      - template_id
      - gave_consent
      description: Request schema for '/identity_verification/create'
    IdentityVerificationCreateRequestUser:
      description: |-
        User information collected outside of Link, most likely via your own onboarding process.

        Each of the following identity fields are optional:

        `email_address`

        `phone_number`

        `date_of_birth`

        `name`

        `address`

        `id_number`

        Specifically, these fields are optional in that they can either be fully provided (satisfying every required field in their subschema) or omitted from the request entirely by not providing the key or value.
        Providing these fields via the API will result in Link skipping the data collection process for the associated user. All verification steps enabled in the associated Identity Verification Template will still be run. Verification steps will either be run immediately, or once the user completes the `accept_tos` step, depending on the value provided to the `gave_consent` field.
        If you are not using the shareable URL feature, you can optionally provide these fields via `/link/token/create` instead; both `/identity_verification/create` and `/link/token/create` are valid ways to provide this information. Note that if you provide a non-`null` user data object via `/identity_verification/create`, any user data fields entered via `/link/token/create` for the same `client_user_id` will be ignored when prefilling Link.
      nullable: true
      properties:
        email_address:
          $ref: '#/components/schemas/EmailAddress'
        phone_number:
          $ref: '#/components/schemas/IdentityVerificationUserPhoneNumber'
        date_of_birth:
          $ref: '#/components/schemas/ISO8601Date'
        name:
          $ref: '#/components/schemas/IdentityVerificationRequestUserName'
        address:
          $ref: '#/components/schemas/UserAddress'
        id_number:
          $ref: '#/components/schemas/UserIDNumber'
        client_user_id:
          $ref: '#/components/schemas/DeprecatedClientUserID'
      type: object
    IdentityVerificationCreateResponse:
      description: A identity verification attempt represents a customer's attempt to verify their identity, reflecting the required steps for completing the session, the results for each step, and information collected in the process.
      additionalProperties: true
      properties:
        id:
          $ref: '#/components/schemas/IdentityVerificationID'
        client_user_id:
          $ref: '#/components/schemas/ClientUserID'
        created_at:
          $ref: '#/components/schemas/Timestamp'
        completed_at:
          $ref: '#/components/schemas/TimestampNullable'
        previous_attempt_id:
          $ref: '#/components/schemas/PreviousIdentityVerificationAttemptID'
        shareable_url:
          $ref: '#/components/schemas/ShareableURL'
        template:
          $ref: '#/components/schemas/IdentityVerificationTemplateReference'
        user:
          $ref: '#/components/schemas/IdentityVerificationUserData'
        status:
          $ref: '#/components/schemas/IdentityVerificationStatus'
        steps:
          $ref: '#/components/schemas/IdentityVerificationStepSummary'
        documentary_verification:
          $ref: '#/components/schemas/DocumentaryVerification'
        selfie_check:
          $ref: '#/components/schemas/SelfieCheck'
        kyc_check:
          $ref: '#/components/schemas/KYCCheckDetails'
        risk_check:
          $ref: '#/components/schemas/RiskCheckDetails'
        watchlist_screening_id:
          $ref: '#/components/schemas/WatchlistScreeningIndividualIDNullable'
        redacted_at:
          $ref: '#/components/schemas/TimestampNullable'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - id
      - client_user_id
      - created_at
      - completed_at
      - previous_attempt_id
      - shareable_url
      - template
      - user
      - status
      - steps
      - documentary_verification
      - selfie_check
      - kyc_check
      - risk_check
      - watchlist_screening_id
      - redacted_at
      - request_id
      type: object
    IdentityVerificationDocumentAddressResponse:
      description: |-
        The address extracted from the document. The address must at least contain the following fields to be a valid address: `street`, `city`, `country`. If any are missing or unable to be extracted, the address will be null.

        `region`, and `postal_code` may be null based on the addressing system. For example:

        Addresses from the United Kingdom will not include a region

        Addresses from Hong Kong will not include postal code

        Note: Optical Character Recognition (OCR) technology may sometimes extract incorrect data from a document.
      type: object
      properties:
        street:
          $ref: '#/components/schemas/IdentityVerificationDocumentStreet'
        city:
          $ref: '#/components/schemas/IdentityVerificationDocumentCity'
        region:
          $ref: '#/components/schemas/IdentityVerificationDocumentRegion'
        postal_code:
          $ref: '#/components/schemas/IdentityVerificationDocumentPostalCode'
        country:
          $ref: '#/components/schemas/IdentityVerificationDocumentCountryCode'
      required:
      - street
      - city
      - region
      - postal_code
      - country
      nullable: true
      additionalProperties: true
    IdentityVerificationDocumentCity:
      type: string
      example: Pawnee
      title: IdentityVerificationDocumentCity
      description: City extracted from the document.
    IdentityVerificationDocumentCountryCode:
      type: string
      title: IdentityVerificationDocumentCountryCode
      minLength: 2
      example: US
      description: Valid, capitalized, two-letter ISO code representing the country extracted from the document. Must be in ISO 3166-1 alpha-2 form.
    IdentityVerificationDocumentISO8601DateOfBirth:
      type: string
      format: date
      title: IdentityVerificationDocumentISO8601DateOfBirth
      example: "1990-05-29"
      description: A date extracted from the document in the format YYYY-MM-DD (RFC 3339 Section 5.6).
      nullable: true
    IdentityVerificationDocumentPostalCode:
      type: string
      example: "46001"
      title: IdentityVerificationDocumentPostalCode
      description: The postal code extracted from the document. Between 2 and 10 alphanumeric characters. For US-based addresses this must be 5 numeric digits.
      nullable: true
    IdentityVerificationDocumentRegion:
      type: string
      example: IN
      title: IdentityVerificationDocumentRegion
      description: An ISO 3166-2 subdivision code extracted from the document. Related terms would be "state", "province", "prefecture", "zone", "subdivision", etc.
      nullable: true
    IdentityVerificationDocumentStreet:
      type: string
      example: 123 Main St. Unit 42
      title: IdentityVerificationDocumentStreet
      description: The full street address extracted from the document.
    IdentityVerificationGetRequest:
      description: Request input for fetching an Identity Verification
      type: object
      properties:
        identity_verification_id:
          $ref: '#/components/schemas/IdentityVerificationID'
        secret:
          $ref: '#/components/schemas/APISecret'
        client_id:
          $ref: '#/components/schemas/APIClientID'
      required:
      - identity_verification_id
    IdentityVerificationGetResponse:
      description: A identity verification attempt represents a customer's attempt to verify their identity, reflecting the required steps for completing the session, the results for each step, and information collected in the process.
      additionalProperties: true
      properties:
        id:
          $ref: '#/components/schemas/IdentityVerificationID'
        client_user_id:
          $ref: '#/components/schemas/ClientUserID'
        created_at:
          $ref: '#/components/schemas/Timestamp'
        completed_at:
          $ref: '#/components/schemas/TimestampNullable'
        previous_attempt_id:
          $ref: '#/components/schemas/PreviousIdentityVerificationAttemptID'
        shareable_url:
          $ref: '#/components/schemas/ShareableURL'
        template:
          $ref: '#/components/schemas/IdentityVerificationTemplateReference'
        user:
          $ref: '#/components/schemas/IdentityVerificationUserData'
        status:
          $ref: '#/components/schemas/IdentityVerificationStatus'
        steps:
          $ref: '#/components/schemas/IdentityVerificationStepSummary'
        documentary_verification:
          $ref: '#/components/schemas/DocumentaryVerification'
        selfie_check:
          $ref: '#/components/schemas/SelfieCheck'
        kyc_check:
          $ref: '#/components/schemas/KYCCheckDetails'
        risk_check:
          $ref: '#/components/schemas/RiskCheckDetails'
        watchlist_screening_id:
          $ref: '#/components/schemas/WatchlistScreeningIndividualIDNullable'
        redacted_at:
          $ref: '#/components/schemas/TimestampNullable'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - id
      - client_user_id
      - created_at
      - completed_at
      - previous_attempt_id
      - shareable_url
      - template
      - user
      - status
      - steps
      - documentary_verification
      - selfie_check
      - kyc_check
      - risk_check
      - watchlist_screening_id
      - redacted_at
      - request_id
      type: object
    IdentityVerificationID:
      type: string
      example: idv_52xR9LKo77r1Np
      title: IdentityVerificationID
      description: ID of the associated Identity Verification attempt.
    IdentityVerificationListRequest:
      description: Request input for listing Identity Verifications
      type: object
      properties:
        secret:
          $ref: '#/components/schemas/APISecret'
        client_id:
          $ref: '#/components/schemas/APIClientID'
        template_id:
          $ref: '#/components/schemas/IdentityVerificationTemplateID'
        client_user_id:
          $ref: '#/components/schemas/ClientUserID'
        cursor:
          $ref: '#/components/schemas/Cursor'
      required:
      - template_id
      - client_user_id
    IdentityVerificationListResponse:
      description: Paginated list of Plaid sessions.
      additionalProperties: true
      properties:
        identity_verifications:
          description: List of Plaid sessions
          type: array
          items:
            $ref: '#/components/schemas/IdentityVerification'
        next_cursor:
          $ref: '#/components/schemas/Cursor'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - identity_verifications
      - next_cursor
      - request_id
      type: object
    IdentityVerificationRequestUser:
      type: object
      description: |-
        User information collected outside of Link, most likely via your own onboarding process.

        Each of the following identity fields are optional:

        `email_address`

        `phone_number`

        `date_of_birth`

        `name`

        `address`

        `id_number`

        Specifically, these fields are optional in that they can either be fully provided (satisfying every required field in their subschema) or omitted from the request entirely by not providing the key or value.
        Providing these fields via the API will result in Link skipping the data collection process for the associated user. All verification steps enabled in the associated Identity Verification Template will still be run. Verification steps will either be run immediately, or once the user completes the `accept_tos` step, depending on the value provided to the `gave_consent` field.
      properties:
        email_address:
          $ref: '#/components/schemas/EmailAddress'
        phone_number:
          $ref: '#/components/schemas/IdentityVerificationUserPhoneNumber'
        date_of_birth:
          $ref: '#/components/schemas/ISO8601Date'
        name:
          $ref: '#/components/schemas/IdentityVerificationRequestUserName'
        address:
          $ref: '#/components/schemas/UserAddress'
        id_number:
          $ref: '#/components/schemas/UserIDNumber'
      nullable: true
      additionalProperties: true
    IdentityVerificationRequestUserName:
      type: object
      properties:
        given_name:
          $ref: '#/components/schemas/GivenNameField'
        family_name:
          $ref: '#/components/schemas/FamilyNameField'
      required:
      - given_name
      - family_name
      description: You can use this field to pre-populate the user's legal name; if it is provided here, they will not be prompted to enter their name in the identity verification attempt.
      nullable: true
    IdentityVerificationResponseUserName:
      type: object
      properties:
        given_name:
          $ref: '#/components/schemas/GivenNameField'
        family_name:
          $ref: '#/components/schemas/FamilyNameField'
      required:
      - given_name
      - family_name
      description: The full name provided by the user. If the user has not submitted their name, this field will be null. Otherwise, both fields are guaranteed to be filled.
      additionalProperties: true
      nullable: true
    IdentityVerificationRetryRequest:
      type: object
      description: Request input for retrying an identity verification attempt
      properties:
        client_user_id:
          $ref: '#/components/schemas/ClientUserID'
        template_id:
          $ref: '#/components/schemas/IdentityVerificationTemplateID'
        strategy:
          $ref: '#/components/schemas/Strategy'
        user:
          $ref: '#/components/schemas/IdentityVerificationRequestUser'
        steps:
          $ref: '#/components/schemas/IdentityVerificationRetryRequestStepsObject'
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
      required:
      - client_user_id
      - strategy
      - template_id
    IdentityVerificationRetryRequestStepsObject:
      type: object
      description: |-
        Instructions for the `custom` retry strategy specifying which steps should be required or skipped.


        Note:


        This field must be provided when the retry strategy is `custom` and must be omitted otherwise.

        Custom retries override settings in your Plaid Template. For example, if your Plaid Template has `verify_sms` disabled, a custom retry with `verify_sms` enabled will still require the step.

        The `selfie_check` step is currently not supported on the sandbox server. Sandbox requests will silently disable the `selfie_check` step when provided.
      properties:
        verify_sms:
          description: A boolean field specifying whether the new session should require or skip the `verify_sms` step.
          type: boolean
        kyc_check:
          description: A boolean field specifying whether the new session should require or skip the `kyc_check` step.
          type: boolean
        documentary_verification:
          description: A boolean field specifying whether the new session should require or skip the `documentary_verification` step.
          type: boolean
        selfie_check:
          description: A boolean field specifying whether the new session should require or skip the `selfie_check` step.
          type: boolean
      required:
      - verify_sms
      - kyc_check
      - documentary_verification
      - selfie_check
      nullable: true
    IdentityVerificationRetryResponse:
      description: A identity verification attempt represents a customer's attempt to verify their identity, reflecting the required steps for completing the session, the results for each step, and information collected in the process.
      additionalProperties: true
      properties:
        id:
          $ref: '#/components/schemas/IdentityVerificationID'
        client_user_id:
          $ref: '#/components/schemas/ClientUserID'
        created_at:
          $ref: '#/components/schemas/Timestamp'
        completed_at:
          $ref: '#/components/schemas/TimestampNullable'
        previous_attempt_id:
          $ref: '#/components/schemas/PreviousIdentityVerificationAttemptID'
        shareable_url:
          $ref: '#/components/schemas/ShareableURL'
        template:
          $ref: '#/components/schemas/IdentityVerificationTemplateReference'
        user:
          $ref: '#/components/schemas/IdentityVerificationUserData'
        status:
          $ref: '#/components/schemas/IdentityVerificationStatus'
        steps:
          $ref: '#/components/schemas/IdentityVerificationStepSummary'
        documentary_verification:
          $ref: '#/components/schemas/DocumentaryVerification'
        selfie_check:
          $ref: '#/components/schemas/SelfieCheck'
        kyc_check:
          $ref: '#/components/schemas/KYCCheckDetails'
        risk_check:
          $ref: '#/components/schemas/RiskCheckDetails'
        watchlist_screening_id:
          $ref: '#/components/schemas/WatchlistScreeningIndividualIDNullable'
        redacted_at:
          $ref: '#/components/schemas/TimestampNullable'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - id
      - client_user_id
      - created_at
      - completed_at
      - previous_attempt_id
      - shareable_url
      - template
      - user
      - status
      - steps
      - documentary_verification
      - selfie_check
      - kyc_check
      - risk_check
      - watchlist_screening_id
      - redacted_at
      - request_id
      type: object
    IdentityVerificationStatus:
      type: string
      enum:
      - active
      - success
      - failed
      - expired
      - canceled
      - pending_review
      example: success
      title: IdentityVerificationStatus
      description: |-
        The status of this Identity Verification attempt.


        `active` - The Identity Verification attempt is incomplete. The user may have completed part of the session, but has neither failed or passed.

        `success` - The Identity Verification attempt has completed, passing all steps defined to the associated Identity Verification template

        `failed` - The user failed one or more steps in the session and was told to contact support.

        `expired` - The Identity Verification attempt was active for a long period of time without being completed and was automatically marked as expired. Note that sessions currently do not expire. Automatic expiration is expected to be enabled in the future.

        `canceled` - The Identity Verification attempt was canceled, either via the dashboard by a user, or via API. The user may have completed part of the session, but has neither failed or passed.

        `pending_review` - The Identity Verification attempt template was configured to perform a screening that had one or more hits needing review.
    IdentityVerificationStepStatus:
      type: string
      enum:
      - success
      - active
      - failed
      - waiting_for_prerequisite
      - not_applicable
      - skipped
      - expired
      - canceled
      - pending_review
      - manually_approved
      - manually_rejected
      example: success
      title: IdentityVerificationStepStatus
      description: The status of a step in the Identity Verification process.
    IdentityVerificationStepSummary:
      type: object
      description: |-
        Each step will be one of the following values:


        `active` - This step is the user's current step. They are either in the process of completing this step, or they recently closed their Identity Verification attempt while in the middle of this step. Only one step will be marked as `active` at any given point.

        `success` - The Identity Verification attempt has completed this step.

        `failed` - The user failed this step. This can either call the user to fail the session as a whole, or cause them to fallback to another step depending on how the Identity Verification template is configured. A failed step does not imply a failed session.

        `waiting_for_prerequisite` - The user needs to complete another step first, before they progress to this step. This step may never run, depending on if the user fails an earlier step or if the step is only run as a fallback.

        `not_applicable` - This step will not be run for this session.

        `skipped` - The retry instructions that created this Identity Verification attempt specified that this step should be skipped.

        `expired` - This step had not yet been completed when the Identity Verification attempt as a whole expired.

        `canceled` - The Identity Verification attempt was canceled before the user completed this step.

        `pending_review` - The Identity Verification attempt template was configured to perform a screening that had one or more hits needing review.

        `manually_approved` - The step was manually overridden to pass by a team member in the dashboard.

        `manually_rejected` - The step was manually overridden to fail by a team member in the dashboard.
      required:
      - accept_tos
      - verify_sms
      - kyc_check
      - documentary_verification
      - selfie_check
      - watchlist_screening
      - risk_check
      properties:
        accept_tos:
          $ref: '#/components/schemas/IdentityVerificationStepStatus'
        verify_sms:
          $ref: '#/components/schemas/IdentityVerificationStepStatus'
        kyc_check:
          $ref: '#/components/schemas/IdentityVerificationStepStatus'
        documentary_verification:
          $ref: '#/components/schemas/IdentityVerificationStepStatus'
        selfie_check:
          $ref: '#/components/schemas/IdentityVerificationStepStatus'
        watchlist_screening:
          $ref: '#/components/schemas/IdentityVerificationStepStatus'
        risk_check:
          $ref: '#/components/schemas/IdentityVerificationStepStatus'
      additionalProperties: true
    IdentityVerificationTemplateID:
      type: string
      example: idvtmp_4FrXJvfQU3zGUR
      title: IdentityVerificationTemplateID
      description: ID of the associated Identity Verification template.
    IdentityVerificationTemplateReference:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/IdentityVerificationTemplateID'
        version:
          $ref: '#/components/schemas/IdentityVerificationTemplateVersion'
      required:
      - id
      - version
      description: The resource ID and version number of the template configuring the behavior of a given Identity Verification.
      additionalProperties: true
    IdentityVerificationTemplateVersion:
      type: integer
      example: 2
      title: IdentityVerificationTemplateVersion
      description: Version of the associated Identity Verification template.
    IdentityVerificationUserAddress:
      description: |-
        Even if an address has been collected, some fields may be null depending on the region's addressing system. For example:

        Addresses from the United Kingdom will not include a region

        Addresses from Hong Kong will not include postal code
      type: object
      properties:
        street:
          $ref: '#/components/schemas/StreetNullable'
        street2:
          $ref: '#/components/schemas/Street2'
        city:
          $ref: '#/components/schemas/CityNullable'
        region:
          $ref: '#/components/schemas/Region'
        postal_code:
          $ref: '#/components/schemas/PostalCode'
        country:
          $ref: '#/components/schemas/GenericCountryCode'
      required:
      - street
      - street2
      - city
      - region
      - postal_code
      - country
      nullable: true
      additionalProperties: true
    IdentityVerificationUserData:
      type: object
      properties:
        phone_number:
          $ref: '#/components/schemas/IdentityVerificationUserPhoneNumber'
        date_of_birth:
          $ref: '#/components/schemas/ISO8601DateNullable'
        ip_address:
          $ref: '#/components/schemas/IPAddress'
        email_address:
          $ref: '#/components/schemas/EmailAddressNullable'
        name:
          $ref: '#/components/schemas/IdentityVerificationResponseUserName'
        address:
          $ref: '#/components/schemas/IdentityVerificationUserAddress'
        id_number:
          $ref: '#/components/schemas/UserIDNumber'
      required:
      - date_of_birth
      - email_address
      - ip_address
      - name
      - address
      - id_number
      description: The identity data that was either collected from the user or provided via API in order to perform an Identity Verification.
      additionalProperties: true
    IdentityVerificationUserPhoneNumber:
      type: string
      description: A phone number in E.164 format.
      example: "+19876543212"
      title: PhoneNumber
      nullable: true
    ImageQuality:
      description: |-
        A high level description of the quality of the image the user submitted.

        For example, an image that is blurry, distorted by glare from a nearby light source, or improperly framed might be marked as low or medium quality. Poor quality images are more likely to fail OCR and/or template conformity checks.

        Note: By default, Plaid will let a user recapture document images twice before failing the entire session if we attribute the failure to low image quality.
      type: string
      enum:
      - high
      - medium
      - low
      example: high
    IndividualScreeningHitNames:
      type: object
      description: Name information for the associated individual watchlist hit
      properties:
        full:
          type: string
          example: Aleksey Potemkin
          description: The full name of the individual, including all parts.
        is_primary:
          type: boolean
          example: false
          description: Primary names are those most commonly used to refer to this person. Only one name will ever be marked as primary.
        weak_alias_determination:
          $ref: '#/components/schemas/WeakAliasDetermination'
      required:
      - full
      - is_primary
      - weak_alias_determination
      additionalProperties: true
    IndividualWatchlistCode:
      type: string
      enum:
      - AU_CON
      - CA_CON
      - EU_CON
      - IZ_CIA
      - IZ_IPL
      - IZ_PEP
      - IZ_UNC
      - IZ_WBK
      - UK_HMC
      - US_DPL
      - US_DTC
      - US_FBI
      - US_FSE
      - US_ISN
      - US_MBS
      - US_PLC
      - US_SDN
      - US_SSI
      - SG_SOF
      - TR_TWL
      - TR_DFD
      - TR_FOR
      - TR_WMD
      - TR_CMB
      example: US_SDN
      description: |-
        Shorthand identifier for a specific screening list for individuals.
         `AU_CON`: Australia Department of Foreign Affairs and Trade Consolidated List
         `CA_CON`: Government of Canada Consolidated List of Sanctions
         `EU_CON`: European External Action Service Consolidated List
         `IZ_CIA`: CIA List of Chiefs of State and Cabinet Members
         `IZ_IPL`: Interpol Red Notices for Wanted Persons List
         `IZ_PEP`: Politically Exposed Persons List
         `IZ_UNC`: United Nations Consolidated Sanctions
         `IZ_WBK`: World Bank Listing of Ineligible Firms and Individuals
         `UK_HMC`: UK HM Treasury Consolidated List
         `US_DPL`: Bureau of Industry and Security Denied Persons List
         `US_DTC`: US Department of State AECA Debarred
         `US_FBI`: US Department of Justice FBI Wanted List
         `US_FSE`: US OFAC Foreign Sanctions Evaders
         `US_ISN`: US Department of State Nonproliferation Sanctions
         `US_PLC`: US OFAC Palestinian Legislative Council
         `US_SDN`: US OFAC Specially Designated Nationals List
         `US_SSI`: US OFAC Sectoral Sanctions Identifications
         `SG_SOF`: Government of Singapore Terrorists and Terrorist Entities
         `TR_TWL`: Government of Turkey Terrorist Wanted List
         `TR_DFD`: Government of Turkey Domestic Freezing Decisions
         `TR_FOR`: Government of Turkey Foreign Freezing Requests
         `TR_WMD`: Government of Turkey Weapons of Mass Destruction
         `TR_CMB`: Government of Turkey Capital Markets Board
      title: IndividualWatchlistCode
    IndividualWatchlistProgram:
      type: object
      description: A program that configures the active lists, search parameters, and other behavior for initial and ongoing screening of individuals.
      title: IndividualWatchlistProgram
      properties:
        id:
          $ref: '#/components/schemas/WatchlistProgramID'
        created_at:
          $ref: '#/components/schemas/Timestamp'
        is_rescanning_enabled:
          description: Indicator specifying whether the program is enabled and will perform daily rescans.
          type: boolean
          example: true
        lists_enabled:
          description: Watchlists enabled for the associated program
          type: array
          example:
          - US_SDN
          uniqueItems: true
          items:
            $ref: '#/components/schemas/IndividualWatchlistCode'
        name:
          $ref: '#/components/schemas/IndividualWatchlistScreeningProgramName'
        name_sensitivity:
          $ref: '#/components/schemas/ProgramNameSensitivity'
        audit_trail:
          $ref: '#/components/schemas/WatchlistScreeningAuditTrail'
        is_archived:
          $ref: '#/components/schemas/ProgramArchived'
      required:
      - id
      - created_at
      - is_rescanning_enabled
      - lists_enabled
      - name
      - name_sensitivity
      - audit_trail
      - is_archived
      additionalProperties: true
    IndividualWatchlistScreeningProgramName:
      type: string
      title: IndividualWatchlistScreeningProgramName
      example: Sample Program
      minLength: 1
      description: A name for the program to define its purpose. For example, "High Risk Individuals", "US Cardholders", or "Applicants".
    InternalUID:
      type: string
      title: InternalUID
      description: A universal identifier for a watchlist individual that is stable across searches and updates.
      example: uid_3NggckTimGSJHS
    IssuingCountry:
      description: |-
        A binary match indicator specifying whether the country that issued the provided document matches the country that the user separately provided to Plaid.

        Note: You can configure whether a `no_match` on `issuing_country` fails the `documentary_verification` by editing your Plaid Template.
      type: string
      enum:
      - match
      - no_match
    KYCCheckAddressSummary:
      type: object
      description: Result summary object specifying how the `address` field matched.
      properties:
        summary:
          $ref: '#/components/schemas/MatchSummaryCode'
        po_box:
          $ref: '#/components/schemas/POBoxStatus'
        type:
          $ref: '#/components/schemas/AddressPurposeLabel'
      required:
      - summary
      - po_box
      - type
      additionalProperties: true
    KYCCheckDateOfBirthSummary:
      description: Result summary object specifying how the `date_of_birth` field matched.
      type: object
      properties:
        summary:
          $ref: '#/components/schemas/MatchSummaryCode'
      required:
      - summary
      additionalProperties: true
    KYCCheckDetails:
      type: object
      description: Additional information for the `kyc_check` step. This field will be `null` unless `steps.kyc_check` has reached a terminal state of either `success` or `failed`.
      properties:
        status:
          type: string
          description: The outcome status for the associated Identity Verification attempt's `kyc_check` step. This field will always have the same value as `steps.kyc_check`.
          example: success
        address:
          $ref: '#/components/schemas/KYCCheckAddressSummary'
        name:
          $ref: '#/components/schemas/KYCCheckNameSummary'
        date_of_birth:
          $ref: '#/components/schemas/KYCCheckDateOfBirthSummary'
        id_number:
          $ref: '#/components/schemas/KYCCheckIDNumberSummary'
        phone_number:
          $ref: '#/components/schemas/KYCCheckPhoneSummary'
      required:
      - status
      - phone_number
      - address
      - name
      - date_of_birth
      - id_number
      nullable: true
      additionalProperties: true
    KYCCheckIDNumberSummary:
      description: Result summary object specifying how the `id_number` field matched.
      type: object
      properties:
        summary:
          $ref: '#/components/schemas/MatchSummaryCode'
      required:
      - summary
      additionalProperties: true
    KYCCheckNameSummary:
      description: Result summary object specifying how the `name` field matched.
      type: object
      properties:
        summary:
          $ref: '#/components/schemas/MatchSummaryCode'
      required:
      - summary
      additionalProperties: true
    KYCCheckPhoneSummary:
      description: Result summary object specifying how the `phone` field matched.
      type: object
      properties:
        summary:
          $ref: '#/components/schemas/MatchSummaryCode'
        area_code:
          $ref: '#/components/schemas/MatchSummaryCode'
      required:
      - summary
      - area_code
      additionalProperties: true
    MatchSummary:
      type: object
      description: Summary object reflecting the match result of the associated data
      properties:
        summary:
          $ref: '#/components/schemas/MatchSummaryCode'
      required:
      - summary
      additionalProperties: true
    MatchSummaryCode:
      description: |-
        An enum indicating the match type between data provided by user and data checked against an external data source.


        `match` indicates that the provided input data was a strong match against external data.

        `partial_match` indicates the data approximately matched against external data. For example, "Knope" vs. "Knope-Wyatt" for last name.

        `no_match` indicates that Plaid was able to perform a check against an external data source and it did not match the provided input data.

        `no_data` indicates that Plaid was unable to find external data to compare against the provided input data.

        `no_input` indicates that Plaid was unable to perform a check because no information was provided for this field by the end user.
      type: string
      title: MatchSummaryCode
      enum:
      - match
      - partial_match
      - no_match
      - no_data
      - no_input
      example: match
    POBoxStatus:
      description: Field describing whether the associated address is a post office box. Will be `yes` when a P.O. box is detected, `no` when Plaid confirmed the address is not a P.O. box, and `no_data` when Plaid was not able to determine if the address is a P.O. box.
      type: string
      enum:
      - "yes"
      - "no"
      - no_data
      example: "yes"
    PhoneType:
      description: An enum indicating whether a phone number is a phone line or a fax line.
      type: string
      enum:
      - phone
      - fax
    PhysicalDocumentCategory:
      type: string
      description: |-
        The type of identity document detected in the images provided. Will always be one of the following values:

          `drivers_license` - A driver's license issued by the associated country, establishing identity without any guarantee as to citizenship, and granting driving privileges

          `id_card` - A general national identification card, distinct from driver's licenses as it only establishes identity

          `passport` - A travel passport issued by the associated country for one of its citizens

          `residence_permit_card` - An identity document issued by the associated country permitting a foreign citizen to <em>temporarily</em> reside there

          `resident_card` - An identity document issued by the associated country permitting a foreign citizen to <em>permanently</em> reside there

          `visa` - An identity document issued by the associated country permitting a foreign citizen entry for a short duration and for a specific purpose, typically no longer than 6 months

        Note: This value may be different from the ID type that the user selects within Link. For example, if they select "Driver's License" but then submit a picture of a passport, this field will say `passport`
      enum:
      - drivers_license
      - id_card
      - passport
      - residence_permit_card
      - resident_card
      - visa
      example: drivers_license
    PhysicalDocumentExtractedData:
      type: object
      description: Data extracted from a user-submitted document.
      properties:
        id_number:
          $ref: '#/components/schemas/PhysicalDocumentIDNumber'
        category:
          $ref: '#/components/schemas/PhysicalDocumentCategory'
        expiration_date:
          $ref: '#/components/schemas/ISO8601DateNullable'
        issuing_country:
          $ref: '#/components/schemas/GenericCountryCode'
        issuing_region:
          $ref: '#/components/schemas/Region'
        date_of_birth:
          $ref: '#/components/schemas/IdentityVerificationDocumentISO8601DateOfBirth'
        address:
          $ref: '#/components/schemas/IdentityVerificationDocumentAddressResponse'
      required:
      - id_number
      - category
      - expiration_date
      - issuing_country
      - issuing_region
      - date_of_birth
      - address
      nullable: true
      additionalProperties: true
    PhysicalDocumentExtractedDataAnalysis:
      type: object
      description: Analysis of the data extracted from the submitted document.
      properties:
        name:
          $ref: '#/components/schemas/DocumentNameMatchCode'
        date_of_birth:
          $ref: '#/components/schemas/DocumentDateOfBirthMatchCode'
        expiration_date:
          $ref: '#/components/schemas/ExpirationDate'
        issuing_country:
          $ref: '#/components/schemas/IssuingCountry'
      required:
      - name
      - date_of_birth
      - expiration_date
      - issuing_country
      nullable: true
      additionalProperties: true
    PhysicalDocumentIDNumber:
      type: string
      description: Alpha-numeric ID number extracted via OCR from the user's document image.
      example: AB123456
      nullable: true
    PhysicalDocumentImages:
      type: object
      description: URLs for downloading original and cropped images for this document submission. The URLs are designed to only allow downloading, not hot linking, so the URL will only serve the document image for 60 seconds before expiring. The expiration time is 60 seconds after the `GET` request for the associated Identity Verification attempt. A new expiring URL is generated with each request, so you can always rerequest the Identity Verification attempt if one of your URLs expires.
      properties:
        original_front:
          $ref: '#/components/schemas/DocumentImage__Front'
        original_back:
          $ref: '#/components/schemas/DocumentImage__Back'
        cropped_front:
          $ref: '#/components/schemas/DocumentImage__CroppedFront'
        cropped_back:
          $ref: '#/components/schemas/DocumentImage__CroppedBack'
        face:
          $ref: '#/components/schemas/DocumentImage__Face'
      required:
      - original_front
      - original_back
      - cropped_front
      - cropped_back
      - face
      additionalProperties: true
    PostalCode:
      type: string
      example: "46001"
      title: PostalCode
      description: The postal code for the associated address. Between 2 and 10 alphanumeric characters. For US-based addresses this must be 5 numeric digits.
      nullable: true
    PreviousIdentityVerificationAttemptID:
      type: string
      example: idv_42cF1MNo42r9Xj
      description: The ID for the Identity Verification preceding this session. This field will only be filled if the current Identity Verification is a retry of a previous attempt.
      nullable: true
    ProgramArchived:
      type: boolean
      example: false
      title: Archived
      description: Archived programs are read-only and cannot screen new customers nor participate in ongoing monitoring.
    ProgramNameSensitivity:
      type: string
      enum:
      - coarse
      - balanced
      - strict
      - exact
      example: balanced
      description: |-
        The valid name matching sensitivity configurations for a screening program. Note that while certain matching techniques may be more prevalent on less strict settings, all matching algorithms are enabled for every sensitivity.

        `coarse` - See more potential matches. This sensitivity will see more broad phonetic matches across alphabets that make missing a potential hit very unlikely. This setting is noisier and will require more manual review.

        `balanced` - A good default for most companies. This sensitivity is balanced to show high quality hits with reduced noise.

        `strict` - Aggressive false positive reduction. This sensitivity will require names to be more similar than `coarse` and `balanced` settings, relying less on phonetics, while still accounting for character transpositions, missing tokens, and other common permutations.

        `exact` - Matches must be nearly exact. This sensitivity will only show hits with exact or nearly exact name matches with only basic correction such as extraneous symbols and capitalization. This setting is generally not recommended unless you have a very specific use case.
      title: ProgramNameSensitivity
    ProxyType:
      type: string
      description: |-
        An enum indicating whether a network proxy is present and if so what type it is.

        `none_detected` indicates the user is not on a detectable proxy network.

        `tor` indicates the user was using a Tor browser, which sends encrypted traffic on a decentralized network and is somewhat similar to a VPN (Virtual Private Network).

        `vpn` indicates the user is on a VPN (Virtual Private Network)

        `web_proxy` indicates the user is on a web proxy server, which may allow them to conceal information such as their IP address or other identifying information.

        `public_proxy` indicates the user is on a public web proxy server, which is similar to a web proxy but can be shared by multiple users. This may allow multiple users to appear as if they have the same IP address for instance.
      enum:
      - none_detected
      - tor
      - vpn
      - web_proxy
      - public_proxy
      nullable: true
    Region:
      type: string
      example: IN
      title: Region
      description: An ISO 3166-2 subdivision code. Related terms would be "state", "province", "prefecture", "zone", "subdivision", etc.
      nullable: true
    ReviewComment:
      description: A comment submitted by a team member as part of reviewing a watchlist screening.
      type: string
      title: ReviewComment
      minLength: 1
      example: These look like legitimate matches, rejecting the customer.
      nullable: true
    RiskCheckBehavior:
      type: object
      description: Result summary object specifying values for `behavior` attributes of risk check, when available.
      properties:
        user_interactions:
          $ref: '#/components/schemas/RiskCheckBehaviorUserInteractionsLabel'
        fraud_ring_detected:
          $ref: '#/components/schemas/RiskCheckBehaviorFraudRingDetectedLabel'
        bot_detected:
          $ref: '#/components/schemas/RiskCheckBehaviorBotDetectedLabel'
      required:
      - user_interactions
      - fraud_ring_detected
      - bot_detected
      nullable: true
      additionalProperties: true
    RiskCheckBehaviorBotDetectedLabel:
      description: |-
        Field describing the outcome of a bot detection behavior risk check.

        `yes` indicates that automated activity was detected.

        `no` indicates that automated activity was not detected.

        `no_data` indicates there was not enough information available to give an accurate signal.
      type: string
      enum:
      - "yes"
      - "no"
      - no_data
    RiskCheckBehaviorFraudRingDetectedLabel:
      description: |-
        Field describing the outcome of a fraud ring behavior risk check.

        `yes` indicates that fraud ring activity was detected.

        `no` indicates that fraud ring activity was not detected.

        `no_data` indicates there was not enough information available to give an accurate signal.
      type: string
      enum:
      - "yes"
      - "no"
      - no_data
    RiskCheckBehaviorUserInteractionsLabel:
      description: |-
        Field describing the overall user interaction signals of a behavior risk check. This value represents how familiar the user is with the personal data they provide, based on a number of signals that are collected during their session.

        `genuine` indicates the user has high familiarity with the data they are providing, and that fraud is unlikely.

        `neutral` indicates some signals are present in between `risky` and `genuine`, but there are not enough clear signals to determine an outcome.

        `risky` indicates the user has low familiarity with the data they are providing, and that fraud is likely.

        `no_data` indicates there is not sufficient information to give an accurate signal.
      type: string
      enum:
      - genuine
      - neutral
      - risky
      - no_data
      example: risky
    RiskCheckDetails:
      type: object
      description: Additional information for the `risk_check` step.
      properties:
        status:
          $ref: '#/components/schemas/IdentityVerificationStepStatus'
        behavior:
          $ref: '#/components/schemas/RiskCheckBehavior'
        email:
          $ref: '#/components/schemas/RiskCheckEmail'
        phone:
          $ref: '#/components/schemas/RiskCheckPhone'
        devices:
          type: array
          description: Array of result summary objects specifying values for `device` attributes of risk check.
          items:
            $ref: '#/components/schemas/RiskCheckDevice'
        identity_abuse_signals:
          $ref: '#/components/schemas/RiskCheckIdentityAbuseSignals'
      required:
      - status
      - behavior
      - devices
      - email
      - phone
      - identity_abuse_signals
      nullable: true
      additionalProperties: true
    RiskCheckDevice:
      description: Result summary object specifying values for `device` attributes of risk check.
      type: object
      properties:
        ip_proxy_type:
          $ref: '#/components/schemas/ProxyType'
        ip_spam_list_count:
          nullable: true
          example: 1
          description: Count of spam lists the IP address is associated with if known.
          type: integer
        ip_timezone_offset:
          $ref: '#/components/schemas/UTCOffset'
      required:
      - ip_proxy_type
      - ip_spam_list_count
      - ip_timezone_offset
      additionalProperties: true
    RiskCheckEmail:
      type: object
      description: Result summary object specifying values for `email` attributes of risk check.
      properties:
        is_deliverable:
          $ref: '#/components/schemas/RiskCheckEmailIsDeliverableStatus'
        breach_count:
          nullable: true
          example: 1
          description: Count of all known breaches of this email address if known.
          type: integer
        first_breached_at:
          $ref: '#/components/schemas/ISO8601DateNullable'
        last_breached_at:
          $ref: '#/components/schemas/ISO8601DateNullable'
        domain_registered_at:
          $ref: '#/components/schemas/ISO8601DateNullable'
        domain_is_free_provider:
          $ref: '#/components/schemas/RiskCheckEmailDomainIsFreeProvider'
        domain_is_custom:
          $ref: '#/components/schemas/RiskCheckEmailDomainIsCustom'
        domain_is_disposable:
          $ref: '#/components/schemas/RiskCheckEmailDomainIsDisposable'
        top_level_domain_is_suspicious:
          $ref: '#/components/schemas/RiskCheckEmailTopLevelDomainIsSuspicious'
        linked_services:
          description: A list of online services where this email address has been detected to have accounts or other activity.
          type: array
          example:
          - facebook
          uniqueItems: true
          items:
            $ref: '#/components/schemas/RiskCheckLinkedService'
      required:
      - is_deliverable
      - breach_count
      - first_breached_at
      - last_breached_at
      - domain_registered_at
      - domain_is_free_provider
      - domain_is_custom
      - domain_is_disposable
      - top_level_domain_is_suspicious
      - linked_services
      nullable: true
      additionalProperties: true
    RiskCheckEmailDomainIsCustom:
      description: Indicates whether the email address domain is custom if known, i.e. a company domain and not free or disposable.
      example: "yes"
      type: string
      enum:
      - "yes"
      - "no"
      - no_data
    RiskCheckEmailDomainIsDisposable:
      description: Indicates whether the email domain is listed as disposable if known. Disposable domains are often used to create email addresses that are part of a fake set of user details.
      example: "yes"
      type: string
      enum:
      - "yes"
      - "no"
      - no_data
    RiskCheckEmailDomainIsFreeProvider:
      description: Indicates whether the email address domain is a free provider such as Gmail or Hotmail if known.
      example: "yes"
      type: string
      enum:
      - "yes"
      - "no"
      - no_data
    RiskCheckEmailIsDeliverableStatus:
      description: SMTP-MX check to confirm the email address exists if known.
      example: "yes"
      type: string
      enum:
      - "yes"
      - "no"
      - no_data
    RiskCheckEmailTopLevelDomainIsSuspicious:
      description: Indicates whether the email address top level domain, which is the last part of the domain, is fraudulent or risky if known. In most cases, a suspicious top level domain is also associated with a disposable or high-risk domain.
      example: "yes"
      type: string
      enum:
      - "yes"
      - "no"
      - no_data
    RiskCheckIdentityAbuseSignals:
      type: object
      description: Result summary object capturing abuse signals related to `identity abuse`, e.g. stolen and synthetic identity fraud.
      properties:
        synthetic_identity:
          $ref: '#/components/schemas/RiskCheckSyntheticIdentity'
        stolen_identity:
          $ref: '#/components/schemas/RiskCheckStolenIdentity'
      required:
      - synthetic_identity
      - stolen_identity
      nullable: true
      additionalProperties: true
    RiskCheckLinkedService:
      type: string
      description: An enum indicating the type of a linked service.
      enum:
      - apple
      - ebay
      - facebook
      - flickr
      - foursquare
      - github
      - google
      - gravatar
      - instagram
      - lastfm
      - linkedin
      - microsoft
      - myspace
      - pinterest
      - skype
      - spotify
      - telegram
      - tumblr
      - twitter
      - viber
      - vimeo
      - weibo
      - whatsapp
      - yahoo
      - airbnb
      - amazon
      - booking
      - discord
      - kakao
      - ok
      - qzone
      - line
      - snapchat
      - zalo
    RiskCheckPhone:
      type: object
      description: Result summary object specifying values for `phone` attributes of risk check.
      properties:
        linked_services:
          description: A list of online services where this phone number has been detected to have accounts or other activity.
          type: array
          example:
          - facebook
          uniqueItems: true
          items:
            $ref: '#/components/schemas/RiskCheckLinkedService'
      required:
      - linked_services
      nullable: true
      additionalProperties: true
    RiskCheckStolenIdentity:
      description: |-
        Field containing the data used in determining the outcome of the stolen identity risk check.

        Contains the following fields:

        `score` - A score from 0 to 100 indicating the likelihood that the user is a stolen identity.
      type: object
      properties:
        score:
          description: A score from 0 to 100 indicating the likelihood that the user is a stolen identity.
          type: integer
          example: 0
      required:
      - score
      nullable: true
      additionalProperties: true
    RiskCheckSyntheticIdentity:
      description: |-
        Field containing the data used in determining the outcome of the synthetic identity risk check.

        Contains the following fields:

        `score` - A score from 0 to 100 indicating the likelihood that the user is a synthetic identity.
      type: object
      properties:
        score:
          description: A score from 0 to 100 indicating the likelihood that the user is a synthetic identity.
          type: integer
          example: 0
      required:
      - score
      nullable: true
      additionalProperties: true
    ScreeningHitAnalysis:
      description: Analysis information describing why a screening hit matched the provided user information
      type: object
      properties:
        dates_of_birth:
          $ref: '#/components/schemas/MatchSummaryCode'
        documents:
          $ref: '#/components/schemas/MatchSummaryCode'
        locations:
          $ref: '#/components/schemas/MatchSummaryCode'
        names:
          $ref: '#/components/schemas/MatchSummaryCode'
        search_terms_version:
          type: integer
          description: The version of the screening's `search_terms` that were compared when the screening hit was added. screening hits are immutable once they have been reviewed. If changes are detected due to updates to the screening's `search_terms`, the associated program, or the list's source data prior to review, the screening hit will be updated to reflect those changes.
          example: 1
      required:
      - search_terms_version
      additionalProperties: true
    ScreeningHitData:
      description: Information associated with the watchlist hit
      type: object
      properties:
        dates_of_birth:
          description: Dates of birth associated with the watchlist hit
          type: array
          items:
            $ref: '#/components/schemas/ScreeningHitDateOfBirthItem'
        documents:
          description: Documents associated with the watchlist hit
          type: array
          items:
            $ref: '#/components/schemas/ScreeningHitDocumentsItems'
        locations:
          description: Locations associated with the watchlist hit
          type: array
          items:
            $ref: '#/components/schemas/GenericScreeningHitLocationItems'
        names:
          description: Names associated with the watchlist hit
          type: array
          items:
            $ref: '#/components/schemas/ScreeningHitNamesItems'
      additionalProperties: true
    ScreeningHitDateOfBirthItem:
      type: object
      description: Analyzed date of birth for the associated hit
      properties:
        analysis:
          $ref: '#/components/schemas/MatchSummary'
        data:
          $ref: '#/components/schemas/DateRange'
      additionalProperties: true
    ScreeningHitDocumentsItems:
      description: Analyzed document information for the associated hit
      type: object
      properties:
        analysis:
          $ref: '#/components/schemas/MatchSummary'
        data:
          $ref: '#/components/schemas/WatchlistScreeningDocument'
      additionalProperties: true
    ScreeningHitNamesItems:
      type: object
      description: Analyzed name information for the associated hit
      properties:
        analysis:
          $ref: '#/components/schemas/MatchSummary'
        data:
          $ref: '#/components/schemas/IndividualScreeningHitNames'
      additionalProperties: true
    SelfieAnalysis:
      type: object
      description: High level descriptions of how the associated selfie was processed. If a selfie fails verification, the details in the `analysis` object should help clarify why the selfie was rejected.
      properties:
        document_comparison:
          $ref: '#/components/schemas/SelfieAnalysisDocumentComparison'
      required:
      - document_comparison
      additionalProperties: true
    SelfieAnalysisDocumentComparison:
      type: string
      enum:
      - match
      - no_match
      - no_input
      description: Information about the comparison between the selfie and the document (if documentary verification also ran).
    SelfieCapture:
      type: object
      description: The image or video capture of a selfie. Only one of image or video URL will be populated per selfie.
      properties:
        image_url:
          $ref: '#/components/schemas/SelfieCaptureImageURL'
        video_url:
          $ref: '#/components/schemas/SelfieCaptureVideoURL'
      required:
      - image_url
      - video_url
      additionalProperties: true
    SelfieCaptureImageURL:
      type: string
      example: https://example.plaid.com/verifications/idv_52xR9LKo77r1Np/selfie/liveness.jpeg
      description: Temporary URL for downloading an image selfie capture.
      nullable: true
    SelfieCaptureVideoURL:
      type: string
      example: https://example.plaid.com/verifications/idv_52xR9LKo77r1Np/selfie/liveness.webm
      description: Temporary URL for downloading a video selfie capture.
      nullable: true
    SelfieCheck:
      description: Additional information for the `selfie_check` step. This field will be `null` unless `steps.selfie_check` has reached a terminal state of either `success` or `failed`.
      title: SelfieCheck
      type: object
      properties:
        status:
          $ref: '#/components/schemas/SelfieCheckStatus'
        selfies:
          description: An array of selfies submitted to the `selfie_check` step. Each entry represents one user submission.
          type: array
          items:
            $ref: '#/components/schemas/SelfieCheckSelfie'
      required:
      - status
      - selfies
      nullable: true
      additionalProperties: true
    SelfieCheckSelfie:
      type: object
      description: Captures and analysis from a user's selfie.
      additionalProperties: true
      properties:
        status:
          $ref: '#/components/schemas/SelfieStatus'
        attempt:
          example: 1
          type: integer
          description: The `attempt` field begins with 1 and increments with each subsequent selfie upload.
        capture:
          $ref: '#/components/schemas/SelfieCapture'
        analysis:
          $ref: '#/components/schemas/SelfieAnalysis'
      required:
      - status
      - attempt
      - capture
      - analysis
    SelfieCheckStatus:
      type: string
      enum:
      - success
      - failed
      example: success
      description: The outcome status for the associated Identity Verification attempt's `selfie_check` step. This field will always have the same value as `steps.selfie_check`.
    SelfieStatus:
      type: string
      enum:
      - success
      - failed
      example: success
      description: An outcome status for this specific selfie. Distinct from the overall `selfie_check.status` that summarizes the verification outcome from one or more selfies.
    ShareableURL:
      type: string
      example: https://flow.plaid.com/verify/idv_4FrXJvfQU3zGUR?key=e004115db797f7cc3083bff3167cba30644ef630fb46f5b086cde6cc3b86a36f
      description: A shareable URL that can be sent directly to the user to complete verification
      nullable: true
    Source:
      type: string
      enum:
      - dashboard
      - link
      - api
      - system
      description: A type indicating whether a dashboard user, an API-based user, or Plaid last touched this object.
    SourceUID:
      description: The identifier provided by the source sanction or watchlist. When one is not provided by the source, this is `null`.
      type: string
      minLength: 1
      example: 26192ABC
      nullable: true
    Strategy:
      description: |-
        An instruction specifying what steps the new Identity Verification attempt should require the user to complete:


        `reset` - Restart the user at the beginning of the session, regardless of whether they successfully completed part of their previous session.

        `incomplete` - Start the new session at the step that the user failed in the previous session, skipping steps that have already been successfully completed.

        `infer` - If the most recent Identity Verification attempt associated with the given `client_user_id` has a status of `failed` or `expired`, retry using the `incomplete` strategy. Otherwise, use the `reset` strategy.

        `custom` - Start the new session with a custom configuration, specified by the value of the `steps` field

        Note:

        The `incomplete` strategy cannot be applied if the session's failing step is `screening` or `risk_check`.

        The `infer` strategy cannot be applied if the session's status is still `active`
      type: string
      enum:
      - reset
      - incomplete
      - infer
      - custom
    Street:
      type: string
      example: 123 Main St.
      title: Street
      description: The primary street portion of an address. If an address is provided, this field will always be filled.
    Street2:
      type: string
      example: Unit 42
      title: Street2
      description: Extra street information, like an apartment or suite number.
      nullable: true
    StreetNullable:
      type: string
      example: 123 Main St.
      title: Street
      description: The primary street portion of an address. If an address is provided, this field will always be filled.
      nullable: true
    Timestamp:
      description: An ISO8601 formatted timestamp.
      type: string
      format: date-time
      title: Timestamp
      example: "2020-07-24T03:26:02Z"
    TimestampNullable:
      description: An ISO8601 formatted timestamp.
      type: string
      format: date-time
      title: Timestamp
      example: "2020-07-24T03:26:02Z"
      nullable: true
    URL:
      type: string
      format: uri
      title: URL
      example: https://example.com
      description: An 'http' or 'https' URL (must begin with either of those).
    URLNullable:
      type: string
      format: uri
      title: URL
      example: https://example.com
      description: An 'http' or 'https' URL (must begin with either of those).
      nullable: true
    UTCOffset:
      type: string
      description: UTC offset of the timezone associated with the IP address.
      example: "+06:00:00"
      nullable: true
    UpdateEntityScreeningRequestSearchTerms:
      type: object
      description: Search terms for editing an entity watchlist screening
      properties:
        entity_watchlist_program_id:
          $ref: '#/components/schemas/EntityWatchlistProgramID'
        legal_name:
          $ref: '#/components/schemas/EntityWatchlistScreeningName'
        document_number:
          $ref: '#/components/schemas/WatchlistScreeningDocumentValue'
        email_address:
          $ref: '#/components/schemas/EmailAddress'
        country:
          $ref: '#/components/schemas/GenericCountryCode'
        phone_number:
          $ref: '#/components/schemas/WatchlistScreeningPhoneNumber'
        url:
          $ref: '#/components/schemas/URL'
      required:
      - entity_watchlist_program_id
      nullable: true
    UpdateIndividualScreeningRequestSearchTerms:
      type: object
      description: Search terms for editing an individual watchlist screening
      properties:
        watchlist_program_id:
          $ref: '#/components/schemas/WatchlistProgramID'
        legal_name:
          $ref: '#/components/schemas/WatchlistScreeningIndividualName'
        date_of_birth:
          $ref: '#/components/schemas/ISO8601Date'
        document_number:
          $ref: '#/components/schemas/WatchlistScreeningDocumentValue'
        country:
          $ref: '#/components/schemas/GenericCountryCode'
      nullable: true
    UpdatedAtTimestamp:
      description: An ISO8601 formatted timestamp. This field indicates the last time the resource was modified.
      type: string
      format: date-time
      title: Timestamp
      example: "2020-07-24T03:26:02Z"
    UserAddress:
      type: object
      properties:
        street:
          $ref: '#/components/schemas/StreetNullable'
        street2:
          $ref: '#/components/schemas/Street2'
        city:
          $ref: '#/components/schemas/CityNullable'
        region:
          $ref: '#/components/schemas/Region'
        postal_code:
          $ref: '#/components/schemas/PostalCode'
        country:
          $ref: '#/components/schemas/GenericCountryCode'
      required:
      - country
      description: |-
        Home address for the user. Supported values are: not provided, address with only country code or full address.

        For more context on this field, see [Input Validation by Country](https://plaid.com/docs/identity-verification/hybrid-input-validation/#input-validation-by-country).
      nullable: true
      additionalProperties: true
    UserIDNumber:
      description: ID number submitted by the user, currently used only for the Identity Verification product. If the user has not submitted this data yet, this field will be `null`. Otherwise, both fields are guaranteed to be filled.
      type: object
      properties:
        value:
          $ref: '#/components/schemas/IDNumberValue'
        type:
          $ref: '#/components/schemas/IDNumberType'
      required:
      - value
      - type
      nullable: true
      additionalProperties: true
    WatchlistProgramID:
      type: string
      example: prg_2eRPsDnL66rZ7H
      title: WatchlistProgramID
      description: ID of the associated program.
    WatchlistScreeningAuditTrail:
      title: WatchlistScreeningAuditTrail
      description: Information about the last change made to the parent object specifying what caused the change as well as when it occurred.
      type: object
      properties:
        source:
          $ref: '#/components/schemas/Source'
        dashboard_user_id:
          $ref: '#/components/schemas/DashboardUserIDNullable'
        timestamp:
          $ref: '#/components/schemas/Timestamp'
      required:
      - source
      - dashboard_user_id
      - timestamp
      additionalProperties: true
    WatchlistScreeningDocument:
      title: WatchlistScreeningDocument
      type: object
      description: An official document, usually issued by a governing body or institution, with an associated identifier.
      properties:
        type:
          $ref: '#/components/schemas/WatchlistScreeningDocumentType'
        number:
          $ref: '#/components/schemas/WatchlistScreeningDocumentValue'
      required:
      - type
      - number
      additionalProperties: true
    WatchlistScreeningDocumentType:
      type: string
      enum:
      - birth_certificate
      - drivers_license
      - immigration_number
      - military_id
      - other
      - passport
      - personal_identification
      - ration_card
      - ssn
      - student_id
      - tax_id
      - travel_document
      - voter_id
      title: WatchlistScreeningDocumentType
      example: passport
      description: |-
        The kind of official document represented by this object.

        `birth_certificate` - A certificate of birth

        `drivers_license` - A license to operate a motor vehicle

        `immigration_number` - Immigration or residence documents

        `military_id` - Identification issued by a military group

        `other` - Any document not covered by other categories

        `passport` - An official passport issue by a government

        `personal_identification` - Any generic personal identification that is not covered by other categories

        `ration_card` - Identification that entitles the holder to rations

        `ssn` - United States Social Security Number

        `student_id` - Identification issued by an educational institution

        `tax_id` - Identification issued for the purpose of collecting taxes

        `travel_document` - Visas, entry permits, refugee documents, etc.

        `voter_id` - Identification issued for the purpose of voting
    WatchlistScreeningDocumentValue:
      type: string
      title: WatchlistScreeningDocumentValue
      minLength: 4
      example: C31195855
      description: The numeric or alphanumeric identifier associated with this document.
    WatchlistScreeningDocumentValueNullable:
      type: string
      title: WatchlistScreeningDocumentValue
      minLength: 4
      example: C31195855
      description: The numeric or alphanumeric identifier associated with this document.
      nullable: true
    WatchlistScreeningEntityCreateRequest:
      type: object
      description: Request input for creating an entity screening review
      properties:
        search_terms:
          $ref: '#/components/schemas/EntityWatchlistSearchTerms'
        client_user_id:
          $ref: '#/components/schemas/ClientUserID'
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
      required:
      - search_terms
    WatchlistScreeningEntityCreateResponse:
      description: 'The entity screening object allows you to represent an entity in your system, update its profile, and search for it on various watchlists. Note: Rejected entity screenings will not receive new hits, regardless of entity program configuration.'
      additionalProperties: true
      properties:
        id:
          $ref: '#/components/schemas/EntityWatchlistScreeningID'
        search_terms:
          $ref: '#/components/schemas/EntityWatchlistScreeningSearchTerms'
        assignee:
          $ref: '#/components/schemas/DashboardUserIDNullable'
        status:
          $ref: '#/components/schemas/WatchlistScreeningStatus'
        client_user_id:
          $ref: '#/components/schemas/ClientUserIDNullable'
        audit_trail:
          $ref: '#/components/schemas/WatchlistScreeningAuditTrail'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - id
      - search_terms
      - assignee
      - status
      - client_user_id
      - audit_trail
      - request_id
      type: object
    WatchlistScreeningEntityGetRequest:
      description: Request input for fetching an entity watchlist screening
      type: object
      properties:
        entity_watchlist_screening_id:
          $ref: '#/components/schemas/EntityWatchlistScreeningID'
        secret:
          $ref: '#/components/schemas/APISecret'
        client_id:
          $ref: '#/components/schemas/APIClientID'
      required:
      - entity_watchlist_screening_id
    WatchlistScreeningEntityGetResponse:
      description: 'The entity screening object allows you to represent an entity in your system, update its profile, and search for it on various watchlists. Note: Rejected entity screenings will not receive new hits, regardless of entity program configuration.'
      additionalProperties: true
      properties:
        id:
          $ref: '#/components/schemas/EntityWatchlistScreeningID'
        search_terms:
          $ref: '#/components/schemas/EntityWatchlistScreeningSearchTerms'
        assignee:
          $ref: '#/components/schemas/DashboardUserIDNullable'
        status:
          $ref: '#/components/schemas/WatchlistScreeningStatus'
        client_user_id:
          $ref: '#/components/schemas/ClientUserIDNullable'
        audit_trail:
          $ref: '#/components/schemas/WatchlistScreeningAuditTrail'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - id
      - search_terms
      - assignee
      - status
      - client_user_id
      - audit_trail
      - request_id
      type: object
    WatchlistScreeningEntityHistoryListRequest:
      description: Request input for listing changes to entity watchlist screenings
      type: object
      properties:
        secret:
          $ref: '#/components/schemas/APISecret'
        client_id:
          $ref: '#/components/schemas/APIClientID'
        entity_watchlist_screening_id:
          $ref: '#/components/schemas/EntityWatchlistScreeningID'
        cursor:
          $ref: '#/components/schemas/Cursor'
      required:
      - entity_watchlist_screening_id
    WatchlistScreeningEntityHistoryListResponse:
      description: Paginated list of entity watchlist screenings
      additionalProperties: true
      properties:
        entity_watchlist_screenings:
          description: List of entity watchlist screening
          type: array
          items:
            $ref: '#/components/schemas/EntityWatchlistScreening'
        next_cursor:
          $ref: '#/components/schemas/Cursor'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - entity_watchlist_screenings
      - next_cursor
      - request_id
      type: object
    WatchlistScreeningEntityHitListRequest:
      description: Request input for listing hits for an entity watchlist screening
      type: object
      properties:
        secret:
          $ref: '#/components/schemas/APISecret'
        client_id:
          $ref: '#/components/schemas/APIClientID'
        entity_watchlist_screening_id:
          $ref: '#/components/schemas/EntityWatchlistScreeningID'
        cursor:
          $ref: '#/components/schemas/Cursor'
      required:
      - entity_watchlist_screening_id
    WatchlistScreeningEntityHitListResponse:
      description: Paginated list of entity watchlist screening hits
      additionalProperties: true
      properties:
        entity_watchlist_screening_hits:
          description: List of entity watchlist screening hits
          type: array
          items:
            $ref: '#/components/schemas/EntityWatchlistScreeningHit'
        next_cursor:
          $ref: '#/components/schemas/Cursor'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - entity_watchlist_screening_hits
      - next_cursor
      - request_id
      type: object
    WatchlistScreeningEntityListRequest:
      description: Request input for listing entity watchlist screenings
      type: object
      properties:
        secret:
          $ref: '#/components/schemas/APISecret'
        client_id:
          $ref: '#/components/schemas/APIClientID'
        entity_watchlist_program_id:
          $ref: '#/components/schemas/EntityWatchlistProgramID'
        client_user_id:
          $ref: '#/components/schemas/ClientUserID'
        status:
          $ref: '#/components/schemas/WatchlistScreeningStatus'
        assignee:
          $ref: '#/components/schemas/DashboardUserID'
        cursor:
          $ref: '#/components/schemas/Cursor'
      required:
      - entity_watchlist_program_id
    WatchlistScreeningEntityListResponse:
      description: Paginated list of entity watchlist screenings
      additionalProperties: true
      properties:
        entity_watchlist_screenings:
          description: List of entity watchlist screening
          type: array
          items:
            $ref: '#/components/schemas/EntityWatchlistScreening'
        next_cursor:
          $ref: '#/components/schemas/Cursor'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - entity_watchlist_screenings
      - next_cursor
      - request_id
      type: object
    WatchlistScreeningEntityProgramGetRequest:
      description: Request input for fetching an entity watchlist program
      type: object
      properties:
        entity_watchlist_program_id:
          $ref: '#/components/schemas/EntityWatchlistProgramID'
        secret:
          $ref: '#/components/schemas/APISecret'
        client_id:
          $ref: '#/components/schemas/APIClientID'
      required:
      - entity_watchlist_program_id
    WatchlistScreeningEntityProgramGetResponse:
      description: A program that configures the active lists, search parameters, and other behavior for initial and ongoing screening of entities.
      additionalProperties: true
      properties:
        id:
          $ref: '#/components/schemas/EntityWatchlistProgramID'
        created_at:
          $ref: '#/components/schemas/Timestamp'
        is_rescanning_enabled:
          description: Indicator specifying whether the program is enabled and will perform daily rescans.
          type: boolean
          example: true
        lists_enabled:
          description: Watchlists enabled for the associated program
          type: array
          example:
          - EU_CON
          uniqueItems: true
          items:
            $ref: '#/components/schemas/EntityWatchlistCode'
        name:
          $ref: '#/components/schemas/EntityWatchlistScreeningProgramName'
        name_sensitivity:
          $ref: '#/components/schemas/ProgramNameSensitivity'
        audit_trail:
          $ref: '#/components/schemas/WatchlistScreeningAuditTrail'
        is_archived:
          $ref: '#/components/schemas/ProgramArchived'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - id
      - created_at
      - is_rescanning_enabled
      - lists_enabled
      - name
      - name_sensitivity
      - audit_trail
      - is_archived
      - request_id
      type: object
    WatchlistScreeningEntityProgramListRequest:
      description: Request input for listing entity watchlist screening programs
      type: object
      properties:
        secret:
          $ref: '#/components/schemas/APISecret'
        client_id:
          $ref: '#/components/schemas/APIClientID'
        cursor:
          $ref: '#/components/schemas/Cursor'
    WatchlistScreeningEntityProgramListResponse:
      description: Paginated list of entity watchlist screening programs
      additionalProperties: true
      properties:
        entity_watchlist_programs:
          description: List of entity watchlist screening programs
          type: array
          items:
            $ref: '#/components/schemas/EntityWatchlistProgram'
        next_cursor:
          $ref: '#/components/schemas/Cursor'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - entity_watchlist_programs
      - next_cursor
      - request_id
      type: object
    WatchlistScreeningEntityReviewCreateRequest:
      type: object
      description: Request input for creating a review for an entity screening
      properties:
        confirmed_hits:
          type: array
          items:
            $ref: '#/components/schemas/EntityWatchlistScreeningHitID'
          description: Hits to mark as a true positive after thorough manual review. These hits will never recur or be updated once dismissed. In most cases, confirmed hits indicate that the customer should be rejected.
        dismissed_hits:
          type: array
          items:
            $ref: '#/components/schemas/EntityWatchlistScreeningHitID'
          description: Hits to mark as a false positive after thorough manual review. These hits will never recur or be updated once dismissed.
        comment:
          $ref: '#/components/schemas/ReviewComment'
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        entity_watchlist_screening_id:
          $ref: '#/components/schemas/EntityWatchlistScreeningID'
      required:
      - confirmed_hits
      - dismissed_hits
      - entity_watchlist_screening_id
    WatchlistScreeningEntityReviewCreateResponse:
      description: |-
        A review submitted by a team member for an entity watchlist screening. A review can be either a comment on the current screening state, actions taken
        against hits attached to the watchlist screening, or both.
      additionalProperties: true
      properties:
        id:
          $ref: '#/components/schemas/EntityWatchlistScreeningReviewID'
        confirmed_hits:
          type: array
          description: Hits marked as a true positive after thorough manual review. These hits will never recur or be updated once dismissed. In most cases, confirmed hits indicate that the customer should be rejected.
          items:
            $ref: '#/components/schemas/EntityWatchlistScreeningHitID'
        dismissed_hits:
          type: array
          description: Hits marked as a false positive after thorough manual review. These hits will never recur or be updated once dismissed.
          items:
            $ref: '#/components/schemas/EntityWatchlistScreeningHitID'
        comment:
          $ref: '#/components/schemas/ReviewComment'
        audit_trail:
          $ref: '#/components/schemas/WatchlistScreeningAuditTrail'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - id
      - confirmed_hits
      - dismissed_hits
      - comment
      - audit_trail
      - request_id
      type: object
    WatchlistScreeningEntityReviewListRequest:
      description: Request input for listing reviews for an entity watchlist screening
      type: object
      properties:
        secret:
          $ref: '#/components/schemas/APISecret'
        client_id:
          $ref: '#/components/schemas/APIClientID'
        entity_watchlist_screening_id:
          $ref: '#/components/schemas/EntityWatchlistScreeningID'
        cursor:
          $ref: '#/components/schemas/Cursor'
      required:
      - entity_watchlist_screening_id
    WatchlistScreeningEntityReviewListResponse:
      description: Paginated list of entity watchlist screening reviews
      additionalProperties: true
      properties:
        entity_watchlist_screening_reviews:
          description: List of entity watchlist screening reviews
          type: array
          items:
            $ref: '#/components/schemas/EntityWatchlistScreeningReview'
        next_cursor:
          $ref: '#/components/schemas/Cursor'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - entity_watchlist_screening_reviews
      - next_cursor
      - request_id
      type: object
    WatchlistScreeningEntityUpdateRequest:
      type: object
      description: Request input for editing an entity watchlist screening
      properties:
        entity_watchlist_screening_id:
          $ref: '#/components/schemas/EntityWatchlistScreeningID'
        search_terms:
          $ref: '#/components/schemas/UpdateEntityScreeningRequestSearchTerms'
        assignee:
          $ref: '#/components/schemas/DashboardUserID'
        status:
          $ref: '#/components/schemas/WatchlistScreeningStatus'
        client_user_id:
          $ref: '#/components/schemas/ClientUserID'
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        reset_fields:
          $ref: '#/components/schemas/WatchlistScreeningEntityUpdateRequestResettableFieldList'
      required:
      - entity_watchlist_screening_id
    WatchlistScreeningEntityUpdateRequestResettableField:
      type: string
      enum:
      - assignee
      description: The name of a field that can be reset back to null
    WatchlistScreeningEntityUpdateRequestResettableFieldList:
      type: array
      items:
        $ref: '#/components/schemas/WatchlistScreeningEntityUpdateRequestResettableField'
      description: A list of fields to reset back to null
      nullable: true
    WatchlistScreeningEntityUpdateResponse:
      description: 'The entity screening object allows you to represent an entity in your system, update its profile, and search for it on various watchlists. Note: Rejected entity screenings will not receive new hits, regardless of entity program configuration.'
      additionalProperties: true
      properties:
        id:
          $ref: '#/components/schemas/EntityWatchlistScreeningID'
        search_terms:
          $ref: '#/components/schemas/EntityWatchlistScreeningSearchTerms'
        assignee:
          $ref: '#/components/schemas/DashboardUserIDNullable'
        status:
          $ref: '#/components/schemas/WatchlistScreeningStatus'
        client_user_id:
          $ref: '#/components/schemas/ClientUserIDNullable'
        audit_trail:
          $ref: '#/components/schemas/WatchlistScreeningAuditTrail'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - id
      - search_terms
      - assignee
      - status
      - client_user_id
      - audit_trail
      - request_id
      type: object
    WatchlistScreeningHit:
      type: object
      description: Data from a government watchlist or PEP list that has been attached to the screening.
      title: WatchlistScreeningHit
      properties:
        id:
          $ref: '#/components/schemas/WatchlistScreeningHitID'
        review_status:
          $ref: '#/components/schemas/WatchlistScreeningHitStatus'
        first_active:
          $ref: '#/components/schemas/Timestamp'
        inactive_since:
          $ref: '#/components/schemas/TimestampNullable'
        historical_since:
          $ref: '#/components/schemas/TimestampNullable'
        list_code:
          $ref: '#/components/schemas/IndividualWatchlistCode'
        plaid_uid:
          $ref: '#/components/schemas/InternalUID'
        source_uid:
          $ref: '#/components/schemas/SourceUID'
        analysis:
          $ref: '#/components/schemas/ScreeningHitAnalysis'
        data:
          $ref: '#/components/schemas/ScreeningHitData'
      required:
      - id
      - review_status
      - first_active
      - inactive_since
      - historical_since
      - list_code
      - plaid_uid
      - source_uid
      additionalProperties: true
    WatchlistScreeningHitID:
      type: string
      example: scrhit_52xR9LKo77r1Np
      title: WatchlistScreeningHitID
      description: ID of the associated screening hit.
    WatchlistScreeningHitLocations:
      type: object
      description: Location information for the associated individual watchlist hit
      properties:
        full:
          type: string
          example: Florida, US
          description: The full location string, potentially including elements like street, city, postal codes and country codes. Note that this is not necessarily a complete or well-formatted address.
        country:
          $ref: '#/components/schemas/GenericCountryCode'
      required:
      - full
      - country
      additionalProperties: true
    WatchlistScreeningHitStatus:
      type: string
      title: WatchlistScreeningHitStatus
      enum:
      - confirmed
      - pending_review
      - dismissed
      example: pending_review
      description: The current state of review. All watchlist screening hits begin in a `pending_review` state but can be changed by creating a review. When a hit is in the `pending_review` state, it will always show the latest version of the watchlist data Plaid has available and be compared against the latest customer information saved in the watchlist screening. Once a hit has been marked as `confirmed` or `dismissed` it will no longer be updated so that the state is as it was when the review was first conducted.
    WatchlistScreeningIndividual:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/WatchlistScreeningIndividualID'
        search_terms:
          $ref: '#/components/schemas/WatchlistScreeningSearchTerms'
        assignee:
          $ref: '#/components/schemas/DashboardUserIDNullable'
        status:
          $ref: '#/components/schemas/WatchlistScreeningStatus'
        client_user_id:
          $ref: '#/components/schemas/ClientUserIDNullable'
        audit_trail:
          $ref: '#/components/schemas/WatchlistScreeningAuditTrail'
      required:
      - id
      - search_terms
      - assignee
      - status
      - client_user_id
      - audit_trail
      title: WatchlistScreeningIndividual
      description: 'The screening object allows you to represent a customer in your system, update their profile, and search for them on various watchlists. Note: Rejected customers will not receive new hits, regardless of program configuration.'
      additionalProperties: true
    WatchlistScreeningIndividualCreateRequest:
      type: object
      description: Request input for creating an individual watchlist screening
      properties:
        search_terms:
          $ref: '#/components/schemas/WatchlistScreeningRequestSearchTerms'
        client_user_id:
          $ref: '#/components/schemas/ClientUserID'
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
      required:
      - search_terms
    WatchlistScreeningIndividualCreateResponse:
      description: 'The screening object allows you to represent a customer in your system, update their profile, and search for them on various watchlists. Note: Rejected customers will not receive new hits, regardless of program configuration.'
      additionalProperties: true
      properties:
        id:
          $ref: '#/components/schemas/WatchlistScreeningIndividualID'
        search_terms:
          $ref: '#/components/schemas/WatchlistScreeningSearchTerms'
        assignee:
          $ref: '#/components/schemas/DashboardUserIDNullable'
        status:
          $ref: '#/components/schemas/WatchlistScreeningStatus'
        client_user_id:
          $ref: '#/components/schemas/ClientUserIDNullable'
        audit_trail:
          $ref: '#/components/schemas/WatchlistScreeningAuditTrail'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - id
      - search_terms
      - assignee
      - status
      - client_user_id
      - audit_trail
      - request_id
      type: object
    WatchlistScreeningIndividualGetRequest:
      description: Request input for fetching an individual watchlist screening
      type: object
      properties:
        watchlist_screening_id:
          $ref: '#/components/schemas/WatchlistScreeningIndividualID'
        secret:
          $ref: '#/components/schemas/APISecret'
        client_id:
          $ref: '#/components/schemas/APIClientID'
      required:
      - watchlist_screening_id
    WatchlistScreeningIndividualGetResponse:
      description: 'The screening object allows you to represent a customer in your system, update their profile, and search for them on various watchlists. Note: Rejected customers will not receive new hits, regardless of program configuration.'
      additionalProperties: true
      properties:
        id:
          $ref: '#/components/schemas/WatchlistScreeningIndividualID'
        search_terms:
          $ref: '#/components/schemas/WatchlistScreeningSearchTerms'
        assignee:
          $ref: '#/components/schemas/DashboardUserIDNullable'
        status:
          $ref: '#/components/schemas/WatchlistScreeningStatus'
        client_user_id:
          $ref: '#/components/schemas/ClientUserIDNullable'
        audit_trail:
          $ref: '#/components/schemas/WatchlistScreeningAuditTrail'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - id
      - search_terms
      - assignee
      - status
      - client_user_id
      - audit_trail
      - request_id
      type: object
    WatchlistScreeningIndividualHistoryListRequest:
      description: Request input for listing changes to watchlist screenings for individuals
      type: object
      properties:
        secret:
          $ref: '#/components/schemas/APISecret'
        client_id:
          $ref: '#/components/schemas/APIClientID'
        watchlist_screening_id:
          $ref: '#/components/schemas/WatchlistScreeningIndividualID'
        cursor:
          $ref: '#/components/schemas/Cursor'
      required:
      - watchlist_screening_id
    WatchlistScreeningIndividualHistoryListResponse:
      description: Paginated list of individual watchlist screenings.
      additionalProperties: true
      properties:
        watchlist_screenings:
          description: List of individual watchlist screenings
          type: array
          items:
            $ref: '#/components/schemas/WatchlistScreeningIndividual'
        next_cursor:
          $ref: '#/components/schemas/Cursor'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - watchlist_screenings
      - next_cursor
      - request_id
      type: object
    WatchlistScreeningIndividualHitListRequest:
      description: Request input for listing hits for an individual watchlist screening
      type: object
      properties:
        secret:
          $ref: '#/components/schemas/APISecret'
        client_id:
          $ref: '#/components/schemas/APIClientID'
        watchlist_screening_id:
          $ref: '#/components/schemas/WatchlistScreeningIndividualID'
        cursor:
          $ref: '#/components/schemas/Cursor'
      required:
      - watchlist_screening_id
    WatchlistScreeningIndividualHitListResponse:
      description: Paginated list of individual watchlist screening hits
      additionalProperties: true
      properties:
        watchlist_screening_hits:
          description: List of individual watchlist screening hits
          type: array
          items:
            $ref: '#/components/schemas/WatchlistScreeningHit'
        next_cursor:
          $ref: '#/components/schemas/Cursor'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - watchlist_screening_hits
      - next_cursor
      - request_id
      type: object
    WatchlistScreeningIndividualID:
      type: string
      example: scr_52xR9LKo77r1Np
      title: WatchlistScreeningIndividualID
      description: ID of the associated screening.
    WatchlistScreeningIndividualIDNullable:
      type: string
      example: scr_52xR9LKo77r1Np
      title: WatchlistScreeningIndividualID
      description: ID of the associated screening.
      nullable: true
    WatchlistScreeningIndividualListRequest:
      description: Request input for listinging watchlist screenings for individuals
      type: object
      properties:
        secret:
          $ref: '#/components/schemas/APISecret'
        client_id:
          $ref: '#/components/schemas/APIClientID'
        watchlist_program_id:
          $ref: '#/components/schemas/WatchlistProgramID'
        client_user_id:
          $ref: '#/components/schemas/ClientUserID'
        status:
          $ref: '#/components/schemas/WatchlistScreeningStatus'
        assignee:
          $ref: '#/components/schemas/DashboardUserID'
        cursor:
          $ref: '#/components/schemas/Cursor'
      required:
      - watchlist_program_id
    WatchlistScreeningIndividualListResponse:
      description: Paginated list of individual watchlist screenings.
      additionalProperties: true
      properties:
        watchlist_screenings:
          description: List of individual watchlist screenings
          type: array
          items:
            $ref: '#/components/schemas/WatchlistScreeningIndividual'
        next_cursor:
          $ref: '#/components/schemas/Cursor'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - watchlist_screenings
      - next_cursor
      - request_id
      type: object
    WatchlistScreeningIndividualName:
      type: string
      title: WatchlistScreeningIndividualName
      minLength: 1
      example: Aleksey Potemkin
      description: The legal name of the individual being screened.
    WatchlistScreeningIndividualProgramGetRequest:
      description: Request input for fetching an individual watchlist program
      type: object
      properties:
        watchlist_program_id:
          $ref: '#/components/schemas/WatchlistProgramID'
        secret:
          $ref: '#/components/schemas/APISecret'
        client_id:
          $ref: '#/components/schemas/APIClientID'
      required:
      - watchlist_program_id
    WatchlistScreeningIndividualProgramGetResponse:
      description: A program that configures the active lists, search parameters, and other behavior for initial and ongoing screening of individuals.
      additionalProperties: true
      properties:
        id:
          $ref: '#/components/schemas/WatchlistProgramID'
        created_at:
          $ref: '#/components/schemas/Timestamp'
        is_rescanning_enabled:
          description: Indicator specifying whether the program is enabled and will perform daily rescans.
          type: boolean
          example: true
        lists_enabled:
          description: Watchlists enabled for the associated program
          type: array
          example:
          - US_SDN
          uniqueItems: true
          items:
            $ref: '#/components/schemas/IndividualWatchlistCode'
        name:
          $ref: '#/components/schemas/IndividualWatchlistScreeningProgramName'
        name_sensitivity:
          $ref: '#/components/schemas/ProgramNameSensitivity'
        audit_trail:
          $ref: '#/components/schemas/WatchlistScreeningAuditTrail'
        is_archived:
          $ref: '#/components/schemas/ProgramArchived'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - id
      - created_at
      - is_rescanning_enabled
      - lists_enabled
      - name
      - name_sensitivity
      - audit_trail
      - is_archived
      - request_id
      type: object
    WatchlistScreeningIndividualProgramListRequest:
      description: Request input for listing watchlist screening programs for individuals
      type: object
      properties:
        secret:
          $ref: '#/components/schemas/APISecret'
        client_id:
          $ref: '#/components/schemas/APIClientID'
        cursor:
          $ref: '#/components/schemas/Cursor'
    WatchlistScreeningIndividualProgramListResponse:
      description: Paginated list of individual watchlist screening programs
      additionalProperties: true
      properties:
        watchlist_programs:
          description: List of individual watchlist screening programs
          type: array
          items:
            $ref: '#/components/schemas/IndividualWatchlistProgram'
        next_cursor:
          $ref: '#/components/schemas/Cursor'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - watchlist_programs
      - next_cursor
      - request_id
      type: object
    WatchlistScreeningIndividualReviewCreateRequest:
      type: object
      description: Request input for creating a screening review
      properties:
        confirmed_hits:
          type: array
          items:
            $ref: '#/components/schemas/WatchlistScreeningHitID'
          description: Hits to mark as a true positive after thorough manual review. These hits will never recur or be updated once dismissed. In most cases, confirmed hits indicate that the customer should be rejected.
        dismissed_hits:
          type: array
          items:
            $ref: '#/components/schemas/WatchlistScreeningHitID'
          description: Hits to mark as a false positive after thorough manual review. These hits will never recur or be updated once dismissed.
        comment:
          $ref: '#/components/schemas/ReviewComment'
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        watchlist_screening_id:
          $ref: '#/components/schemas/WatchlistScreeningIndividualID'
      required:
      - confirmed_hits
      - dismissed_hits
      - watchlist_screening_id
    WatchlistScreeningIndividualReviewCreateResponse:
      description: |-
        A review submitted by a team member for an individual watchlist screening. A review can be either a comment on the current screening state, actions taken
        against hits attached to the watchlist screening, or both.
      additionalProperties: true
      properties:
        id:
          $ref: '#/components/schemas/WatchlistScreeningReviewID'
        confirmed_hits:
          type: array
          description: Hits marked as a true positive after thorough manual review. These hits will never recur or be updated once dismissed. In most cases, confirmed hits indicate that the customer should be rejected.
          items:
            $ref: '#/components/schemas/WatchlistScreeningHitID'
        dismissed_hits:
          type: array
          description: Hits marked as a false positive after thorough manual review. These hits will never recur or be updated once dismissed.
          items:
            $ref: '#/components/schemas/WatchlistScreeningHitID'
        comment:
          $ref: '#/components/schemas/ReviewComment'
        audit_trail:
          $ref: '#/components/schemas/WatchlistScreeningAuditTrail'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - id
      - confirmed_hits
      - dismissed_hits
      - comment
      - audit_trail
      - request_id
      type: object
    WatchlistScreeningIndividualReviewListRequest:
      description: Request input for listing reviews for an individual watchlist screening
      type: object
      properties:
        secret:
          $ref: '#/components/schemas/APISecret'
        client_id:
          $ref: '#/components/schemas/APIClientID'
        watchlist_screening_id:
          $ref: '#/components/schemas/WatchlistScreeningIndividualID'
        cursor:
          $ref: '#/components/schemas/Cursor'
      required:
      - watchlist_screening_id
    WatchlistScreeningIndividualReviewListResponse:
      description: Paginated list of screening reviews
      additionalProperties: true
      properties:
        watchlist_screening_reviews:
          description: List of screening reviews
          type: array
          items:
            $ref: '#/components/schemas/WatchlistScreeningReview'
        next_cursor:
          $ref: '#/components/schemas/Cursor'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - watchlist_screening_reviews
      - next_cursor
      - request_id
      type: object
    WatchlistScreeningIndividualUpdateRequest:
      type: object
      description: Request input for editing an individual watchlist screening
      properties:
        watchlist_screening_id:
          $ref: '#/components/schemas/WatchlistScreeningIndividualID'
        search_terms:
          $ref: '#/components/schemas/UpdateIndividualScreeningRequestSearchTerms'
        assignee:
          $ref: '#/components/schemas/DashboardUserID'
        status:
          $ref: '#/components/schemas/WatchlistScreeningStatus'
        client_user_id:
          $ref: '#/components/schemas/ClientUserID'
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        reset_fields:
          $ref: '#/components/schemas/WatchlistScreeningIndividualUpdateRequestResettableFieldList'
      required:
      - watchlist_screening_id
    WatchlistScreeningIndividualUpdateRequestResettableField:
      type: string
      enum:
      - assignee
      description: The name of a field that can be reset back to null
    WatchlistScreeningIndividualUpdateRequestResettableFieldList:
      type: array
      items:
        $ref: '#/components/schemas/WatchlistScreeningIndividualUpdateRequestResettableField'
      description: A list of fields to reset back to null
      nullable: true
    WatchlistScreeningIndividualUpdateResponse:
      description: 'The screening object allows you to represent a customer in your system, update their profile, and search for them on various watchlists. Note: Rejected customers will not receive new hits, regardless of program configuration.'
      additionalProperties: true
      properties:
        id:
          $ref: '#/components/schemas/WatchlistScreeningIndividualID'
        search_terms:
          $ref: '#/components/schemas/WatchlistScreeningSearchTerms'
        assignee:
          $ref: '#/components/schemas/DashboardUserIDNullable'
        status:
          $ref: '#/components/schemas/WatchlistScreeningStatus'
        client_user_id:
          $ref: '#/components/schemas/ClientUserIDNullable'
        audit_trail:
          $ref: '#/components/schemas/WatchlistScreeningAuditTrail'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - id
      - search_terms
      - assignee
      - status
      - client_user_id
      - audit_trail
      - request_id
      type: object
    WatchlistScreeningPhoneNumber:
      type: string
      description: A phone number in E.164 format.
      example: "+14025671234"
      title: WatchlistScreeningPhoneNumber
    WatchlistScreeningPhoneNumberNullable:
      type: string
      description: A phone number in E.164 format.
      example: "+14025671234"
      title: WatchlistScreeningPhoneNumber
      nullable: true
    WatchlistScreeningRequestSearchTerms:
      type: object
      description: Search inputs for creating a watchlist screening
      required:
      - watchlist_program_id
      - legal_name
      properties:
        watchlist_program_id:
          $ref: '#/components/schemas/WatchlistProgramID'
        legal_name:
          $ref: '#/components/schemas/WatchlistScreeningIndividualName'
        date_of_birth:
          $ref: '#/components/schemas/ISO8601Date'
        document_number:
          $ref: '#/components/schemas/WatchlistScreeningDocumentValue'
        country:
          $ref: '#/components/schemas/GenericCountryCode'
    WatchlistScreeningReview:
      title: WatchlistScreeningReview
      type: object
      description: |-
        A review submitted by a team member for an individual watchlist screening. A review can be either a comment on the current screening state, actions taken
        against hits attached to the watchlist screening, or both.
      properties:
        id:
          $ref: '#/components/schemas/WatchlistScreeningReviewID'
        confirmed_hits:
          type: array
          description: Hits marked as a true positive after thorough manual review. These hits will never recur or be updated once dismissed. In most cases, confirmed hits indicate that the customer should be rejected.
          items:
            $ref: '#/components/schemas/WatchlistScreeningHitID'
        dismissed_hits:
          type: array
          description: Hits marked as a false positive after thorough manual review. These hits will never recur or be updated once dismissed.
          items:
            $ref: '#/components/schemas/WatchlistScreeningHitID'
        comment:
          $ref: '#/components/schemas/ReviewComment'
        audit_trail:
          $ref: '#/components/schemas/WatchlistScreeningAuditTrail'
      required:
      - id
      - confirmed_hits
      - dismissed_hits
      - comment
      - audit_trail
      additionalProperties: true
    WatchlistScreeningReviewID:
      type: string
      title: WatchlistScreeningReviewID
      example: rev_aCLNRxK3UVzn2r
      description: ID of the associated review.
    WatchlistScreeningSearchTerms:
      type: object
      description: Search terms for creating an individual watchlist screening
      properties:
        watchlist_program_id:
          $ref: '#/components/schemas/WatchlistProgramID'
        legal_name:
          $ref: '#/components/schemas/WatchlistScreeningIndividualName'
        date_of_birth:
          $ref: '#/components/schemas/ISO8601DateNullable'
        document_number:
          $ref: '#/components/schemas/WatchlistScreeningDocumentValueNullable'
        country:
          $ref: '#/components/schemas/GenericCountryCodeNullable'
        version:
          type: integer
          description: The current version of the search terms. Starts at `1` and increments with each edit to `search_terms`.
          example: 1
      required:
      - watchlist_program_id
      - legal_name
      - date_of_birth
      - document_number
      - country
      - version
      additionalProperties: true
    WatchlistScreeningStatus:
      description: A status enum indicating whether a screening is still pending review, has been rejected, or has been cleared.
      type: string
      enum:
      - rejected
      - pending_review
      - cleared
      example: cleared
      title: WatchlistScreeningStatus
    WeakAliasDetermination:
      type: string
      enum:
      - none
      - source
      - plaid
      example: none
      description: Names that are explicitly marked as low quality either by their `source` list, or by `plaid` by a series of additional checks done by Plaid. Plaid does not ever surface a hit as a result of a weak name alone. If a name has no quality issues, this value will be `none`.
      title: WeakAliasDetermination
    CreditAuditCopyTokenUpdateRequest:
      type: object
      description: CreditAuditCopyTokenUpdateRequest defines the request schema for `/credit/audit_copy_token/update`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        audit_copy_token:
          type: string
          description: The `audit_copy_token` you would like to update.
        report_tokens:
          type: array
          description: Array of tokens which the specified Audit Copy Token will be updated with. The types of token supported are asset report token and employment report token. There can be at most 1 of each token type in the array.
          items:
            $ref: '#/components/schemas/AssetReportToken'
      required:
      - audit_copy_token
      - report_tokens
    CreditAuditCopyTokenUpdateResponse:
      type: object
      additionalProperties: true
      description: CreditAuditCopyTokenUpdateResponse defines the response schema for `/credit/audit_copy_token/update`
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
        updated:
          type: boolean
          description: '`true` if the Audit Copy Token was successfully updated.'
      required:
      - request_id
      - updated
    CraBankIncomeGetRequest:
      title: CraBankIncomeGetRequest
      type: object
      description: CraBankIncomeGetRequest defines the request schema for `/cra/bank_income/get`.
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        user_token:
          $ref: '#/components/schemas/UserToken'
    CraBankIncomeGetResponse:
      title: CraBankIncomeGetResponse
      additionalProperties: true
      type: object
      description: CraBankIncomeGetResponse defines the response schema for `/cra/bank_income/get`.
      properties:
        bank_income:
          type: array
          items:
            $ref: '#/components/schemas/CraBankIncome'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - request_id
    CraBankIncome:
      type: object
      description: The report of the Bank Income data for an end user.
      properties:
        bank_income_id:
          type: string
          description: The unique identifier associated with the Bank Income Report.
        generated_time:
          type: string
          description: The time when the Bank Income Report was generated.
          format: date-time
        days_requested:
          type: integer
          description: The number of days requested by the customer for the Bank Income Report.
        items:
          type: array
          description: The list of Items in the report along with the associated metadata about the Item.
          items:
            $ref: '#/components/schemas/CraBankIncomeItem'
        bank_income_summary:
          $ref: '#/components/schemas/CraBankIncomeSummary'
        warnings:
          type: array
          description: If data from the Bank Income report was unable to be retrieved, the warnings will contain information about the error that caused the data to be incomplete.
          items:
            $ref: '#/components/schemas/CraBankIncomeWarning'
    CraBankIncomeItem:
      type: object
      description: The details and metadata for an end user's Item.
      properties:
        bank_income_accounts:
          type: array
          description: The Item's accounts that have Bank Income data.
          items:
            $ref: '#/components/schemas/CraBankIncomeAccount'
        bank_income_sources:
          type: array
          description: The income sources for this Item. Each entry in the array is a single income source.
          items:
            $ref: '#/components/schemas/CraBankIncomeSource'
        last_updated_time:
          type: string
          description: The time when this Item's data was last retrieved from the financial institution.
          format: date-time
        institution_id:
          type: string
          description: The unique identifier of the institution associated with the Item.
        institution_name:
          type: string
          description: The name of the institution associated with the Item.
    CraBankIncomeAccount:
      type: object
      description: The Item's bank accounts that have the selected data.
      properties:
        mask:
          type: string
          description: |-
            The last 2-4 alphanumeric characters of an account's official account number.
            Note that the mask may be non-unique between an Item's accounts, and it may also not match the mask that the bank displays to the user.
          nullable: true
        name:
          type: string
          description: The name of the bank account.
        official_name:
          type: string
          description: The official name of the bank account.
          nullable: true
        subtype:
          $ref: '#/components/schemas/DepositoryAccountSubtype'
        type:
          $ref: '#/components/schemas/CreditBankIncomeAccountType'
        owners:
          type: array
          description: Data returned by the financial institution about the account owner or owners. Identity information is optional, so field may return an empty array.
          items:
            $ref: '#/components/schemas/Owner'
      required:
      - mask
      - name
      - official_name
      - subtype
      - type
      - owners
    CraBankIncomeSource:
      type: object
      description: Detailed information for the income source.
      properties:
        income_source_id:
          type: string
          description: A unique identifier for an income source.
        income_description:
          type: string
          description: The most common name or original description for the underlying income transactions.
        income_category:
          $ref: '#/components/schemas/CreditBankIncomeCategory'
        start_date:
          type: string
          format: date
          description: |-
            Minimum of all dates within the specific income sources in the user's bank account for days requested by the client.
            The date will be returned in an ISO 8601 format (YYYY-MM-DD).
        end_date:
          type: string
          format: date
          description: |-
            Maximum of all dates within the specific income sources in the user’s bank account for days requested by the client.
            The date will be returned in an ISO 8601 format (YYYY-MM-DD).
        pay_frequency:
          $ref: '#/components/schemas/CreditBankIncomePayFrequency'
        total_amount:
          type: number
          description: Total amount of earnings in the user’s bank account for the specific income source for days requested by the client.
        iso_currency_code:
          $ref: '#/components/schemas/CreditIsoCurrencyCode'
        unofficial_currency_code:
          $ref: '#/components/schemas/CreditUnofficialCurrencyCode'
        transaction_count:
          type: integer
          description: Number of transactions for the income source within the start and end date.
        next_payment_date:
          type: string
          format: date
          nullable: true
          description: |-
            The expected date of the end user’s next paycheck for the income source.
            The date will be returned in an ISO 8601 format (YYYY-MM-DD).
        historical_average_monthly_gross_income:
          type: number
          description: An estimate of the average gross monthly income based on the historical net amount and income category for the income source(s).
          nullable: true
        historical_average_monthly_income:
          type: number
          description: The average monthly net income amount estimated based on the historical data for the income source(s).
          nullable: true
        forecasted_average_monthly_income:
          type: number
          description: The predicted average monthly net income amount for the income source(s).
          nullable: true
        employer:
          $ref: '#/components/schemas/CraBankIncomeEmployer'
        historical_summary:
          type: array
          items:
            $ref: '#/components/schemas/CraBankIncomeHistoricalSummary'
    CraBankIncomeEmployer:
      description: The object containing employer data.
      type: object
      additionalProperties: true
      properties:
        name:
          type: string
          description: The name of the employer.
          nullable: true
      required:
      - name
    CraBankIncomeSummary:
      type: object
      description: Summary for bank income across all income sources and items (max history of 730 days).
      additionalProperties: true
      properties:
        total_amounts:
          type: array
          description: |-
            Total amount of earnings across all the income sources in the end user's Items for the days requested by the client.
            This can contain multiple amounts, with each amount denominated in one unique currency.
          items:
            $ref: '#/components/schemas/CreditAmountWithCurrency'
        start_date:
          type: string
          format: date
          description: |-
            The earliest date within the days requested in which all income sources identified by Plaid appear in a user's account.
            The date will be returned in an ISO 8601 format (YYYY-MM-DD).
        end_date:
          type: string
          format: date
          description: |-
            The latest date in which all income sources identified by Plaid appear in the user's account.
            The date will be returned in an ISO 8601 format (YYYY-MM-DD).
        income_sources_count:
          type: integer
          description: Number of income sources per end user.
        income_categories_count:
          type: integer
          description: Number of income categories per end user.
        income_transactions_count:
          type: integer
          description: Number of income transactions per end user.
        historical_average_monthly_gross_income:
          type: array
          description: An estimate of the average gross monthly income based on the historical net amount and income category for the income source(s).
          items:
            $ref: '#/components/schemas/CreditAmountWithCurrency'
        historical_average_monthly_income:
          type: array
          description: The average monthly income amount estimated based on the historical data for the income source(s).
          items:
            $ref: '#/components/schemas/CreditAmountWithCurrency'
        forecasted_average_monthly_income:
          type: array
          description: The predicted average monthly income amount for the income source(s).
          items:
            $ref: '#/components/schemas/CreditAmountWithCurrency'
        historical_summary:
          type: array
          items:
            $ref: '#/components/schemas/CraBankIncomeHistoricalSummary'
    CraBankIncomeHistoricalSummary:
      type: object
      description: The end user's monthly summary for the income source(s).
      additionalProperties: true
      properties:
        total_amounts:
          type: array
          description: |-
            Total amount of earnings for the income source(s) of the user for the month in the summary.
            This can contain multiple amounts, with each amount denominated in one unique currency.
          items:
            $ref: '#/components/schemas/CreditAmountWithCurrency'
        start_date:
          type: string
          format: date
          description: |-
            The start date of the period covered in this monthly summary.
            This date will be the first day of the month, unless the month being covered is a partial month because it is the first month included in the summary and the date range being requested does not begin with the first day of the month.
            The date will be returned in an ISO 8601 format (YYYY-MM-DD).
        end_date:
          type: string
          format: date
          description: |-
            The end date of the period included in this monthly summary.
            This date will be the last day of the month, unless the month being covered is a partial month because it is the last month included in the summary and the date range being requested does not end with the last day of the month.
            The date will be returned in an ISO 8601 format (YYYY-MM-DD).
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/CraBankIncomeTransaction'
    CraBankIncomeTransaction:
      type: object
      description: The transactions data for the end user's income source(s).
      additionalProperties: true
      properties:
        amount:
          type: number
          description: |-
            The settled value of the transaction, denominated in the transactions's currency as stated in `iso_currency_code` or `unofficial_currency_code`.
            Positive values when money moves out of the account; negative values when money moves in.
            For example, credit card purchases are positive; credit card payment, direct deposits, and refunds are negative.
        date:
          type: string
          format: date
          description: |-
            For pending transactions, the date that the transaction occurred; for posted transactions, the date that the transaction posted.
            Both dates are returned in an ISO 8601 format (YYYY-MM-DD).
        name:
          type: string
          description: The merchant name or transaction description.
        original_description:
          type: string
          description: The string returned by the financial institution to describe the transaction.
          nullable: true
        pending:
          type: boolean
          description: |-
            When true, identifies the transaction as pending or unsettled.
            Pending transaction details (name, type, amount, category ID) may change before they are settled.
        check_number:
          type: string
          description: The check number of the transaction. This field is only populated for check transactions.
          nullable: true
        iso_currency_code:
          $ref: '#/components/schemas/CreditIsoCurrencyCode'
        unofficial_currency_code:
          $ref: '#/components/schemas/CreditUnofficialCurrencyCode'
    CraBankIncomeWarning:
      type: object
      description: The warning associated with the data that was unavailable for the Bank Income Report.
      properties:
        warning_type:
          $ref: '#/components/schemas/CreditBankIncomeWarningType'
        warning_code:
          $ref: '#/components/schemas/CraBankIncomeWarningCode'
        cause:
          $ref: '#/components/schemas/CraBankIncomeCause'
    CraBankIncomeWarningCode:
      type: string
      description: |-
        The warning code identifies a specific kind of warning.
        `IDENTITY_UNAVAILABLE`: Unable to extract identity for the Item
        `TRANSACTIONS_UNAVAILABLE`: Unable to extract transactions for the Item
        `REPORT_DELETED`: Report deleted due to customer or consumer request
        `DATA_UNAVAILABLE`: No relevant data was found for the Item
      enum:
      - IDENTITY_UNAVAILABLE
      - TRANSACTIONS_UNAVAILABLE
      - REPORT_DELETED
      - DATA_UNAVAILABLE
    CraBankIncomeCause:
      type: object
      description: An error object and associated `item_id` used to identify a specific Item and error when a batch operation operating on multiple Items has encountered an error in one of the Items.
      properties:
        error_type:
          $ref: '#/components/schemas/CreditBankIncomeErrorType'
        error_code:
          type: string
          description: We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues. Error fields will be `null` if no error has occurred.
        error_message:
          type: string
          description: A developer-friendly representation of the error code. This may change over time and is not safe for programmatic use.
        display_message:
          type: string
          description: |-
            A user-friendly representation of the error code. null if the error is not related to user action.
            This may change over time and is not safe for programmatic use.
      required:
      - error_type
      - error_code
      - error_message
      - display_message
    AssetReportFreddieGetRequest:
      title: AssetReportFreddieGetRequest
      type: object
      additionalProperties: true
      description: AssetReportFreddieGetRequest defines the request schema for `credit/asset_report/freddie_mac/get`
      properties:
        audit_copy_token:
          type: string
          description: A token that can be shared with a third party auditor to allow them to obtain access to the Asset Report. This token should be stored securely.
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
      required:
      - audit_copy_token
    AssetReportFreddieGetResponse:
      title: AssetReportFreddieGetResponse
      type: object
      additionalProperties: true
      description: AssetReportFreddieGetResponse defines the response schema for `/asset_report/get`
      properties:
        DEAL:
          $ref: '#/components/schemas/AssetReportFreddie'
        request_id:
          $ref: '#/components/schemas/RequestID'
        SchemaVersion:
          type: number
          description: The Verification Of Assets (aka VOA or Freddie Mac Schema) schema version.
      required:
      - DEAL
      - request_id
      - SchemaVersion
    AssetReportFreddie:
      title: AssetReportFreddie
      type: object
      additionalProperties: true
      description: An object representing an Asset Report with Freddie Mac schema.
      properties:
        LOANS:
          $ref: '#/components/schemas/Loans'
        PARTIES:
          $ref: '#/components/schemas/Parties'
        SERVICES:
          $ref: '#/components/schemas/Services'
      required:
      - LOANS
      - PARTIES
      - SERVICES
    Loans:
      title: Loans
      type: object
      additionalProperties: true
      description: A collection of loans that are part of a single deal.
      properties:
        LOAN:
          $ref: '#/components/schemas/Loan'
      required:
      - LOAN
    Loan:
      title: Loan
      type: object
      additionalProperties: true
      description: Information specific to a mortgage loan agreement between one or more borrowers and a mortgage lender.
      properties:
        LOAN_IDENTIFIERS:
          $ref: '#/components/schemas/LoanIdentifiers'
      required:
      - LOAN_IDENTIFIERS
    LoanIdentifiers:
      title: LoanIdentifiers
      type: object
      additionalProperties: true
      description: Collection of current and previous identifiers for this loan.
      properties:
        LOAN_IDENTIFIER:
          $ref: '#/components/schemas/LoanIdentifier'
      required:
      - LOAN_IDENTIFIER
    LoanIdentifier:
      title: LoanIdentifier
      type: object
      additionalProperties: true
      description: The information used to identify this loan by various parties to the transaction or other organizations.
      properties:
        LoanIdentifier:
          type: string
          nullable: true
          description: The value of the identifier for the specified type.
        LoanIdentifierType:
          $ref: '#/components/schemas/LoanIdentifierType'
      required:
      - LoanIdentifier
      - LoanIdentifierType
    LoanIdentifierType:
      title: LoanIdentifierType
      type: string
      nullable: true
      description: A value from a MISMO prescribed list that specifies the type of loan identifier.
      enum:
      - LenderLoan
      - UniversalLoan
    Parties:
      title: Parties
      type: object
      additionalProperties: true
      description: A collection of objects that define specific parties to a deal. This includes the direct participating parties, such as borrower and seller and the indirect parties such as the credit report provider.
      properties:
        PARTY:
          type: array
          items:
            $ref: '#/components/schemas/Party'
      required:
      - PARTY
    Party:
      title: Party
      type: object
      additionalProperties: true
      description: A collection of information about a single party to a transaction. Included direct participants like the borrower and seller as well as indirect participants such as the flood certificate provider.
      properties:
        INDIVIDUAL:
          $ref: '#/components/schemas/PartyIndividual'
        ROLES:
          $ref: '#/components/schemas/Roles'
        TAXPAYER_IDENTIFIERS:
          $ref: '#/components/schemas/TaxpayerIdentifiers'
      required:
      - INDIVIDUAL
      - ROLES
      - TAXPAYER_IDENTIFIERS
    PartyIndividual:
      title: INDIVIDUAL
      type: object
      additionalProperties: true
      description: Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
      properties:
        NAME:
          $ref: '#/components/schemas/IndividualName'
      required:
      - NAME
    IndividualName:
      title: NAME
      type: object
      additionalProperties: true
      description: Parent container for name that allows for choice group between parsed and unparsed containers.Parent container for name that allows for choice group between parsed and unparsed containers.
      properties:
        FirstName:
          type: string
          description: The first name of the individual represented by the parent object.
        LastName:
          type: string
          description: The last name of the individual represented by the parent object.
      required:
      - FirstName
      - LastName
    Roles:
      title: Roles
      type: object
      additionalProperties: true
      description: Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
      properties:
        ROLE:
          $ref: '#/components/schemas/Role'
      required:
      - ROLE
    Role:
      title: Role
      type: object
      additionalProperties: true
      description: ADocumentation not found in the MISMO model viewer and not provided by Freddie Mac.
      properties:
        ROLE_DETAIL:
          $ref: '#/components/schemas/RoleDetail'
      required:
      - ROLE_DETAIL
    RoleDetail:
      title: RoleDetail
      type: object
      additionalProperties: true
      description: Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/PartyRoleType'
      required:
      - PartyRoleType
    PartyRoleType:
      title: PartyRoleType
      type: string
      description: A value from a MISMO defined list that identifies the role that the party plays in the transaction. Parties may be either a person or legal entity. A party may play multiple roles in a transaction.A value from a MISMO defined list that identifies the role that the party plays in the transaction. Parties may be either a person or legal entity. A party may play multiple roles in a transaction.
      enum:
      - Borrower
    TaxpayerIdentifiers:
      title: TaxpayerIdentifiers
      type: object
      additionalProperties: true
      description: The collection of TAXPAYER_IDENTIFICATION elements
      properties:
        TAXPAYER_IDENTIFIER:
          $ref: '#/components/schemas/TaxpayerIdentifier'
      required:
      - TAXPAYER_IDENTIFIER
    TaxpayerIdentifier:
      title: TaxpayerIdentifier
      type: object
      additionalProperties: true
      description: Information about the Taxpayer identification values assigned to the individual or legal entity.Information about the Taxpayer identification values assigned to the individual or legal entity.
      properties:
        TaxpayerIdentifierType:
          $ref: '#/components/schemas/TaxpayerIdentifierType'
        TaxpayerIdentifierValue:
          type: string
          nullable: true
          description: The value of the taxpayer identifier as assigned by the IRS to the individual or legal entity.
      required:
      - TaxpayerIdentifierType
      - TaxpayerIdentifierValue
    TaxpayerIdentifierType:
      title: TaxpayerIdentifierType
      type: string
      nullable: true
      description: A value from a MISMO prescribed list that classifies identification numbers used by the Internal Revenue Service (IRS) in the administration of tax laws. A Social Security number (SSN) is issued by the SSA; all other taxpayer identification numbers are issued by the IRS.
      enum:
      - IndividualTaxpayerIdentificationNumber
      - SocialSecurityNumber
    Services:
      title: Services
      type: object
      additionalProperties: true
      description: A collection of objects that describe requests and responses for services.
      properties:
        SERVICE:
          $ref: '#/components/schemas/Service'
      required:
      - SERVICE
    Service:
      title: Service
      type: object
      additionalProperties: true
      description: A collection of details related to a fulfillment service or product in terms of request, process and result.
      properties:
        VERIFICATION_OF_ASSET:
          $ref: '#/components/schemas/VerificationOfAsset'
        STATUSES:
          $ref: '#/components/schemas/Statuses'
      required:
      - VERIFICATION_OF_ASSET
      - STATUSES
    VerificationOfAsset:
      title: VerificationOfAsset
      type: object
      additionalProperties: true
      description: Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
      properties:
        REPORTING_INFORMATION:
          $ref: '#/components/schemas/ReportingInformation'
        SERVICE_PRODUCT_FULFILLMENT:
          $ref: '#/components/schemas/ServiceProductFulfillment'
        VERIFICATION_OF_ASSET_RESPONSE:
          $ref: '#/components/schemas/VerificationOfAssetResponse'
      required:
      - REPORTING_INFORMATION
      - SERVICE_PRODUCT_FULFILLMENT
      - VERIFICATION_OF_ASSET_RESPONSE
    ReportingInformation:
      title: ReportingInformation
      type: object
      additionalProperties: true
      description: Information about an report identifier and a report name.
      properties:
        ReportingInformationIdentifier:
          type: string
          description: Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
      required:
      - ReportingInformationIdentifier
    ServiceProductFulfillment:
      title: ServiceProductFulfillment
      type: object
      additionalProperties: true
      description: A collection of details related to a fulfillment service or product in terms of request, process and result.
      properties:
        SERVICE_PRODUCT_FULFILLMENT_DETAIL:
          $ref: '#/components/schemas/ServiceProductFulfillmentDetail'
      required:
      - SERVICE_PRODUCT_FULFILLMENT_DETAIL
    ServiceProductFulfillmentDetail:
      title: ServiceProductFulfillmentDetail
      type: object
      additionalProperties: true
      description: Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
      properties:
        VendorOrderIdentifier:
          type: string
          nullable: true
          description: A string that uniquely identifies a type of order Verification of Asset.
        ServiceProductFulfillmentIdentifier:
          $ref: '#/components/schemas/ServiceProductFulfillmentIdentifier'
      required:
      - VendorOrderIdentifier
      - ServiceProductFulfillmentIdentifier
    ServiceProductFulfillmentIdentifier:
      title: ServiceProductFulfillmentIdentifier
      type: string
      description: Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
      enum:
      - VOA
      - VOE
    VerificationOfAssetResponse:
      title: VerificationOfAssetResponse
      type: object
      additionalProperties: true
      description: Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
      properties:
        ASSETS:
          $ref: '#/components/schemas/Assets'
      required:
      - ASSETS
    Assets:
      title: Assets
      type: object
      additionalProperties: true
      description: Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
      properties:
        ASSET:
          type: array
          items:
            $ref: '#/components/schemas/Asset'
          description: Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
      required:
      - ASSET
    Asset:
      title: Asset
      type: object
      additionalProperties: true
      description: Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
      properties:
        ASSET_DETAIL:
          $ref: '#/components/schemas/AssetDetail'
        ASSET_OWNERS:
          $ref: '#/components/schemas/AssetOwners'
        ASSET_HOLDER:
          $ref: '#/components/schemas/AssetHolder'
        ASSET_TRANSACTIONS:
          $ref: '#/components/schemas/AssetTransactions'
        VALIDATION_SOURCES:
          $ref: '#/components/schemas/ValidationSources'
      required:
      - ASSET_DETAIL
      - ASSET_OWNERS
      - ASSET_HOLDER
      - ASSET_TRANSACTIONS
      - VALIDATION_SOURCES
    AssetDetail:
      title: AssetDetail
      type: object
      additionalProperties: true
      description: Details about an asset.
      properties:
        AssetUniqueIdentifier:
          type: string
          description: A vendor created unique Identifier.
        AssetAccountIdentifier:
          type: string
          description: A unique alphanumeric string identifying an asset.
        AssetAsOfDate:
          type: string
          description: Account Report As of Date / Create Date. Format YYYY-MM-DD
        AssetDescription:
          type: string
          nullable: true
          description: A text description that further defines the Asset. This could be used to describe the shares associated with the stocks, bonds or mutual funds, retirement funds or business owned that the borrower has disclosed (named) as an asset.
        AssetAvailableBalanceAmount:
          type: number
          format: double
          description: Asset Account Available Balance.
        AssetCurrentBalanceAmount:
          type: number
          format: double
          description: A vendor created unique Identifier
        AssetType:
          $ref: '#/components/schemas/AssetType'
        AssetTypeAdditionalDescription:
          type: string
          nullable: true
          description: Additional Asset Decription some examples are Investment Tax-Deferred , Loan, 401K, 403B, Checking, Money Market, Credit Card,ROTH,529,Biller,ROLLOVER,CD,Savings,Investment Taxable, IRA, Mortgage, Line Of Credit.
        AssetDaysRequestedCount:
          type: integer
          description: The Number of days requested made to the Financial Institution. Example When looking for 3 months of data from the FI, pass in 90 days.
        AssetOwnershipType:
          type: string
          nullable: true
          description: Ownership type of the asset account.
      required:
      - AssetUniqueIdentifier
      - AssetAccountIdentifier
      - AssetAsOfDate
      - AssetDescription
      - AssetAvailableBalanceAmount
      - AssetCurrentBalanceAmount
      - AssetType
      - AssetTypeAdditionalDescription
      - AssetDaysRequestedCount
      - AssetOwnershipType
    AssetType:
      title: AssetType
      type: string
      description: A value from a MISMO prescribed list that specifies financial assets in a mortgage loan transaction. Assets may be either liquid or fixed and are associated with a corresponding asset amount.
      enum:
      - CheckingAccount
      - SavingsAccount
      - Investment
      - MoneyMarketFund
      - Other
    AssetOwners:
      title: AssetOwners
      type: object
      additionalProperties: true
      description: Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
      properties:
        ASSET_OWNER:
          type: array
          items:
            $ref: '#/components/schemas/AssetOwner'
          description: Multiple Occurances of Account Owners Full Name up to 4.
      required:
      - ASSET_OWNER
    AssetOwner:
      title: AssetOwner
      type: object
      additionalProperties: true
      description: Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
      properties:
        AssetOwnerText:
          type: string
          nullable: true
          description: Account Owner Full Name.
      required:
      - AssetOwnerText
    AssetHolder:
      title: AssetHolder
      type: object
      additionalProperties: true
      description: Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
      properties:
        NAME:
          $ref: '#/components/schemas/AssetHolderName'
      required:
      - NAME
    AssetHolderName:
      title: NAME
      type: object
      additionalProperties: true
      description: Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
      properties:
        FullName:
          type: string
          description: The unparsed name of either an individual or a legal entity.
      required:
      - FullName
    AssetTransactions:
      title: AssetTransactions
      type: object
      additionalProperties: true
      description: Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
      properties:
        ASSET_TRANSACTION:
          type: array
          items:
            $ref: '#/components/schemas/AssetTransaction'
      required:
      - ASSET_TRANSACTION
    AssetTransaction:
      title: AssetTransaction
      type: object
      additionalProperties: true
      description: An object representing...
      properties:
        ASSET_TRANSACTION_DETAIL:
          $ref: '#/components/schemas/AssetTransactionDetail'
        ASSET_TRANSACTION_DESCRIPTON:
          type: array
          items:
            $ref: '#/components/schemas/AssetTransactionDescription'
          description: Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
      required:
      - ASSET_TRANSACTION_DETAIL
      - ASSET_TRANSACTION_DESCRIPTON
    AssetTransactionDetail:
      title: AssetTransactionDetail
      type: object
      additionalProperties: true
      description: Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
      properties:
        AssetTransactionUniqueIdentifier:
          type: string
          description: A vendor created unique Identifier.
        AssetTransactionAmount:
          type: number
          description: Asset Transaction Amount.
        AssetTransactionDate:
          type: string
          format: date
          description: Asset Transaction Date.
        AssetTransactionPostDate:
          type: string
          format: date
          description: Asset Transaction Post Date.
        AssetTransactionType:
          $ref: '#/components/schemas/AssetTransactionType'
        AssetTransactionPaidByName:
          type: string
          nullable: true
          description: Populate with who did the transaction.
        AssetTransactionTypeAdditionalDescription:
          type: string
          nullable: true
          description: FI Provided - examples are atm, cash, check, credit, debit, deposit, directDebit, directDeposit, dividend, fee, interest, other, payment, pointOfSale, repeatPayment, serviceCharge, transfer.
        AssetTransactionCategoryType:
          $ref: '#/components/schemas/AssetTransactionCategoryType'
        FinancialInstitutionTransactionIdentifier:
          type: string
          nullable: true
          description: FI provided Transaction Identifier.
      required:
      - AssetTransactionUniqueIdentifier
      - AssetTransactionAmount
      - AssetTransactionDate
      - AssetTransactionPostDate
      - AssetTransactionType
      - AssetTransactionPaidByName
      - AssetTransactionTypeAdditionalDescription
      - AssetTransactionCategoryType
      - FinancialInstitutionTransactionIdentifier
    AssetTransactionType:
      title: AssetTransactionType
      type: string
      description: Asset Transaction Type.
      enum:
      - Credit
      - Debit
    AssetTransactionCategoryType:
      title: AssetTransactionCategoryType
      type: string
      nullable: true
      description: Asset Transaction Category Type Enumerated derived by Vendor.
      enum:
      - ATMFee
      - Advertising
      - AirTravel
      - AlcoholBars
      - Allowance
      - Amusement
      - Arts
      - AutoTransport
      - AutoInsurance
      - AutoPayment
      - BabySupplies
      - BabysitterDaycare
      - BankFee
      - BillsUtilities
      - Bonus
      - BooksSupplies
      - Business Services
      - Buy
      - CashATM
      - Charity
      - Check
      - ChildSupport
      - Clothing
      - CoffeeShops
      - CreditCardPayment
      - Dentist
      - Doctor
      - Education
      - ElectronicsSoftware
      - Entertainment
      - Eyecare
      - FastFood
      - FederalTax
      - FeesCharges
      - FinanceCharge
      - Financial
      - FinancialAdvisor
      - FoodDining
      - Furnishings
      - GasFuel
      - GiftsDonations
      - Groceries
      - Gym
      - Hair
      - HealthFitness
      - HealthInsurance
      - Hobbies
      - Home
      - HomeImprovement
      - HomeInsurance
      - HomePhone
      - HomeServices
      - HomeSupplies
      - Hotel
      - Income
      - InterestIncome
      - Internet
      - Investments
      - Kids
      - KidsActivities
      - LateFee
      - Laundry
      - LawnGarden
      - Legal
      - LifeInsurance
      - LoanInsurance
      - LoanPayment
      - Loans
      - MobilePhone
      - MortgageRent
      - MoviesDVDs
      - Music
      - NewspapersMagazines
      - OfficeSupplies
      - Parking
      - Paycheck
      - PersonalCare
      - PetFoodSupplies
      - PetGrooming
      - Pets
      - Pharmacy
      - Printing
      - Property Tax
      - Public Transportation
      - Reimbursement
      - RentalCarTaxi
      - Restaurants
      - SalesTax
      - ServiceParts
      - ServiceFee
      - Shipping
      - Shopping
      - SpaMassage
      - SportingGoods
      - Sports
      - StateTax
      - Student Loan
      - Taxes
      - Television
      - Toys
      - Transfer
      - Travel
      - Tuition
      - Uncategorized
      - Utilities
      - Vacation
      - Veterinary
    AssetTransactionDescription:
      title: AssetTransactionDescription
      type: object
      additionalProperties: true
      description: Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
      properties:
        AssetTransactionDescription:
          type: string
          description: Asset Transaction Description String up to 3 occurances 1 required.
      required:
      - AssetTransactionDescription
    ValidationSources:
      title: ValidationSources
      type: object
      additionalProperties: true
      description: Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
      properties:
        VALIDATION_SOURCE:
          type: array
          items:
            $ref: '#/components/schemas/ValidationSource'
          description: Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
      required:
      - VALIDATION_SOURCE
    ValidationSource:
      title: ValidationSource
      type: object
      additionalProperties: true
      description: Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
      properties:
        ValidationSourceName:
          type: string
          nullable: true
          description: Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
        ValidationSourceReferenceIdentifier:
          type: string
          nullable: true
          description: Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
      required:
      - ValidationSourceName
      - ValidationSourceReferenceIdentifier
    Statuses:
      title: Statuses
      type: object
      additionalProperties: true
      description: A collection of STATUS containers.
      properties:
        STATUS:
          $ref: '#/components/schemas/Status'
      required:
      - STATUS
    Status:
      title: Status
      type: object
      additionalProperties: true
      description: Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
      properties:
        StatusCode:
          type: string
          nullable: true
          description: Satus Code.
        StatusDescription:
          type: string
          nullable: true
          description: Status Description.
      required:
      - StatusCode
      - StatusDescription
    CreditFreddieMacReportsGetRequest:
      title: CreditFreddieMacReportsGetRequest
      type: object
      description: CreditFreddieMacReportsGetRequest defines the request schema for `credit/asset_report/freddie_mac/get`
      properties:
        audit_copy_token:
          type: string
          description: A token that can be shared with a third party auditor to allow them to obtain access to the Asset Report. This token should be stored securely.
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
      required:
      - audit_copy_token
    CreditFreddieMacReportsGetResponse:
      title: CreditFreddieMacReportsGetResponse
      type: object
      additionalProperties: true
      description: CreditFreddieMacReportsGetResponse defines the response schema for `/credit/freddie_mac/reports/get`
      properties:
        DEAL:
          $ref: '#/components/schemas/CreditFreddieMacVerificationOfAssetsDeal'
        request_id:
          $ref: '#/components/schemas/RequestID'
        SchemaVersion:
          type: number
          description: The Verification Of Assets (VOA) schema version.
      required:
      - request_id
      - DEAL
      - SchemaVersion
    CreditFreddieMacVerificationOfAssetsDeal:
      title: CreditFreddieMacVerificationOfAssetsDeal
      type: object
      additionalProperties: true
      description: An object representing an Asset Report with Freddie Mac schema.
      properties:
        LOANS:
          $ref: '#/components/schemas/CreditFreddieMacLoans'
        PARTIES:
          $ref: '#/components/schemas/CreditFreddieMacParties'
        SERVICES:
          $ref: '#/components/schemas/CreditFreddieMacServices'
      required:
      - LOANS
      - PARTIES
      - SERVICES
    CreditFreddieMacLoans:
      title: CreditFreddieMacLoans
      type: object
      additionalProperties: true
      description: A collection of loans that are part of a single deal.
      properties:
        LOAN:
          $ref: '#/components/schemas/CreditFreddieMacLoan'
      required:
      - LOAN
    CreditFreddieMacLoan:
      title: CreditFreddieMacLoan
      type: object
      additionalProperties: true
      description: Information specific to a mortgage loan agreement between one or more borrowers and a mortgage lender.
      properties:
        LOAN_IDENTIFIERS:
          $ref: '#/components/schemas/CreditFreddieMacLoanIdentifiers'
        LoanRoleType:
          type: string
          description: Type of loan. The value can only be "SubjectLoan"
      required:
      - LOAN_IDENTIFIERS
      - LoanRoleType
    CreditFreddieMacLoanIdentifiers:
      title: CreditFreddieMacLoanIdentifiers
      type: object
      additionalProperties: true
      description: Collection of current and previous identifiers for this loan.
      properties:
        LOAN_IDENTIFIER:
          type: array
          items:
            $ref: '#/components/schemas/LoanIdentifier'
      required:
      - LOAN_IDENTIFIER
    CreditFreddieMacServices:
      title: CreditFreddieMacServices
      type: object
      additionalProperties: true
      description: A collection of objects that describe requests and responses for services.
      properties:
        SERVICE:
          $ref: '#/components/schemas/CreditFreddieMacService'
      required:
      - SERVICE
    CreditFreddieMacService:
      title: CreditFreddieMacService
      type: object
      additionalProperties: true
      description: A collection of details related to a fulfillment service or product in terms of request, process and result.
      properties:
        VERIFICATION_OF_ASSET:
          type: array
          items:
            $ref: '#/components/schemas/CreditFreddieMacVerificationOfAsset'
        STATUSES:
          $ref: '#/components/schemas/Statuses'
      required:
      - VERIFICATION_OF_ASSET
      - STATUSES
    CreditFreddieMacVerificationOfAsset:
      title: CreditFreddieMacVerificationOfAsset
      type: object
      additionalProperties: true
      description: Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
      properties:
        REPORTING_INFORMATION:
          $ref: '#/components/schemas/CreditFreddieMacReportingInformation'
        SERVICE_PRODUCT_FULFILLMENT:
          $ref: '#/components/schemas/ServiceProductFulfillment'
        VERIFICATION_OF_ASSET_RESPONSE:
          $ref: '#/components/schemas/CreditFreddieMacVerificationOfAssetResponse'
      required:
      - REPORTING_INFORMATION
      - SERVICE_PRODUCT_FULFILLMENT
      - VERIFICATION_OF_ASSET_RESPONSE
    CreditFreddieMacReportingInformation:
      title: CreditFreddieMacReportingInformation
      type: object
      additionalProperties: true
      description: Information about an report identifier and a report name.
      properties:
        ReportDateTime:
          type: string
          description: Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
        ReportIdentifierType:
          type: string
          description: Documentation not found in the MISMO model viewer and not provided by Freddie Mac. The value can only be "ReportID"
        ReportingInformationParentIdentifier:
          type: string
          description: Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
        ReportingInformationIdentifier:
          type: string
          description: Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
      required:
      - ReportingInformationIdentifier
    CreditFreddieMacVerificationOfAssetResponse:
      title: VerificationOfAssetResponse
      type: object
      additionalProperties: true
      description: Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
      properties:
        ASSETS:
          $ref: '#/components/schemas/CreditFreddieMacAssets'
      required:
      - ASSETS
    CreditFreddieMacAssets:
      title: CreditFreddieMacAssets
      type: object
      additionalProperties: true
      description: Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
      properties:
        ASSET:
          type: array
          items:
            $ref: '#/components/schemas/CreditFreddieMacAsset'
          description: Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
      required:
      - ASSET
    CreditFreddieMacAsset:
      title: CreditFreddieMacAsset
      type: object
      additionalProperties: true
      description: Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
      properties:
        ASSET_DETAIL:
          $ref: '#/components/schemas/AssetDetail'
        ASSET_OWNERS:
          $ref: '#/components/schemas/AssetOwners'
        ASSET_HOLDER:
          $ref: '#/components/schemas/AssetHolder'
        ASSET_TRANSACTIONS:
          $ref: '#/components/schemas/CreditFreddieMacAssetTransactions'
        VALIDATION_SOURCES:
          $ref: '#/components/schemas/ValidationSources'
      required:
      - ASSET_DETAIL
      - ASSET_OWNERS
      - ASSET_HOLDER
      - ASSET_TRANSACTIONS
      - VALIDATION_SOURCES
    CreditFreddieMacAssetTransactions:
      title: CreditFreddieMacAssetTransactions
      type: object
      additionalProperties: true
      description: Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
      properties:
        ASSET_TRANSACTION:
          type: array
          items:
            $ref: '#/components/schemas/CreditFreddieMacAssetTransaction'
      required:
      - ASSET_TRANSACTION
    CreditFreddieMacAssetTransaction:
      title: CreditFreddieMacAssetTransaction
      type: object
      additionalProperties: true
      description: An object representing...
      properties:
        ASSET_TRANSACTION_DETAIL:
          $ref: '#/components/schemas/AssetTransactionDetail'
        ASSET_TRANSACTION_DESCRIPTION:
          type: array
          items:
            $ref: '#/components/schemas/AssetTransactionDescription'
          description: Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
      required:
      - ASSET_TRANSACTION_DETAIL
      - ASSET_TRANSACTION_DESCRIPTION
    CreditFreddieMacParties:
      title: CreditFreddieMacParties
      type: object
      additionalProperties: true
      description: A collection of objects that define specific parties to a deal. This includes the direct participating parties, such as borrower and seller and the indirect parties such as the credit report provider.
      properties:
        PARTY:
          type: array
          items:
            $ref: '#/components/schemas/CreditFreddieMacParty'
      required:
      - PARTY
    CreditFreddieMacParty:
      title: CreditFreddieMacParty
      type: object
      additionalProperties: true
      description: A collection of information about a single party to a transaction. Included direct participants like the borrower and seller as well as indirect participants such as the flood certificate provider.
      properties:
        INDIVIDUAL:
          $ref: '#/components/schemas/CreditFreddieMacPartyIndividual'
        ROLES:
          $ref: '#/components/schemas/Roles'
        TAXPAYER_IDENTIFIERS:
          $ref: '#/components/schemas/TaxpayerIdentifiers'
      required:
      - INDIVIDUAL
      - ROLES
      - TAXPAYER_IDENTIFIERS
    CreditFreddieMacPartyIndividual:
      title: CreditFreddieMacPartyIndividual
      type: object
      additionalProperties: true
      description: Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
      properties:
        NAME:
          $ref: '#/components/schemas/CreditFreddieMacIndividualName'
      required:
      - NAME
    CreditFreddieMacIndividualName:
      title: CreditFreddieMacIndividualName
      type: object
      additionalProperties: true
      description: Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
      properties:
        FirstName:
          type: string
          description: The first name of the individual represented by the parent object.
        LastName:
          type: string
          description: The last name of the individual represented by the parent object.
        MiddleName:
          type: string
          description: The middle name of the individual represented by the parent object.
      required:
      - FirstName
      - LastName
      - MiddleName
    ItemGetRequest:
      description: ItemGetRequest defines the request schema for `/item/get`
      type: object
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        access_token:
          $ref: '#/components/schemas/AccessToken'
      required:
      - access_token
    ItemGetResponse:
      type: object
      additionalProperties: true
      description: ItemGetResponse defines the response schema for `/item/get` and `/item/webhook/update`
      properties:
        item:
          $ref: '#/components/schemas/Item'
        status:
          $ref: '#/components/schemas/ItemStatusNullable'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - item
      - request_id
    ItemRemoveRequest:
      type: object
      description: ItemRemoveRequest defines the request schema for `/item/remove`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        access_token:
          $ref: '#/components/schemas/AccessToken'
      required:
      - access_token
    ItemRemoveResponse:
      type: object
      additionalProperties: true
      description: ItemRemoveResponse defines the response schema for `/item/remove`
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - request_id
    ItemWebhookUpdateRequest:
      type: object
      description: ItemWebhookUpdateRequest defines the request schema for `/item/webhook/update`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        access_token:
          $ref: '#/components/schemas/AccessToken'
        webhook:
          type: string
          description: The new webhook URL to associate with the Item. To remove a webhook from an Item, set to `null`.
          nullable: true
      required:
      - access_token
    ItemWebhookUpdateResponse:
      type: object
      additionalProperties: true
      description: ItemWebhookUpdateResponse defines the response schema for `/item/webhook/update`
      properties:
        item:
          $ref: '#/components/schemas/Item'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - item
      - request_id
    ItemAccessTokenInvalidateRequest:
      type: object
      description: ItemAccessTokenInvalidateRequest defines the request schema for `/item/access_token/invalidate`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        access_token:
          $ref: '#/components/schemas/AccessToken'
      required:
      - access_token
    ItemAccessTokenInvalidateResponse:
      type: object
      additionalProperties: true
      description: ItemAccessTokenInvalidateResponse defines the response schema for `/item/access_token/invalidate`
      properties:
        new_access_token:
          $ref: '#/components/schemas/AccessToken'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - new_access_token
      - request_id
    ItemPublicTokenExchangeRequest:
      type: object
      description: ItemPublicTokenExchangeRequest defines the request schema for `/item/public_token/exchange`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        public_token:
          type: string
          description: Your `public_token`, obtained from the Link `onSuccess` callback or `/sandbox/item/public_token/create`.
      required:
      - public_token
    ItemPublicTokenExchangeResponse:
      type: object
      additionalProperties: true
      description: ItemPublicTokenExchangeResponse defines the response schema for `/item/public_token/exchange`
      properties:
        access_token:
          $ref: '#/components/schemas/AccessToken'
        item_id:
          type: string
          description: The `item_id` value of the Item associated with the returned `access_token`
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - access_token
      - item_id
      - request_id
    ItemPublicTokenCreateRequest:
      type: object
      description: ItemPublicTokenCreateRequest defines the request schema for `/item/public_token/create`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        access_token:
          $ref: '#/components/schemas/AccessToken'
      required:
      - access_token
    ItemPublicTokenCreateResponse:
      type: object
      additionalProperties: true
      description: ItemPublicTokenCreateResponse defines the response schema for `/item/public_token/create`
      properties:
        public_token:
          type: string
          description: A `public_token` for the particular Item corresponding to the specified `access_token`
        expiration:
          type: string
          format: date-time
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - public_token
      - request_id
    ItemImportRequest:
      type: object
      description: ItemImportRequest defines the request schema for `/item/import`
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        products:
          type: array
          description: Array of product strings
          items:
            $ref: '#/components/schemas/Products'
          minItems: 1
          x-override-enum-values-shown:
          - assets
          - auth
          - balance
          - employment
          - identity
          - income_verification
          - investments
          - liabilities
          - payment_initiation
          - standing_orders
          - transactions
          - transfer
        user_auth:
          $ref: '#/components/schemas/ItemImportRequestUserAuth'
        options:
          $ref: '#/components/schemas/ItemImportRequestOptions'
      required:
      - products
      - user_auth
    ItemImportRequestOptions:
      type: object
      description: An optional object to configure `/item/import` request.
      properties:
        webhook:
          type: string
          description: |
            Specifies a webhook URL to associate with an Item. Plaid fires a webhook if credentials fail.
    ItemImportRequestUserAuth:
      type: object
      required:
      - user_id
      - auth_token
      description: Object of user ID and auth token pair, permitting Plaid to aggregate a user’s accounts
      properties:
        user_id:
          type: string
          description: Opaque user identifier
        auth_token:
          type: string
          description: Authorization token Plaid will use to aggregate this user’s accounts
    ItemImportResponse:
      type: object
      additionalProperties: true
      description: ItemImportResponse defines the response schema for `/item/import`
      properties:
        access_token:
          $ref: '#/components/schemas/AccessToken'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - access_token
      - request_id
    Item:
      description: Metadata about the Item.
      type: object
      additionalProperties: true
      properties:
        item_id:
          description: The Plaid Item ID. The `item_id` is always unique; linking the same account at the same institution twice will result in two Items with different `item_id` values. Like all Plaid identifiers, the `item_id` is case-sensitive.
          type: string
        institution_id:
          description: The Plaid Institution ID associated with the Item. Field is `null` for Items created via Same Day Micro-deposits.
          type: string
          nullable: true
        webhook:
          description: The URL registered to receive webhooks for the Item.
          type: string
          nullable: true
        error:
          $ref: '#/components/schemas/PlaidError'
        available_products:
          description: A list of products available for the Item that have not yet been accessed. The contents of this array will be mutually exclusive with `billed_products`.
          type: array
          items:
            $ref: '#/components/schemas/Products'
        billed_products:
          description: |
            A list of products that have been billed for the Item. The contents of this array will be mutually exclusive with `available_products`. Note - `billed_products` is populated in all environments but only requests in Production are billed. Also note that products that are billed on a pay-per-call basis rather than a pay-per-Item basis, such as `balance`, will not appear here.
          type: array
          items:
            $ref: '#/components/schemas/Products'
        products:
          description: |
            A list of products added to the Item. In almost all cases, this will be the same as the `billed_products` field. For some products, it is possible for the product to be added to an Item but not yet billed (e.g. Assets, before `/asset_report/create` has been called, or Auth or Identity when added as Optional Products but before their endpoints have been called), in which case the product may appear in `products` but not in `billed_products`.
          type: array
          items:
            $ref: '#/components/schemas/Products'
        consented_products:
          description: |
            A list of products that have gone through consent collection for the Item. Only present for those enabled in the [Data Transparency](https://plaid.com/docs/link/data-transparency-messaging-migration-guide) beta. If you are not enrolled in Data Transparency, this field is not used.
          type: array
          items:
            $ref: '#/components/schemas/Products'
        consent_expiration_time:
          description: |
            The RFC 3339 timestamp after which the consent provided by the end user will expire. Upon consent expiration, the item will enter the `ITEM_LOGIN_REQUIRED` error state. To circumvent the `ITEM_LOGIN_REQUIRED` error and maintain continuous consent, the end user can reauthenticate via Link’s update mode in advance of the consent expiration time.

            Note - This is only relevant for certain OAuth-based institutions. For all other institutions, this field will be null.
          type: string
          format: date-time
          nullable: true
        update_type:
          type: string
          description: |-
            Indicates whether an Item requires user interaction to be updated, which can be the case for Items with some forms of two-factor authentication.

            `background` - Item can be updated in the background

            `user_present_required` - Item requires user interaction to be updated
          enum:
          - background
          - user_present_required
      required:
      - item_id
      - webhook
      - error
      - available_products
      - billed_products
      - consent_expiration_time
      - update_type
    ItemStatus:
      description: An object with information about the status of the Item.
      type: object
      additionalProperties: true
      nullable: true
      x-examples:
        example-1: {}
      title: ItemStatus
      properties:
        investments:
          $ref: '#/components/schemas/ItemStatusInvestments'
        transactions:
          $ref: '#/components/schemas/ItemStatusTransactions'
        last_webhook:
          $ref: '#/components/schemas/ItemStatusLastWebhook'
    ItemStatusNullable:
      description: Information about the last successful and failed transactions update for the Item.
      nullable: true
      allOf:
      - $ref: '#/components/schemas/ItemStatus'
      - type: object
        additionalProperties: true
    ItemStatusTransactions:
      description: Information about the last successful and failed transactions update for the Item.
      type: object
      additionalProperties: true
      nullable: true
      properties:
        last_successful_update:
          description: '[ISO 8601](https://wikipedia.org/wiki/ISO_8601) timestamp of the last successful transactions update for the Item. The status will update each time Plaid successfully connects with the institution, regardless of whether any new data is available in the update.'
          type: string
          format: date-time
          nullable: true
        last_failed_update:
          description: '[ISO 8601](https://wikipedia.org/wiki/ISO_8601) timestamp of the last failed transactions update for the Item. The status will update each time Plaid fails an attempt to connect with the institution, regardless of whether any new data is available in the update.'
          type: string
          format: date-time
          nullable: true
    ItemStatusInvestments:
      description: Information about the last successful and failed investments update for the Item.
      type: object
      additionalProperties: true
      nullable: true
      properties:
        last_successful_update:
          description: '[ISO 8601](https://wikipedia.org/wiki/ISO_8601) timestamp of the last successful investments update for the Item. The status will update each time Plaid successfully connects with the institution, regardless of whether any new data is available in the update.'
          type: string
          format: date-time
          nullable: true
        last_failed_update:
          description: '[ISO 8601](https://wikipedia.org/wiki/ISO_8601) timestamp of the last failed investments update for the Item. The status will update each time Plaid fails an attempt to connect with the institution, regardless of whether any new data is available in the update.'
          type: string
          format: date-time
          nullable: true
    ItemStatusLastWebhook:
      description: Information about the last webhook fired for the Item.
      type: object
      additionalProperties: true
      nullable: true
      properties:
        sent_at:
          description: |
            [ISO 8601](https://wikipedia.org/wiki/ISO_8601) timestamp of when the webhook was fired.
          type: string
          format: date-time
          nullable: true
        code_sent:
          description: The last webhook code sent.
          type: string
          nullable: true
    FDXNotificationCategory:
      type: string
      title: Notification Category
      enum:
      - SECURITY
      - MAINTENANCE
      - FRAUD
      - CONSENT
      - NEW_DATA
      description: Category of Notification
    FDXTimestamp:
      title: Timestamp
      description: ISO 8601 date-time in format 'YYYY-MM-DDThh:mm:ss.nnn[Z|[+|-]hh:mm]' according to [IETF RFC3339](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14)
      type: string
      format: date-time
      example: "2021-07-15T14:46:41.375Z"
    FDXNotificationType:
      type: string
      title: Notification Type
      enum:
      - CONSENT_REVOKED
      - CONSENT_UPDATED
      - CUSTOM
      - SERVICE
      - BALANCE
      - PLANNED_OUTAGE
      description: Type of Notification
    FDXNotificationSeverity:
      type: string
      title: Notification Severity
      enum:
      - EMERGENCY
      - ALERT
      - WARNING
      - NOTICE
      - INFO
      description: Severity level of notification
    FDXNotificationPriority:
      type: string
      title: Notification Priority
      description: Priority of notification
      enum:
      - HIGH
      - MEDIUM
      - LOW
    FDXPartyType:
      title: Party Type
      description: Identifies the type of a party
      type: string
      enum:
      - DATA_ACCESS_PLATFORM
      - DATA_PROVIDER
      - DATA_RECIPIENT
      - INDIVIDUAL
      - MERCHANT
      - VENDOR
    FDXPartyRegistry:
      title: Party Registry
      description: The registry containing the party’s registration with name and id
      type: string
      enum:
      - FDX
      - GLEIF
      - ICANN
      - PRIVATE
    FDXParty:
      title: Party entity
      description: FDX Participant - an entity or person that is a part of a FDX API transaction
      type: object
      required:
      - name
      - type
      properties:
        name:
          description: Human recognizable common name
          type: string
        type:
          $ref: '#/components/schemas/FDXPartyType'
        homeUri:
          description: URI for party, where an end user could learn more about the company or application involved in the data sharing chain
          type: string
          format: uri
        logoUri:
          description: URI for a logo asset to be displayed to the end user
          type: string
          format: uri
        registry:
          $ref: '#/components/schemas/FDXPartyRegistry'
        registeredEntityName:
          description: Registered name of party
          type: string
        registeredEntityId:
          description: Registered id of party
          type: string
    FDXNotificationPayloadIdType:
      type: string
      title: Notification Payload Id Type
      enum:
      - ACCOUNT
      - CUSTOMER
      - PARTY
      - MAINTENANCE
      - CONSENT
      description: Type of entity causing origination of a notification
    FDXInitiatorFiAttribute:
      title: Initiator Fi Attribute
      description: Initiator Fi Attribute
      type: object
      properties:
        name:
          type: string
        value:
          $ref: '#/components/schemas/FDXPartyType'
    FDXFiAttribute:
      title: FI Attribute entity
      description: Financial Institution provider-specific attribute
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          description: Name of attribute
        value:
          type: string
          description: Value of attribute
      required:
      - name
      - value
    FDXNotificationPayload:
      title: Notification Payload entity
      type: object
      description: Custom key-value pairs payload for a notification
      properties:
        id:
          type: string
          description: ID for the origination entity related to the notification
        idType:
          $ref: '#/components/schemas/FDXNotificationPayloadIdType'
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/FDXFiAttribute'
    FDXHateoasLinkAction:
      type: string
      enum:
      - GET
      - POST
      - PATCH
      - DELETE
      - PUT
      description: HTTP Method to use for the request
    FDXHateoasLink:
      title: HATEOAS Link
      description: REST application constraint (Hypermedia As The Engine Of Application State)
      required:
      - href
      type: object
      properties:
        href:
          type: string
          format: uri-reference
          description: URL to invoke the action on the resource
          example: https://api.fi.com/fdx/v4/accounts/12345
        action:
          $ref: '#/components/schemas/FDXHateoasLinkAction'
        rel:
          description: Relation of this link to its containing entity, as defined by and with many example relation values at [IETF RFC5988](https://datatracker.ietf.org/doc/html/rfc5988)
          type: string
        types:
          type: array
          items:
            $ref: '#/components/schemas/FDXContentTypes'
          description: Content-types that can be used in the Accept header
    FDXContentTypes:
      title: Content Types
      description: Types of document formats. (Suggested values)
      type: string
      enum:
      - application/pdf
      - image/gif
      - image/jpeg
      - image/tiff
      - image/png
      - application/json
    FDXNotification:
      title: FDX Notification entity
      type: object
      description: Provides the base fields of a notification. Clients will read the `type` property to determine the expected notification payload
      properties:
        notificationId:
          type: string
          description: Id of notification
        type:
          $ref: '#/components/schemas/FDXNotificationType'
        sentOn:
          $ref: '#/components/schemas/FDXTimestamp'
        category:
          $ref: '#/components/schemas/FDXNotificationCategory'
        severity:
          $ref: '#/components/schemas/FDXNotificationSeverity'
        priority:
          $ref: '#/components/schemas/FDXNotificationPriority'
        publisher:
          $ref: '#/components/schemas/FDXParty'
        subscriber:
          $ref: '#/components/schemas/FDXParty'
        notificationPayload:
          $ref: '#/components/schemas/FDXNotificationPayload'
        url:
          $ref: '#/components/schemas/FDXHateoasLink'
      required:
      - notificationId
      - type
      - sentOn
      - category
      - notificationPayload
    SignalEvaluateRequest:
      title: SignalEvaluateRequest
      description: SignalEvaluateRequest defines the request schema for `/signal/evaluate`
      type: object
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        access_token:
          $ref: '#/components/schemas/AccessToken'
        account_id:
          type: string
          description: |-
            The Plaid `account_id` of the account that is the funding source for the proposed transaction. The `account_id` is returned in the `/accounts/get` endpoint as well as the [`onSuccess`](/docs/link/ios/#link-ios-onsuccess-linkSuccess-metadata-accounts-id) callback metadata.

            This will return an [`INVALID_ACCOUNT_ID`](/docs/errors/invalid-input/#invalid_account_id) error if the account has been removed at the bank or if the `account_id` is no longer valid.
        client_transaction_id:
          type: string
          description: The unique ID that you would like to use to refer to this transaction. For your convenience mapping your internal data, you could use your internal ID/identifier for this transaction. The max length for this field is 36 characters.
          minLength: 1
          maxLength: 36
        amount:
          type: number
          format: double
          description: The transaction amount, in USD (e.g. `102.05`)
        user_present:
          type: boolean
          description: '`true` if the end user is present while initiating the ACH transfer and the endpoint is being called; `false` otherwise (for example, when the ACH transfer is scheduled and the end user is not present, or you call this endpoint after the ACH transfer but before submitting the Nacha file for ACH processing).'
          nullable: true
        client_user_id:
          type: string
          description: A unique ID that identifies the end user in your system. This ID is used to correlate requests by a user with multiple Items. Personally identifiable information, such as an email address or phone number, should not be used in the `client_user_id`.
        is_recurring:
          type: boolean
          description: '`true` if the ACH transaction is a recurring transaction; `false` otherwise '
          nullable: true
        default_payment_method:
          type: string
          description: |-
            The default ACH or non-ACH payment method to complete the transaction.
            `SAME_DAY_ACH`: Same Day ACH by NACHA. The debit transaction is processed and settled on the same day
            `NEXT_DAY_ACH`: Next Day ACH settlement for debit transactions, offered by some payment processors
            `STANDARD_ACH`: standard ACH by NACHA
            `REAL_TIME_PAYMENTS`: real-time payments such as RTP and FedNow
            `DEBIT_CARD`: if the default payment is over debit card networks
            `MULTIPLE_PAYMENT_METHODS`: if there is no default debit rail or there are multiple payment methods
            Possible values:  `SAME_DAY_ACH`, `NEXT_DAY_ACH`, `STANDARD_ACH`, `REAL_TIME_PAYMENTS`, `DEBIT_CARD`, `MULTIPLE_PAYMENT_METHODS`
          nullable: true
        user:
          $ref: '#/components/schemas/SignalUser'
        device:
          $ref: '#/components/schemas/SignalDevice'
        risk_profile_key:
          x-hidden-from-docs: true
          type: string
          description: The name of the risk profile to use for this transaction. A risk profile can be configured using via the Plaid Dashboard. If not provided, no risk profile will be used. This feature is currently in closed beta; to request access, contact your account manager.
          minLength: 1
          maxLength: 32
          nullable: true
      required:
      - access_token
      - account_id
      - client_transaction_id
      - amount
    SignalEvaluateResponse:
      title: SignalEvaluateResponse
      description: SignalEvaluateResponse defines the response schema for `/signal/income/evaluate`
      type: object
      additionalProperties: true
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
        scores:
          $ref: '#/components/schemas/SignalScores'
        core_attributes:
          $ref: '#/components/schemas/SignalEvaluateCoreAttributes'
        risk_profile:
          $ref: '#/components/schemas/RiskProfile'
        warnings:
          type: array
          description: If bank information was not available to be used in the Signal model, this array contains warnings describing why bank data is missing. If you want to receive an API error instead of Signal scores in the case of missing bank data, file a support ticket or contact your Plaid account manager.
          items:
            $ref: '#/components/schemas/SignalWarning'
      required:
      - request_id
      - scores
      - warnings
    SignalDecisionReportRequest:
      title: SignalDecisionReportRequest
      description: SignalDecisionReportRequest defines the request schema for `/signal/decision/report`
      type: object
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        client_transaction_id:
          type: string
          description: Must be the same as the `client_transaction_id` supplied when calling `/signal/evaluate`
          minLength: 1
          maxLength: 36
        initiated:
          type: boolean
          description: |-
            `true` if the ACH transaction was initiated, `false` otherwise.

            This field must be returned as a boolean. If formatted incorrectly, this will result in an [`INVALID_FIELD`](/docs/errors/invalid-request/#invalid_field) error.
        days_funds_on_hold:
          type: integer
          description: |-
            The actual number of days (hold time) since the ACH debit transaction that you wait before making funds available to your customers. The holding time could affect the ACH return rate.

            For example, use 0 if you make funds available to your customers instantly or the same day following the debit transaction, or 1 if you make funds available the next day following the debit initialization.
          minimum: 0
          nullable: true
        decision_outcome:
          $ref: '#/components/schemas/SignalDecisionOutcome'
        payment_method:
          $ref: '#/components/schemas/SignalPaymentMethod'
        amount_instantly_available:
          type: number
          format: double
          description: 'The amount (in USD) made available to your customers instantly following the debit transaction. It could be a partial amount of the requested transaction (example: 102.05).'
          nullable: true
      required:
      - client_transaction_id
      - initiated
    SignalDecisionReportResponse:
      title: SignalDecisionReportResponse
      description: SignalDecisionReportResponse defines the response schema for `/signal/decision/report`
      additionalProperties: true
      type: object
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - request_id
    SignalReturnReportRequest:
      title: SignalReturnReportRequest
      description: SignalReturnReportRequest defines the request schema for `/signal/return/report`
      type: object
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        client_transaction_id:
          type: string
          description: Must be the same as the `client_transaction_id` supplied when calling `/signal/evaluate`
          minLength: 1
          maxLength: 36
        return_code:
          type: string
          description: |-
            Must be a valid ACH return code (e.g. "R01")

            If formatted incorrectly, this will result in an [`INVALID_FIELD`](/docs/errors/invalid-request/#invalid_field) error.
        returned_at:
          type: string
          format: date-time
          description: Date and time when you receive the returns from your payment processors, in ISO 8601 format (`YYYY-MM-DDTHH:mm:ssZ`).
          nullable: true
      required:
      - client_transaction_id
      - return_code
    SignalReturnReportResponse:
      title: SignalReturnReportResponse
      description: SignalReturnReportResponse defines the response schema for `/signal/return/report`
      additionalProperties: true
      type: object
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - request_id
    SignalPrepareRequest:
      title: SignalPrepareRequest
      description: SignalPrepareRequest defines the request schema for `/signal/prepare`
      type: object
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        access_token:
          $ref: '#/components/schemas/AccessToken'
      required:
      - access_token
    SignalPrepareResponse:
      title: SignalPrepareResponse
      description: SignalPrepareResponse defines the response schema for `/signal/prepare`
      additionalProperties: true
      type: object
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - request_id
    ProcessorSignalEvaluateRequest:
      title: ProcessorSignalEvaluateRequest
      description: ProcessorSignalEvaluateRequest defines the request schema for `/processor/signal/evaluate`
      type: object
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        processor_token:
          $ref: '#/components/schemas/ProcessorToken'
        client_transaction_id:
          type: string
          description: The unique ID that you would like to use to refer to this transaction. For your convenience mapping your internal data, you could use your internal ID/identifier for this transaction. The max length for this field is 36 characters.
          minLength: 1
          maxLength: 36
        amount:
          type: number
          format: double
          description: The transaction amount, in USD (e.g. `102.05`)
        user_present:
          type: boolean
          description: '`true` if the end user is present while initiating the ACH transfer and the endpoint is being called; `false` otherwise (for example, when the ACH transfer is scheduled and the end user is not present, or you call this endpoint after the ACH transfer but before submitting the Nacha file for ACH processing).'
          nullable: true
        client_user_id:
          type: string
          description: A unique ID that identifies the end user in your system. This ID is used to correlate requests by a user with multiple Items. Personally identifiable information, such as an email address or phone number, should not be used in the `client_user_id`.
        is_recurring:
          type: boolean
          description: '**true** if the ACH transaction is a recurring transaction; **false** otherwise '
          nullable: true
        default_payment_method:
          type: string
          description: |-
            The default ACH or non-ACH payment method to complete the transaction.
            `SAME_DAY_ACH`: Same Day ACH by NACHA. The debit transaction is processed and settled on the same day
            `NEXT_DAY_ACH`: Next Day ACH settlement for debit transactions, offered by some payment processors
            `STANDARD_ACH`: standard ACH by NACHA
            `REAL_TIME_PAYMENTS`: real-time payments such as RTP and FedNow
            `DEBIT_CARD`: if the default payment is over debit card networks
            `MULTIPLE_PAYMENT_METHODS`: if there is no default debit rail or there are multiple payment methods
            Possible values:  `SAME_DAY_ACH`, `NEXT_DAY_ACH`, `STANDARD_ACH`, `REAL_TIME_PAYMENTS`, `DEBIT_CARD`, `MULTIPLE_PAYMENT_METHODS`
          nullable: true
        user:
          $ref: '#/components/schemas/SignalUser'
        device:
          $ref: '#/components/schemas/SignalDevice'
      required:
      - processor_token
      - client_transaction_id
      - amount
    ProcessorSignalEvaluateResponse:
      title: ProcessorSignalEvaluateResponse
      description: ProcessorSignalEvaluateResponse defines the response schema for `/processor/signal/evaluate`
      type: object
      additionalProperties: true
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
        scores:
          $ref: '#/components/schemas/SignalScores'
        core_attributes:
          $ref: '#/components/schemas/SignalEvaluateCoreAttributes'
        warnings:
          type: array
          description: If bank information was not available to be used in the Signal model, this array contains warnings describing why bank data is missing. If you want to receive an API error instead of Signal scores in the case of missing bank data, file a support ticket or contact your Plaid account manager.
          items:
            $ref: '#/components/schemas/SignalWarning'
      required:
      - request_id
      - scores
    ProcessorSignalDecisionReportRequest:
      title: ProcessorSignalDecisionReportRequest
      description: ProcessorSignalDecisionReportRequest defines the request schema for `/processor/signal/decision/report`
      type: object
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        processor_token:
          $ref: '#/components/schemas/ProcessorToken'
        client_transaction_id:
          type: string
          description: Must be the same as the `client_transaction_id` supplied when calling `/signal/evaluate`
          minLength: 1
          maxLength: 36
        initiated:
          type: boolean
          description: |-
            `true` if the ACH transaction was initiated, `false` otherwise.

            This field must be returned as a boolean. If formatted incorrectly, this will result in an [`INVALID_FIELD`](/docs/errors/invalid-request/#invalid_field) error.
        days_funds_on_hold:
          type: integer
          description: |-
            The actual number of days (hold time) since the ACH debit transaction that you wait before making funds available to your customers. The holding time could affect the ACH return rate.

            For example, use 0 if you make funds available to your customers instantly or the same day following the debit transaction, or 1 if you make funds available the next day following the debit initialization.
          minimum: 0
          nullable: true
        decision_outcome:
          $ref: '#/components/schemas/SignalDecisionOutcome'
        payment_method:
          $ref: '#/components/schemas/SignalPaymentMethod'
        amount_instantly_available:
          type: number
          format: double
          description: 'The amount (in USD) made available to your customers instantly following the debit transaction. It could be a partial amount of the requested transaction (example: 102.05).'
          nullable: true
      required:
      - processor_token
      - client_transaction_id
      - initiated
    ProcessorSignalDecisionReportResponse:
      title: ProcessorSignalDecisionReportResponse
      description: ProcessorSignalDecisionReportResponse defines the response schema for `/processor/signal/decision/report`
      additionalProperties: true
      type: object
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - request_id
    ProcessorSignalReturnReportRequest:
      title: ProcessorSignalReturnReportRequest
      description: ProcessorSignalReturnReportRequest defines the request schema for `/processor/signal/return/report`
      type: object
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        processor_token:
          $ref: '#/components/schemas/ProcessorToken'
        client_transaction_id:
          type: string
          description: Must be the same as the `client_transaction_id` supplied when calling `/processor/signal/evaluate`
          minLength: 1
          maxLength: 36
        return_code:
          type: string
          description: |-
            Must be a valid ACH return code (e.g. "R01")

            If formatted incorrectly, this will result in an [`INVALID_FIELD`](/docs/errors/invalid-request/#invalid_field) error.
        returned_at:
          type: string
          format: date-time
          description: Date and time when you receive the returns from your payment processors, in ISO 8601 format (`YYYY-MM-DDTHH:mm:ssZ`).
          nullable: true
      required:
      - processor_token
      - client_transaction_id
      - return_code
    ProcessorSignalReturnReportResponse:
      title: ProcessorSignalReturnReportResponse
      description: ProcessorSignalReturnReportResponse defines the response schema for `/processor/signal/return/report`
      additionalProperties: true
      type: object
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - request_id
    ProcessorSignalPrepareRequest:
      title: ProcessorSignalPrepareRequest
      description: ProcessorSignalPrepareRequest defines the request schema for `/processor/signal/prepare`
      type: object
      properties:
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        processor_token:
          $ref: '#/components/schemas/ProcessorToken'
      required:
      - processor_token
    ProcessorSignalPrepareResponse:
      title: ProcessorSignalPrepareResponse
      description: ProcessorSignalPrepareResponse defines the response schema for `/processor/signal/prepare`
      additionalProperties: true
      type: object
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - request_id
    SignalScores:
      title: SignalEvaluateScores
      description: Risk scoring details broken down by risk category.
      type: object
      additionalProperties: true
      properties:
        customer_initiated_return_risk:
          $ref: '#/components/schemas/CustomerInitiatedReturnRisk'
        bank_initiated_return_risk:
          $ref: '#/components/schemas/BankInitiatedReturnRisk'
    SignalScore:
      description: 'A score from 1-99 that indicates the transaction return risk: a higher risk score suggests a higher return likelihood.'
      type: integer
      minimum: 1
      maximum: 99
    CustomerInitiatedReturnRisk:
      title: CustomerInitiatedReturnRisk
      type: object
      description: 'The object contains a risk score and a risk tier that evaluate the transaction return risk of an unauthorized debit. Common return codes in this category include: "R05", "R07", "R10", "R11", "R29". These returns typically have a return time frame of up to 60 calendar days. During this period, the customer of financial institutions can dispute a transaction as unauthorized.'
      properties:
        score:
          $ref: '#/components/schemas/SignalScore'
        risk_tier:
          $ref: '#/components/schemas/CustomerInitiatedRiskTier'
      required:
      - risk_tier
      - score
    CustomerInitiatedRiskTier:
      description: |
        A tier corresponding to the projected likelihood that the transaction, if initiated, will be subject to a return.

        In the `customer_initiated_return_risk` object, there are five risk tiers corresponding to the scores:
          1: Predicted customer-initiated return incidence rate between 0.00% - 0.02%
          2: Predicted customer-initiated return incidence rate between 0.02% - 0.05%
          3: Predicted customer-initiated return incidence rate between 0.05% - 0.1%
          4: Predicted customer-initiated return incidence rate between 0.1% - 0.5%
          5: Predicted customer-initiated return incidence rate greater than 0.5%
      type: integer
      minimum: 1
      maximum: 5
    BankInitiatedReturnRisk:
      title: BankInitiatedReturnRisk
      type: object
      description: 'The object contains a risk score and a risk tier that evaluate the transaction return risk because an account is overdrawn or because an ineligible account is used. Common return codes in this category include: "R01", "R02", "R03", "R04", "R06", "R08",  "R09", "R13", "R16", "R17", "R20", "R23". These returns have a turnaround time of 2 banking days.'
      properties:
        score:
          $ref: '#/components/schemas/SignalScore'
        risk_tier:
          $ref: '#/components/schemas/BankInitiatedRiskTier'
      required:
      - risk_tier
      - score
    BankInitiatedRiskTier:
      description: |
        In the `bank_initiated_return_risk` object, there are eight risk tiers corresponding to the scores:
          1: Predicted bank-initiated return incidence rate between 0.0% - 0.5%
          2: Predicted bank-initiated return incidence rate between 0.5% - 1.5%
          3: Predicted bank-initiated return incidence rate between 1.5% - 3%
          4: Predicted bank-initiated return incidence rate between 3% - 5%
          5: Predicted bank-initiated return incidence rate between 5% - 10%
          6: Predicted bank-initiated return incidence rate between 10% - 15%
          7: Predicted bank-initiated return incidence rate between 15% and 50%
          8: Predicted bank-initiated return incidence rate greater than 50%
      type: integer
      minimum: 1
      maximum: 8
    SignalWarning:
      title: SignalWarning
      type: object
      description: Conveys information about the errors causing missing or stale bank data used to construct the /signal/evaluate scores and response
      properties:
        warning_type:
          type: string
          description: A broad categorization of the warning. Safe for programmatic use.
        warning_code:
          type: string
          description: The warning code identifies a specific kind of warning that pertains to the error causing bank data to be missing. Safe for programmatic use. For more details on warning codes, please refer to Plaid standard error codes documentation. If you receive the `ITEM_LOGIN_REQUIRED` warning, we recommend re-authenticating your user by implementing Link's update mode. This will guide your user to fix their credentials, allowing Plaid to start fetching data again for future Signal requests.
        warning_message:
          type: string
          description: A developer-friendly representation of the warning type. This may change over time and is not safe for programmatic use.
    SignalUser:
      title: SignalUser
      type: object
      description: Details about the end user initiating the transaction (i.e., the account holder).
      properties:
        name:
          $ref: '#/components/schemas/SignalPersonName'
        phone_number:
          type: string
          description: 'The user''s phone number, in E.164 format: +{countrycode}{number}. For example: "+14151234567"'
          nullable: true
        email_address:
          type: string
          description: The user's email address.
          nullable: true
        address:
          $ref: '#/components/schemas/SignalAddressData'
    SignalPersonName:
      title: SignalPersonName
      type: object
      description: The user's legal name
      nullable: true
      properties:
        prefix:
          type: string
          description: The user's name prefix (e.g. "Mr.")
          nullable: true
        given_name:
          type: string
          description: The user's given name. If the user has a one-word name, it should be provided in this field.
          nullable: true
        middle_name:
          type: string
          description: The user's middle name
          nullable: true
        family_name:
          type: string
          description: The user's family name / surname
          nullable: true
        suffix:
          type: string
          description: The user's name suffix (e.g. "II")
          nullable: true
    SignalAddressData:
      title: AddressData
      type: object
      nullable: true
      additionalProperties: true
      description: Data about the components comprising an address.
      properties:
        city:
          type: string
          description: The full city name
        region:
          type: string
          description: |-
            The region or state
            Example: `"NC"`
          nullable: true
        street:
          type: string
          description: |-
            The full street address
            Example: `"564 Main Street, APT 15"`
        postal_code:
          type: string
          description: The postal code
          nullable: true
        country:
          type: string
          description: The ISO 3166-1 alpha-2 country code
          nullable: true
    SignalDevice:
      title: SignalEvaluateDevice
      type: object
      description: Details about the end user's device
      properties:
        ip_address:
          type: string
          description: The IP address of the device that initiated the transaction
          nullable: true
        user_agent:
          type: string
          description: The user agent of the device that initiated the transaction (e.g. "Mozilla/5.0")
          nullable: true
    RiskProfile:
      x-hidden-from-docs: true
      title: SignalEvaluateRiskProfile
      type: object
      description: Details about the transaction result after evaluated by the requested risk profile. If a `risk_profile_key` is not provided, this field will be omitted. This feature is currently in closed beta; to request access, contact your account manager.
      nullable: true
      properties:
        key:
          type: string
          description: The name of the risk profile used for this transaction.
        outcome:
          type: string
          description: The name of the evaluated outcome for this transaction.
    SignalDecisionOutcome:
      type: string
      enum:
      - APPROVE
      - REVIEW
      - REJECT
      - TAKE_OTHER_RISK_MEASURES
      - NOT_EVALUATED
      description: |
        The payment decision from the risk assessment.

        `APPROVE`: approve the transaction without requiring further actions from your customers. For example, use this field if you are placing a standard hold for all the approved transactions before making funds available to your customers. You should also use this field if you decide to accelerate the fund availability for your customers.

        `REVIEW`: the transaction requires manual review

        `REJECT`: reject the transaction

        `TAKE_OTHER_RISK_MEASURES`: for example, placing a longer hold on funds than those approved transactions or introducing customer frictions such as step-up verification/authentication

        `NOT_EVALUATED`: if only logging the Signal results without using them

        Possible values:  `APPROVE`, `REVIEW`, `REJECT`, `TAKE_OTHER_RISK_MEASURES`, `NOT_EVALUATED`
      nullable: true
    SignalPaymentMethod:
      type: string
      enum:
      - SAME_DAY_ACH
      - NEXT_DAY_ACH
      - STANDARD_ACH
      - REAL_TIME_PAYMENTS
      - DEBIT_CARD
      - MULTIPLE_PAYMENT_METHODS
      description: |
        The payment method to complete the transaction after the risk assessment. It may be different from the default payment method.

        `SAME_DAY_ACH`: Same Day ACH by NACHA. The debit transaction is processed and settled on the same day

        `NEXT_DAY_ACH`: Next Day ACH settlement for debit transactions, offered by some payment processors

        `STANDARD_ACH`: standard ACH by NACHA

        `REAL_TIME_PAYMENTS`: real-time payments such as RTP and FedNow

        `DEBIT_CARD`: if the default payment is over debit card networks

        `MULTIPLE_PAYMENT_METHODS`: if there is no default debit rail or there are multiple payment methods

        Possible values: `SAME_DAY_ACH`, `NEXT_DAY_ACH`, `STANDARD_ACH`, `REAL_TIME_PAYMENTS`, `DEBIT_CARD`, `MULTIPLE_PAYMENT_METHODS`
      nullable: true
    SignalEvaluateCoreAttributes:
      title: SignalEvaluateCoreAttributes
      type: object
      description: |-
        The core attributes object contains additional data that can be used to assess the ACH return risk. Examples of data include:

        `days_since_first_plaid_connection`: The number of days since the first time the Item was connected to an application via Plaid
        `plaid_connections_count_7d`: The number of times the Item has been connected to applications via Plaid over the past 7 days
        `plaid_connections_count_30d`: The number of times the Item has been connected to applications via Plaid over the past 30 days
        `total_plaid_connections_count`: The number of times the Item has been connected to applications via Plaid
        `is_savings_or_money_market_account`: Indicates whether the ACH transaction funding account is a savings/money market account

        For the full list and detailed documentation of core attributes available, or to request that core attributes not be returned, contact Sales or your Plaid account manager
      properties:
        unauthorized_transactions_count_7d:
          type: integer
          description: We parse and analyze historical transaction metadata to identify the number of possible past returns due to unauthorized transactions over the past 7 days from the account that will be debited.
          nullable: true
        unauthorized_transactions_count_30d:
          type: integer
          description: We parse and analyze historical transaction metadata to identify the number of possible past returns due to unauthorized transactions over the past 30 days from the account that will be debited.
          nullable: true
        unauthorized_transactions_count_60d:
          type: integer
          description: We parse and analyze historical transaction metadata to identify the number of possible past returns due to unauthorized transactions over the past 60 days from the account that will be debited.
          nullable: true
        unauthorized_transactions_count_90d:
          type: integer
          description: We parse and analyze historical transaction metadata to identify the number of possible past returns due to unauthorized transactions over the past 90 days from the account that will be debited.
          nullable: true
        nsf_overdraft_transactions_count_7d:
          type: integer
          description: We parse and analyze historical transaction metadata to identify the number of possible past returns due to non-sufficient funds/overdrafts over the past 7 days from the account that will be debited.
          nullable: true
        nsf_overdraft_transactions_count_30d:
          type: integer
          description: We parse and analyze historical transaction metadata to identify the number of possible past returns due to non-sufficient funds/overdrafts over the past 30 days from the account that will be debited.
          nullable: true
        nsf_overdraft_transactions_count_60d:
          type: integer
          description: We parse and analyze historical transaction metadata to identify the number of possible past returns due to non-sufficient funds/overdrafts over the past 60 days from the account that will be debited.
          nullable: true
        nsf_overdraft_transactions_count_90d:
          type: integer
          description: We parse and analyze historical transaction metadata to identify the number of possible past returns due to non-sufficient funds/overdrafts over the past 90 days from the account that will be debited.
          nullable: true
        days_since_first_plaid_connection:
          type: integer
          description: The number of days since the first time the Item was connected to an application via Plaid
          nullable: true
        plaid_connections_count_7d:
          type: integer
          description: The number of times the Item has been connected to applications via Plaid over the past 7 days
          nullable: true
        plaid_connections_count_30d:
          type: integer
          description: The number of times the Item has been connected to applications via Plaid over the past 30 days
          nullable: true
        total_plaid_connections_count:
          type: integer
          description: The total number of times the Item has been connected to applications via Plaid
          nullable: true
        is_savings_or_money_market_account:
          type: boolean
          description: Indicates if the ACH transaction funding account is a savings/money market account
          nullable: true
        total_credit_transactions_amount_10d:
          type: number
          format: double
          description: The total credit (inflow) transaction amount over the past 10 days from the account that will be debited
          nullable: true
        total_debit_transactions_amount_10d:
          type: number
          format: double
          description: The total debit (outflow) transaction amount over the past 10 days from the account that will be debited
          nullable: true
        p50_credit_transactions_amount_28d:
          type: number
          format: double
          description: The 50th percentile of all credit (inflow) transaction amounts over the past 28 days from the account that will be debited
          nullable: true
        p50_debit_transactions_amount_28d:
          type: number
          format: double
          description: The 50th percentile of all debit (outflow) transaction amounts over the past 28 days from the account that will be debited
          nullable: true
        p95_credit_transactions_amount_28d:
          type: number
          format: double
          description: The 95th percentile of all credit (inflow) transaction amounts over the past 28 days from the account that will be debited
          nullable: true
        p95_debit_transactions_amount_28d:
          type: number
          format: double
          description: The 95th percentile of all debit (outflow) transaction amounts over the past 28 days from the account that will be debited
          nullable: true
        days_with_negative_balance_count_90d:
          type: integer
          description: The number of days within the past 90 days when the account that will be debited had a negative end-of-day available balance
          nullable: true
        p90_eod_balance_30d:
          type: number
          format: double
          description: The 90th percentile of the end-of-day available balance over the past 30 days of the account that will be debited
          nullable: true
        p90_eod_balance_60d:
          type: number
          format: double
          description: The 90th percentile of the end-of-day available balance over the past 60 days of the account that will be debited
          nullable: true
        p90_eod_balance_90d:
          type: number
          format: double
          description: The 90th percentile of the end-of-day available balance over the past 90 days of the account that will be debited
          nullable: true
        p10_eod_balance_30d:
          type: number
          format: double
          description: The 10th percentile of the end-of-day available balance over the past 30 days of the account that will be debited
          nullable: true
        p10_eod_balance_60d:
          type: number
          format: double
          description: The 10th percentile of the end-of-day available balance over the past 60 days of the account that will be debited
          nullable: true
        p10_eod_balance_90d:
          type: number
          format: double
          description: The 10th percentile of the end-of-day available balance over the past 90 days of the account that will be debited
          nullable: true
        available_balance:
          type: number
          format: double
          description: Available balance, as of the `balance_last_updated` time. The available balance is the current balance less any outstanding holds or debits that have not yet posted to the account.
          nullable: true
        current_balance:
          type: number
          format: double
          description: Current balance, as of the `balance_last_updated` time. The current balance is the total amount of funds in the account.
          nullable: true
        balance_last_updated:
          type: string
          format: date-time
          description: Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DDTHH:mm:ssZ) indicating the last time that the balance for the given account has been updated.
          nullable: true
        phone_change_count_28d:
          type: integer
          description: The number of times the account's phone numbers on file have changed over the past 28 days
          nullable: true
        phone_change_count_90d:
          type: integer
          description: The number of times the account's phone numbers on file have changed over the past 90 days
          nullable: true
        email_change_count_28d:
          type: integer
          description: The number of times the account's email addresses on file have changed over the past 28 days
          nullable: true
        email_change_count_90d:
          type: integer
          description: The number of times the account's email addresses on file have changed over the past 90 days
          nullable: true
        address_change_count_28d:
          type: integer
          description: The number of times the account's addresses on file have changed over the past 28 days
          nullable: true
        address_change_count_90d:
          type: integer
          description: The number of times the account's addresses on file have changed over the past 90 days
          nullable: true
        plaid_non_oauth_authentication_attempts_count_3d:
          type: integer
          description: The number of non-OAuth authentication attempts via Plaid for this bank account over the past 3 days
          nullable: true
        plaid_non_oauth_authentication_attempts_count_7d:
          type: integer
          description: The number of non-OAuth authentication attempts via Plaid for this bank account over the past 7 days
          nullable: true
        plaid_non_oauth_authentication_attempts_count_30d:
          type: integer
          description: The number of non-OAuth authentication attempts via Plaid for this bank account over the past 30 days
          nullable: true
        failed_plaid_non_oauth_authentication_attempts_count_3d:
          type: integer
          description: The number of failed non-OAuth authentication attempts via Plaid for this bank account over the past 3 days
          nullable: true
        failed_plaid_non_oauth_authentication_attempts_count_7d:
          type: integer
          description: The number of failed non-OAuth authentication attempts via Plaid for this bank account over the past 7 days
          nullable: true
        failed_plaid_non_oauth_authentication_attempts_count_30d:
          type: integer
          description: The number of failed non-OAuth authentication attempts via Plaid for this bank account over the past 30 days
          nullable: true
        debit_transactions_count_10d:
          type: integer
          description: The total number of debit (outflow) transactions over the past 10 days from the account that will be debited
          nullable: true
        credit_transactions_count_10d:
          type: integer
          description: The total number of credit (inflow) transactions over the past 10 days from the account that will be debited
          nullable: true
        debit_transactions_count_30d:
          type: integer
          description: The total number of debit (outflow) transactions over the past 30 days from the account that will be debited
          nullable: true
        credit_transactions_count_30d:
          type: integer
          description: The total number of credit (inflow) transactions over the past 30 days from the account that will be debited
          nullable: true
        debit_transactions_count_60d:
          type: integer
          description: The total number of debit (outflow) transactions over the past 60 days from the account that will be debited
          nullable: true
        credit_transactions_count_60d:
          type: integer
          description: The total number of credit (inflow) transactions over the past 60 days from the account that will be debited
          nullable: true
        debit_transactions_count_90d:
          type: integer
          description: The total number of debit (outflow) transactions over the past 90 days from the account that will be debited
          nullable: true
        credit_transactions_count_90d:
          type: integer
          description: The total number of credit (inflow) transactions over the past 90 days from the account that will be debited
          nullable: true
        total_debit_transactions_amount_30d:
          type: number
          format: double
          description: The total debit (outflow) transaction amount over the past 30 days from the account that will be debited
          nullable: true
        total_credit_transactions_amount_30d:
          type: number
          format: double
          description: The total credit (inflow) transaction amount over the past 30 days from the account that will be debited
          nullable: true
        total_debit_transactions_amount_60d:
          type: number
          format: double
          description: The total debit (outflow) transaction amount over the past 60 days from the account that will be debited
          nullable: true
        total_credit_transactions_amount_60d:
          type: number
          format: double
          description: The total credit (inflow) transaction amount over the past 60 days from the account that will be debited
          nullable: true
        total_debit_transactions_amount_90d:
          type: number
          format: double
          description: The total debit (outflow) transaction amount over the past 90 days from the account that will be debited
          nullable: true
        total_credit_transactions_amount_90d:
          type: number
          format: double
          description: The total credit (inflow) transaction amount over the past 90 days from the account that will be debited
          nullable: true
        p50_eod_balance_30d:
          type: number
          format: double
          description: The 50th percentile of the end-of-day available balance over the past 30 days of the account that will be debited
          nullable: true
        p50_eod_balance_60d:
          type: number
          format: double
          description: The 50th percentile of the end-of-day available balance over the past 60 days of the account that will be debited
          nullable: true
        p50_eod_balance_90d:
          type: number
          format: double
          description: The 50th percentile of the end-of-day available balance over the past 90 days of the account that will be debited
          nullable: true
        p50_eod_balance_31d_to_60d:
          type: number
          format: double
          description: The 50th percentile of the end-of-day available balance between day 31 and day 60 over the past 60 days of the account that will be debited
          nullable: true
        p50_eod_balance_61d_to_90d:
          type: number
          format: double
          description: The 50th percentile of the end-of-day available balance between day 61 and day 90 over the past 60 days of the account that will be debited
          nullable: true
        p90_eod_balance_31d_to_60d:
          type: number
          format: double
          description: The 90th percentile of the end-of-day available balance between day 31 and day 60 over the past 60 days of the account that will be debited
          nullable: true
        p90_eod_balance_61d_to_90d:
          type: number
          format: double
          description: The 90th percentile of the end-of-day available balance between day 61 and day 90 over the past 60 days of the account that will be debited
          nullable: true
        p10_eod_balance_31d_to_60d:
          type: number
          format: double
          description: The 10th percentile of the end-of-day available balance between day 31 and day 60 over the past 60 days of the account that will be debited
          nullable: true
        p10_eod_balance_61d_to_90d:
          type: number
          format: double
          description: The 10th percentile of the end-of-day available balance between day 61 and day 90 over the past 60 days of the account that will be debited
          nullable: true
        transactions_last_updated:
          type: string
          format: date-time
          description: Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DDTHH:mm:ssZ) indicating the last time that the transactions for the given account have been updated.
          nullable: true
        is_account_closed:
          type: boolean
          description: Indicates if the receiver bank account is closed
          nullable: true
        is_account_frozen_or_restricted:
          type: boolean
          description: Indicates if the receiver bank account is either frozen or restricted
          nullable: true
    StatementsListRequest:
      title: StatementsListRequest
      type: object
      description: StatementsListRequest defines the request schema for `/statements/list`
      properties:
        access_token:
          $ref: '#/components/schemas/AccessToken'
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
      required:
      - access_token
    StatementsListResponse:
      title: StatementsListResponse
      type: object
      additionalProperties: true
      description: StatementsListResponse defines the response schema for `/statements/list`
      properties:
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/StatementsAccount'
        institution_id:
          description: The Plaid Institution ID associated with the Item.
          type: string
        institution_name:
          description: The name of the institution associated with the Item.
          type: string
        item_id:
          description: The Plaid Item ID. The `item_id` is always unique; linking the same account at the same institution twice will result in two Items with different `item_id` values. Like all Plaid identifiers, the `item_id` is case-sensitive.
          type: string
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - accounts
      - institution_id
      - institution_name
      - item_id
      - request_id
    StatementsAccount:
      title: StatementsAccount
      type: object
      additionalProperties: true
      description: Account associated with the Item.
      properties:
        account_id:
          description: Plaid's unique identifier for the account.
          type: string
        account_mask:
          description: The last 2-4 alphanumeric characters of an account's official account number. Note that the mask may be non-unique between an Item's accounts, and it may also not match the mask that the bank displays to the user.
          type: string
        account_name:
          description: The name of the account, either assigned by the user or by the financial institution itself.
          type: string
        account_official_name:
          description: The official name of the account as given by the financial institution.
          type: string
        account_subtype:
          description: The subtype of the account. For a full list of valid types and subtypes, see the [Account schema](https://plaid.com/docs/api/accounts#account-type-schema).
          type: string
        account_type:
          description: The type of account. For a full list of valid types and subtypes, see the [Account schema](https://plaid.com/docs/api/accounts#account-type-schema).
          type: string
        statements:
          description: The list of statements' metadata associated with this account.
          type: array
          items:
            $ref: '#/components/schemas/StatementsStatement'
      required:
      - account_id
      - account_name
      - account_official_name
      - account_subtype
      - account_type
      - account_mask
      - statements
    StatementsStatement:
      title: StatementsStatement
      type: object
      additionalProperties: true
      description: A statement's metadata associated with an account
      properties:
        statement_id:
          description: Plaid's unique identifier for the statement.
          type: string
        month:
          description: 'Month of the year. Possible values: 1 through 12 (January through December).'
          type: integer
        year:
          description: The year of statement.
          type: integer
          minimum: 2010
      required:
      - statement_id
      - month
      - year
    StatementsDownloadRequest:
      title: StatementsDownloadRequest
      type: object
      description: StatementsDownloadRequest defines the request schema for `/statements/download`
      properties:
        access_token:
          $ref: '#/components/schemas/AccessToken'
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        statement_id:
          description: Plaid's unique identifier for the statements.
          type: string
      required:
      - access_token
      - statement_id
    StatementsDownloadResponse:
      title: StatementsDownloadResponse
      format: binary
      type: string
      description: StatementsDownloadResponse defines the response schema for `/statements/download`. The response will contain a `Plaid-Content-Hash` header containing a SHA 256 checksum of the statement. This can be used to verify that the file being sent by Plaid is the same file that was downloaded to your systems.
    StatementsRefreshRequest:
      title: StatementsRefreshRequest
      type: object
      description: StatementsRefreshRequest defines the request schema for `/statements/refresh`
      properties:
        access_token:
          $ref: '#/components/schemas/AccessToken'
        client_id:
          $ref: '#/components/schemas/APIClientID'
        secret:
          $ref: '#/components/schemas/APISecret'
        start_date:
          description: The start date for statements, in “YYYY-MM-DD” format, e.g. "2023-08-30". To determine whether a statement falls within the specified date range, Plaid will use the statement posted date. The statement posted date is typically either the last day of the statement period, or the following day.
          type: string
          format: date
        end_date:
          description: The end date for statements, in “YYYY-MM-DD” format, e.g. "2023-10-30". You can request up to two years of data. To determine whether a statement falls within the specified date range, Plaid will use the statement posted date. The statement posted date is typically either the last day of the statement period, or the following day.
          type: string
          format: date
      required:
      - access_token
      - start_date
      - end_date
    StatementsRefreshResponse:
      title: StatementsRefreshResponse
      type: object
      additionalProperties: true
      description: StatementsRefreshResponse defines the response schema for `/statements/refresh`
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
      - request_id